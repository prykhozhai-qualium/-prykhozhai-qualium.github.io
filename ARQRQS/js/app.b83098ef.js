(function(){"use strict";var e={4204:function(e,t,n){var s=n(5130),a=n(6768);const r={id:"app"};function i(e,t){const n=(0,a.g2)("router-view");return(0,a.uX)(),(0,a.CE)("div",r,[(0,a.bF)(n)])}var o=n(1241);const l={},u=(0,o.A)(l,[["render",i]]);var c=u,d=n(782),h=(n(4114),n(8992),n(3949),n(9474),n(6573),n(8100),n(7936),n(7642),n(8004),n(3853),n(5876),n(2475),n(5024),n(1698),n(779),n(4460),n(9385),n(2278),n(9951),n(6648),n(1185),n(9789),n(2814),n(4600),n(9550),n(4603),n(7566),n(3345),n(872));n(9956),n(6885),n(9859),n(1219),n(1e3);const p=(e,t)=>{const n=2*Math.PI*t*e;return n/(n+1)},m=(e,t,n)=>e*t+(1-e)*n;class f{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map((()=>0)),this.tPrev=e,t;const{xPrev:n,tPrev:s,dxPrev:a}=this,r=e-s,i=p(r,this.dCutOff),o=[],l=[],u=[];for(let c=0;c<t.length;c++){o[c]=(t[c]-n[c])/r,l[c]=m(i,o[c],a[c]);const e=this.minCutOff+this.beta*Math.abs(l[c]),s=p(r,e);u[c]=m(s,t[c],n[c])}return this.xPrev=u,this.dxPrev=l,this.tPrev=e,u}}const g='<div class="mindar-ui-overlay mindar-ui-loading">\n  <div class="loader"/>\n</div>\n',b='<div class="mindar-ui-overlay mindar-ui-compatibility">\n  <div class="content">\n    <h1>Failed to launch :(</h1>\n    <p>\n      Looks like your device/browser is not compatible.\n    </p>\n\n    <br/>\n    <br/>\n    <p>\n      Please try the following recommended browsers:\n    </p>\n    <p>\n      For Android device - Chrome\n    </p>\n    <p>\n      For iOS device - Safari\n    </p>\n  </div>\n</div>\n',y='<div class="mindar-ui-overlay mindar-ui-scanning">\n  <div class="scanning">\n    <div class="inner">\n      <div class="scanline"/>\n    </div>\n  </div>\n</div>\n',x=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}";class w{constructor({uiLoading:e,uiScanning:t,uiError:n}){const s=document.createElement("style");s.innerText=x,document.head.appendChild(s),"yes"===e?this.loadingModal=this._loadHTML(g):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML(b):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML(y):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}function v(e,t){for(var n=0;n<t.length;n++){const s=t[n];if("string"!=typeof s&&!Array.isArray(s))for(const t in s)if("default"!==t&&!(t in e)){const n=Object.getOwnPropertyDescriptor(s,t);n&&Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:()=>s[t]})}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k=1e-7,I=1e-4;class S{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class T{refCount(e){return N("refCount")}incRef(e){return N("incRef")}timerAvailable(){return!0}time(e){return N("time")}read(e){return N("read")}readSync(e){return N("readSync")}readToGPU(e,t){return N("readToGPU")}numDataIds(){return N("numDataIds")}disposeData(e,t){return N("disposeData")}write(e,t,n){return N("write")}move(e,t,n,s,a){return N("move")}createTensorFromGPUData(e,t,n){return N("createTensorFromGPUData")}memory(){return N("memory")}floatPrecision(){return N("floatPrecision")}epsilon(){return 32===this.floatPrecision()?k:I}dispose(){return N("dispose")}}function N(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,M(e,t,n)}function R(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,M(e,n,s),M(t,n,s)}function E(e,t,n){return Math.max(e,Math.min(t,n))}function G(e){return e%2===0?e:e+1}function M(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function L(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function z(e,t){const n=Math.random();return t*n+(1-n)*e}function W(e,t){let n=0;for(let s=0;s<e.length;s++){const a=Number(e[s])-Number(t[s]);n+=a*a}return n}function $(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function F(e,t,n=""){$(D(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function V(e){$(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function O(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function A(e){return 0===e.length}function X(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function D(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Z(e){return e%1===0}function K(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function P(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function _(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return C(t),t}function B(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function H(e,t=e=>0,n,s){return new Promise(((a,r)=>{let i=0;const o=()=>{if(e())return void a();i++;const l=t(i);null!=n&&i>=n?r():null!=s?s(o,l):setTimeout(o,l)};o()}))}function U(e,t){let n=1,s=-1;for(let r=0;r<e.length;++r)if(e[r]>=0)n*=e[r];else if(-1===e[r]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(e[r]<0)throw Error(`Shapes can not be < 0. Found ${e[r]} at dim ${r}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[s]=t/n,a}function Y(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),$(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),$(e.every((e=>Z(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function j(e,t){const n=[],s=[],a=null!=t&&Array.isArray(t)&&0===t.length,r=null==t||a?null:Y(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=r){if(r[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==r[i]||r[i]>o)&&1===e[o]&&(n.push(e[o]),s.push(o)),r[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function Q(e,t){return J(e,t)}function J(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function q(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function ee(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function te(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function se(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ae(e){return"string"==typeof e||e instanceof String}function re(e){return"boolean"==typeof e}function ie(e){return"number"==typeof e}function oe(e){return Array.isArray(e)?oe(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ie(e)?"float32":ae(e)?"string":re(e)?"bool":"float32"}function le(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ue(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ce(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function de(e,t,n,s=!1){const a=new Array;if(1===t.length){const r=t[0]*(s?2:1);for(let t=0;t<r;t++)a[t]=n[e+t]}else{const r=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<r;t++)a[t]=de(e+t*o,i,n,s)}return a}function he(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return de(0,e,t,n)}function pe(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function me(e,t){const n=fe(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function fe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ge(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return he(e,new Float32Array(n));if("int32"===t)return he(e,new Int32Array(n));if("bool"===t)return he(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function be(e){e.forEach((t=>{$(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ye(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let a=0;a<e.length-1;++a)s+=n[a]*e[a];return s}function xe(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(e/n[a]),e-=s[a]*n[a];return s[s.length-1]=e,s}function we(e){return e&&e.then&&"function"==typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ve="tfjsflags";class ke{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ie,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ne().getBool("IS_TEST")||Ne().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ne().getBool("IS_TEST")||Ne().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(we(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);ve in e&&e[ve].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=Te(t,n)}))}}function Ie(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(Se(t,n[0],n[1]),n.join("=")))),t}function Se(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function Te(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}function Ne(){return Re}let Ce,Re=null;function Ee(e){Re=e}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(){if(null==Ce){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");e=self}Ce=e}return Ce}function Me(){const e=Ge();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function Le(e,t){const n=Me();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const ze="Abs",We="Acos",$e="Acosh",Fe="Add",Ve="AddN",Oe="All",Ae="Any",Xe="ArgMax",De="ArgMin",Ze="Asin",Ke="Asinh",Pe="Atan",_e="Atanh",Be="Atan2",He="AvgPool",Ue="AvgPoolGrad",Ye="AvgPool3D",je="AvgPool3DGrad",Qe="BatchMatMul",Je="BatchToSpaceND",qe="Bincount",et="BitwiseAnd",tt="BroadcastTo",nt="BroadcastArgs",st="Cast",at="Ceil",rt="ClipByValue",it="Complex",ot="ComplexAbs",lt="Concat",ut="Conv2D",ct="Conv2DBackpropFilter",dt="Conv2DBackpropInput",ht="Conv3D",pt="Conv3DBackpropFilterV2",mt="Conv3DBackpropInputV2",ft="Cos",gt="Cosh",bt="Cumprod",yt="Cumsum",xt="CropAndResize",wt="DenseBincount",vt="DepthToSpace",kt="DepthwiseConv2dNative",It="DepthwiseConv2dNativeBackpropFilter",St="DepthwiseConv2dNativeBackpropInput",Tt="Diag",Nt="Dilation2D",Ct="Dilation2DBackpropInput",Rt="Dilation2DBackpropFilter",Et="Draw",Gt="RealDiv",Mt="Einsum",Lt="Elu",zt="EluGrad",Wt="Erf",$t="Equal",Ft="Exp",Vt="ExpandDims",Ot="Expm1",At="FFT",Xt="Fill",Dt="FlipLeftRight",Zt="Floor",Kt="FloorDiv",Pt="FusedBatchNorm",_t="GatherV2",Bt="GatherNd",Ht="Greater",Ut="GreaterEqual",Yt="Identity",jt="IFFT",Qt="Imag",Jt="IsFinite",qt="IsInf",en="IsNan",tn="LeakyRelu",nn="Less",sn="LessEqual",an="LinSpace",rn="Log",on="Log1p",ln="LogicalAnd",un="LogicalNot",cn="LogicalOr",dn="LogicalXor",hn="LogSoftmax",pn="LowerBound",mn="LRN",fn="LRNGrad",gn="MatrixBandPart",bn="Max",yn="Maximum",xn="MaxPool",wn="MaxPoolGrad",vn="MaxPool3D",kn="MaxPool3DGrad",In="MaxPoolWithArgmax",Sn="Mean",Tn="Min",Nn="Minimum",Cn="MirrorPad",Rn="Mod",En="Multinomial",Gn="Multiply",Mn="Neg",Ln="NotEqual",zn="NonMaxSuppressionV3",Wn="NonMaxSuppressionV4",$n="NonMaxSuppressionV5",Fn="OnesLike",Vn="OneHot",On="Pack",An="PadV2",Xn="Pool",Dn="Pow",Zn="Prelu",Kn="Prod",Pn="RaggedGather",_n="RaggedRange",Bn="RaggedTensorToTensor",Hn="Range",Un="Real",Yn="Reciprocal",jn="Relu",Qn="Reshape",Jn="ResizeNearestNeighbor",qn="ResizeNearestNeighborGrad",es="ResizeBilinear",ts="ResizeBilinearGrad",ns="Relu6",ss="Reverse",as="Round",rs="Rsqrt",is="ScatterNd",os="TensorScatterUpdate",ls="SearchSorted",us="Select",cs="Selu",ds="Slice",hs="Sin",ps="Sinh",ms="Sign",fs="Sigmoid",gs="Softplus",bs="Sqrt",ys="Sum",xs="SpaceToBatchND",ws="SplitV",vs="Softmax",ks="SparseFillEmptyRows",Is="SparseReshape",Ss="SparseSegmentMean",Ts="SparseSegmentSum",Ns="SparseToDense",Cs="SquaredDifference",Rs="Square",Es="StaticRegexReplace",Gs="StridedSlice",Ms="StringNGrams",Ls="StringSplit",zs="StringToHashBucketFast",Ws="Sub",$s="Tan",Fs="Tanh",Vs="Tile",Os="TopK",As="Transform",Xs="Transpose",Ds="Unique",Zs="Unpack",Ks="UnsortedSegmentSum",Ps="UpperBound",_s="ZerosLike",Bs="Step",Hs="FromPixels",Us="RotateWithOffset",Ys="_FusedMatMul",js="FusedConv2D",Qs="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(...e){Ne().getBool("IS_TEST")||Ne().getBool("PROD")||console.warn(...e)}function qs(...e){Ne().getBool("IS_TEST")||Ne().getBool("PROD")||console.log(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea=Le("kernelRegistry",(()=>new Map)),ta=Le("gradRegistry",(()=>new Map));function na(e,t){const n=ca(e,t);return ea.get(n)}function sa(e){return ta.get(e)}function aa(e){const t=ea.entries(),n=[];for(;;){const{done:s,value:a}=t.next();if(s)break;const[r,i]=a,[o]=r.split("_");o===e&&n.push(i)}return n}function ra(e){const{kernelName:t,backendName:n}=e,s=ca(t,n);ea.has(s)&&Js(`The kernel '${t}' for backend '${n}' is already registered`),ea.set(s,e)}function ia(e){const{kernelName:t}=e;ta.has(t)&&Ne().getBool("DEBUG")&&Js(`Overriding the gradient for '${t}'`),ta.set(t,e)}function oa(e,t){const n=ca(e,t);if(!ea.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ea.delete(n)}function la(e){if(!ta.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ta.delete(e)}function ua(e,t){aa(e).forEach((e=>{const n=Object.assign({},e,{backendName:t});ra(n)}))}function ca(e,t){return`${t}_${e}`}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var ha=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function pa(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function ma(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var n=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var s=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,s.get?s:{enumerable:!0,get:function(){return e[t]}})})),n}var fa=ba,ga=null;try{ga=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ba(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function ya(e){return!0===(e&&e.__isLong__)}ba.prototype.__isLong__,Object.defineProperty(ba.prototype,"__isLong__",{value:!0}),ba.isLong=ya;var xa={},wa={};function va(e,t){var n,s,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(s=wa[e],s)?s:(n=Ia(e,(0|e)<0?-1:0,!0),a&&(wa[e]=n),n)):(e|=0,(a=-128<=e&&e<128)&&(s=xa[e],s)?s:(n=Ia(e,e<0?-1:0,!1),a&&(xa[e]=n),n))}function ka(e,t){if(isNaN(e))return t?Wa:za;if(t){if(e<0)return Wa;if(e>=Ga)return Aa}else{if(e<=-Ma)return Xa;if(e+1>=Ma)return Oa}return e<0?ka(-e,t).neg():Ia(e%Ea|0,e/Ea|0,t)}function Ia(e,t,n){return new ba(e,t,n)}ba.fromInt=va,ba.fromNumber=ka,ba.fromBits=Ia;var Sa=Math.pow;function Ta(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return za;if("number"==typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return Ta(e.substring(1),t,n).neg();for(var a=ka(Sa(n,8)),r=za,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var u=ka(Sa(n,o));r=r.mul(u).add(ka(l))}else r=r.mul(a),r=r.add(ka(l))}return r.unsigned=t,r}function Na(e,t){return"number"==typeof e?ka(e,t):"string"==typeof e?Ta(e,t):Ia(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}ba.fromString=Ta,ba.fromValue=Na;var Ca=65536,Ra=1<<24,Ea=Ca*Ca,Ga=Ea*Ea,Ma=Ga/2,La=va(Ra),za=va(0);ba.ZERO=za;var Wa=va(0,!0);ba.UZERO=Wa;var $a=va(1);ba.ONE=$a;var Fa=va(1,!0);ba.UONE=Fa;var Va=va(-1);ba.NEG_ONE=Va;var Oa=Ia(-1,2147483647,!1);ba.MAX_VALUE=Oa;var Aa=Ia(-1,-1,!0);ba.MAX_UNSIGNED_VALUE=Aa;var Xa=Ia(0,-2147483648,!1);ba.MIN_VALUE=Xa;var Da=ba.prototype;Da.toInt=function(){return this.unsigned?this.low>>>0:this.low},Da.toNumber=function(){return this.unsigned?(this.high>>>0)*Ea+(this.low>>>0):this.high*Ea+(this.low>>>0)},Da.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(Xa)){var t=ka(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=ka(Sa(e,6),this.unsigned),r=this,i="";;){var o=r.div(a),l=r.sub(o.mul(a)).toInt()>>>0,u=l.toString(e);if(r=o,r.isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},Da.getHighBits=function(){return this.high},Da.getHighBitsUnsigned=function(){return this.high>>>0},Da.getLowBits=function(){return this.low},Da.getLowBitsUnsigned=function(){return this.low>>>0},Da.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Xa)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},Da.isZero=function(){return 0===this.high&&0===this.low},Da.eqz=Da.isZero,Da.isNegative=function(){return!this.unsigned&&this.high<0},Da.isPositive=function(){return this.unsigned||this.high>=0},Da.isOdd=function(){return 1===(1&this.low)},Da.isEven=function(){return 0===(1&this.low)},Da.equals=function(e){return ya(e)||(e=Na(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},Da.eq=Da.equals,Da.notEquals=function(e){return!this.eq(e)},Da.neq=Da.notEquals,Da.ne=Da.notEquals,Da.lessThan=function(e){return this.comp(e)<0},Da.lt=Da.lessThan,Da.lessThanOrEqual=function(e){return this.comp(e)<=0},Da.lte=Da.lessThanOrEqual,Da.le=Da.lessThanOrEqual,Da.greaterThan=function(e){return this.comp(e)>0},Da.gt=Da.greaterThan,Da.greaterThanOrEqual=function(e){return this.comp(e)>=0},Da.gte=Da.greaterThanOrEqual,Da.ge=Da.greaterThanOrEqual,Da.compare=function(e){if(ya(e)||(e=Na(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},Da.comp=Da.compare,Da.negate=function(){return!this.unsigned&&this.eq(Xa)?Xa:this.not().add($a)},Da.neg=Da.negate,Da.add=function(e){ya(e)||(e=Na(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,r=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=65535&e.low,u=0,c=0,d=0,h=0;return h+=a+l,d+=h>>>16,h&=65535,d+=s+o,c+=d>>>16,d&=65535,c+=n+i,u+=c>>>16,c&=65535,u+=t+r,u&=65535,Ia(d<<16|h,u<<16|c,this.unsigned)},Da.subtract=function(e){return ya(e)||(e=Na(e)),this.add(e.neg())},Da.sub=Da.subtract,Da.multiply=function(e){if(this.isZero())return za;if(ya(e)||(e=Na(e)),ga){var t=ga.mul(this.low,this.high,e.low,e.high);return Ia(t,ga.get_high(),this.unsigned)}if(e.isZero())return za;if(this.eq(Xa))return e.isOdd()?Xa:za;if(e.eq(Xa))return this.isOdd()?Xa:za;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(La)&&e.lt(La))return ka(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,r=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,u=65535&e.low,c=0,d=0,h=0,p=0;return p+=r*u,h+=p>>>16,p&=65535,h+=a*u,d+=h>>>16,h&=65535,h+=r*l,d+=h>>>16,h&=65535,d+=s*u,c+=d>>>16,d&=65535,d+=a*l,c+=d>>>16,d&=65535,d+=r*o,c+=d>>>16,d&=65535,c+=n*u+s*l+a*o+r*i,c&=65535,Ia(h<<16|p,c<<16|d,this.unsigned)},Da.mul=Da.multiply,Da.divide=function(e){if(ya(e)||(e=Na(e)),e.isZero())throw Error("division by zero");if(ga){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?ga.div_u:ga.div_s)(this.low,this.high,e.low,e.high);return Ia(t,ga.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Wa:za;var n,s,a;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Wa;if(e.gt(this.shru(1)))return Fa;a=Wa}else{if(this.eq(Xa)){if(e.eq($a)||e.eq(Va))return Xa;if(e.eq(Xa))return $a;var r=this.shr(1);return n=r.div(e).shl(1),n.eq(za)?e.isNegative()?$a:Va:(s=this.sub(e.mul(n)),a=n.add(s.div(e)),a)}if(e.eq(Xa))return this.unsigned?Wa:za;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=za}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),o=i<=48?1:Sa(2,i-48),l=ka(n),u=l.mul(e);u.isNegative()||u.gt(s);)n-=o,l=ka(n,this.unsigned),u=l.mul(e);l.isZero()&&(l=$a),a=a.add(l),s=s.sub(u)}return a},Da.div=Da.divide,Da.modulo=function(e){if(ya(e)||(e=Na(e)),ga){var t=(this.unsigned?ga.rem_u:ga.rem_s)(this.low,this.high,e.low,e.high);return Ia(t,ga.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},Da.mod=Da.modulo,Da.rem=Da.modulo,Da.not=function(){return Ia(~this.low,~this.high,this.unsigned)},Da.and=function(e){return ya(e)||(e=Na(e)),Ia(this.low&e.low,this.high&e.high,this.unsigned)},Da.or=function(e){return ya(e)||(e=Na(e)),Ia(this.low|e.low,this.high|e.high,this.unsigned)},Da.xor=function(e){return ya(e)||(e=Na(e)),Ia(this.low^e.low,this.high^e.high,this.unsigned)},Da.shiftLeft=function(e){return ya(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?Ia(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ia(0,this.low<<e-32,this.unsigned)},Da.shl=Da.shiftLeft,Da.shiftRight=function(e){return ya(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?Ia(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ia(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},Da.shr=Da.shiftRight,Da.shiftRightUnsigned=function(e){if(ya(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return Ia(n>>>e|t<<32-e,t>>>e,this.unsigned)}return Ia(32===e?t:t>>>e-32,0,this.unsigned)},Da.shru=Da.shiftRightUnsigned,Da.shr_u=Da.shiftRightUnsigned,Da.toSigned=function(){return this.unsigned?Ia(this.low,this.high,!1):this},Da.toUnsigned=function(){return this.unsigned?this:Ia(this.low,this.high,!0)},Da.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},Da.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},Da.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},ba.fromBytes=function(e,t,n){return n?ba.fromBytesLE(e,t):ba.fromBytesBE(e,t)},ba.fromBytesLE=function(e,t){return new ba(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},ba.fromBytesBE=function(e,t){return new ba(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Za=pa(fa),Ka=v({__proto__:null,default:Za},[fa]),Pa=Za||Ka;
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(e){return Pa.fromString(e,!0,16)}const Ba=_a("c3a5c85c97cb3127"),Ha=_a("b492b66fbe98f273"),Ua=_a("9ae16a3b2f90404f");function Ya(e){return e.xor(e.shru(47))}function ja(e,t,n){const s=e.slice(t,t+n);return Pa.fromBytes(Array.from(s),!0,!0)}function Qa(e,t){return ja(e,t,8)}function Ja(e,t){return ja(e,t,4)}function qa(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function er(e,t,n=_a("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let a=t.xor(s).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function tr(e,t,n,s,a,r){a=a.add(e),r=qa(r.add(a).add(s),21);const i=a;return a=a.add(t),a=a.add(n),r=r.add(qa(a,44)),[a.add(s),r.add(i)]}function nr(e,t,n,s){return tr(Qa(e,t),Qa(e,t+8),Qa(e,t+16),Qa(e,t+24),n,s)}function sr(e,t=e.length){if(t>=8){const n=Ua.add(2*t),s=Qa(e,0).add(Ua),a=Qa(e,t-8),r=qa(a,37).mul(n).add(s),i=qa(s,25).add(a).mul(n);return er(r,i,n)}if(t>=4){const n=Ua.add(2*t),s=Ja(e,0);return er(s.shl(3).add(t),Ja(e,t-4),n)}if(t>0){const n=e[0],s=e[t>>1],a=e[t-1],r=n+(s<<8),i=t+(a<<2);return Ya(Ua.mul(r).xor(Ba.mul(i))).mul(Ua)}return Ua}function ar(e,t=e.length){const n=Ua.add(2*t),s=Qa(e,0).mul(Ha),a=Qa(e,8),r=Qa(e,t-8).mul(n),i=Qa(e,t-16).mul(Ua);return er(qa(s.add(a),43).add(qa(r,30)).add(i),s.add(qa(a.add(Ua),18)).add(r),n)}function rr(e,t=e.length){const n=Ua.add(2*t),s=Qa(e,0).mul(Ua),a=Qa(e,8),r=Qa(e,t-8).mul(n),i=Qa(e,t-16).mul(Ua),o=qa(s.add(a),43).add(qa(r,30)).add(i),l=er(o,s.add(qa(a.add(Ua),18)).add(r),n),u=Qa(e,16).mul(n),c=Qa(e,24),d=o.add(Qa(e,t-32)).mul(n),h=l.add(Qa(e,t-24)).mul(n);return er(qa(u.add(c),43).add(qa(d,30)).add(h),u.add(qa(c.add(s),18)).add(d),n)}function ir(e,t=e.length){const n=Pa.fromNumber(81,!0);if(t<=32)return t<=16?sr(e,t):ar(e,t);if(t<=64)return rr(e,t);let s=n,a=n.mul(Ha).add(113),r=Ya(a.mul(Ua).add(113)).mul(Ua),i=[Pa.UZERO,Pa.UZERO],o=[Pa.UZERO,Pa.UZERO];s=s.mul(Ua).add(Qa(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=qa(s.add(a).add(i[0]).add(Qa(e,l+8)),37).mul(Ha),a=qa(a.add(i[1]).add(Qa(e,l+48)),42).mul(Ha),s=s.xor(o[1]),a=a.add(i[0]).add(Qa(e,l+40)),r=qa(r.add(o[0]),33).mul(Ha),i=nr(e,l,i[1].mul(Ha),s.add(o[0])),o=nr(e,l+32,r.add(o[1]),a.add(Qa(e,l+16))),[r,s]=[s,r],l+=64}while(l!==u);const d=Ha.add(r.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=qa(s.add(a).add(i[0]).add(Qa(e,l+8)),37).mul(d),a=qa(a.add(i[1]).add(Qa(e,l+48)),42).mul(d),s=s.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Qa(e,l+40))),r=qa(r.add(o[0]),33).mul(d),i=nr(e,l,i[1].mul(d),s.add(o[0])),o=nr(e,l+32,r.add(o[1]),a.add(Qa(e,l+16))),[r,s]=[s,r],er(er(i[0],o[0],d).add(Ya(a).mul(Ba)).add(r),er(i[1],o[1],d).add(s),d)
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function or(e,t){return"string"===t?hr(e):ur([e],t)}function lr(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function ur(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=fr(e)),Ne().getBool("DEBUG")&&q(e,t),lr(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function cr(){return Ne().platform.now()}function dr(e,t){return Ne().platform.fetch(e,t)}function hr(e,t="utf-8"){return t=t||"utf-8",Ne().platform.encode(e,t)}function pr(e,t="utf-8"){return t=t||"utf-8",Ne().platform.decode(e,t)}function mr(e){return null!=Ne().platform.isTypedArray?Ne().platform.isTypedArray(e):da(e)}function fr(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||we(e)||null==e||mr(e)&&n)t.push(e);else if(Array.isArray(e)||mr(e))for(let s=0;s<e.length;++s)fr(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let a=0;a<=s;a++)fr(e[a],t,n)}return t}const gr=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:D,arraysEqualWithNull:X,assert:$,assertNonNegativeIntegerDimensions:be,assertNonNull:V,assertShapesMatch:F,bytesFromStringArray:se,bytesPerElement:ne,checkConversionForErrors:q,clamp:E,computeStrides:ce,convertBackendValuesAndArrayBuffer:pe,createScalarValue:or,createShuffledIndices:_,decodeString:pr,distSquared:W,encodeString:hr,fetch:dr,fingerPrint64:ir,flatten:fr,getArrayFromDType:J,getTypedArrayFromDType:Q,hasEncodingLoss:te,hexToLong:_a,indexToLoc:xe,inferDtype:oe,inferFromImplicitShape:U,isBoolean:re,isFunction:le,isInt:Z,isNumber:ie,isPromise:we,isScalarShape:A,isString:ae,isTypedArray:mr,isValidDtype:ee,locToIndex:ye,makeOnesTypedArray:me,makeZerosNestedTypedArray:ge,makeZerosTypedArray:fe,nearestDivisor:ue,nearestLargerEven:G,now:cr,parseAxisParam:Y,randUniform:z,repeatedTry:H,rightPad:B,shuffle:C,shuffleCombo:R,sizeFromShape:O,sizeToSquarishShape:P,squeezeShape:j,sum:L,swap:M,tanh:K,toNestedArray:he,toTypedArray:ur},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class br{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new xr)}profileKernel(e,t,n){let s;const a=()=>{s=n()};let r;const i=cr();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(a);else{a();for(const e of s)e.dataSync();r=Promise.resolve({kernelMs:cr()-i})}if(Ne().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<s.length;o++){const t=s[o];t.data().then((n=>{yr(n,t.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:a,extraInfo:r}=e;n.forEach((e=>{Promise.all([e.data(),s,r]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function yr(e,t,n){if("float32"!==t)return!1;for(let s=0;s<e.length;s++){const t=e[s];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class xr{logKernelProfile(e,t,n,s,a,r){const i="number"==typeof s?B(`${s}ms`,9):s.error,o=B(e,25),l=t.rank,u=t.size,c=B(t.shape.toString(),14);let d="";for(const h in a){const e=a[h];if(null!=e){const n=e.shape||t.shape,s=n.length;d+=`${h}: ${s}D ${s>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${d}\t%c${r}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wr(e,t,n){const s={},a={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],r=n.inputs;for(const e in r){const i=r[e];let o=!1;for(let e=0;e<t.length;e++)if(s[i.id]){n.outputs.forEach((e=>s[e.id]=!0)),o=!0,a[n.id]=!0;break}if(o)break}}const r={};r[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(r[t.outputs[e].id]){for(const e in n)r[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(a[t.id]&&i[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];s[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function vr(e,t,n,s){for(let a=t.length-1;a>=0;a--){const r=t[a],i=[];if(r.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==r.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const o=r.gradient(i);for(const t in r.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=r.inputs[t];if(!D(a.shape,i.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=s(t,a),t.dispose()}}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr=20,Ir=3,Sr=7;function Tr(e,t,n,s){const a=ce(t),r=Nr(e,t,n,a),i=t.length,o=Er(e,t,n,a,r),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Nr(e,t,n,s){const a=O(t),r=s[s.length-1],i=new Array(r).fill(0),o=t.length,l="complex64"===n?Gr(e):e;if(o>1)for(let u=0;u<a/r;u++){const e=u*r;for(let t=0;t<r;t++)i[t]=Math.max(i[t],Cr(l[e+t],0,n).length)}return i}function Cr(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(Sr))} + ${parseFloat(e[1].toFixed(Sr))}j`:ae(e)?`'${e}'`:"bool"===n?Rr(e):parseFloat(e.toFixed(Sr)).toString(),B(s,t)}function Rr(e){return 0===e?"false":"true"}function Er(e,t,n,s,a,r=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){const t=Gr(e);return[Cr(t[0],0,n)]}return"bool"===n?[Rr(e[0])]:[e[0].toString()]}if(1===l){if(o>kr){const t=Ir*i;let s=Array.from(e.slice(0,t)),r=Array.from(e.slice((o-Ir)*i,o*i));return"complex64"===n&&(s=Gr(s),r=Gr(r)),["["+s.map(((e,t)=>Cr(e,a[t],n))).join(", ")+", ..., "+r.map(((e,t)=>Cr(e,a[o-Ir+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Gr(e):Array.from(e)).map(((e,t)=>Cr(e,a[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),d=s[0]*i,h=[];if(o>kr){for(let t=0;t<Ir;t++){const s=t*d,r=s+d;h.push(...Er(e.slice(s,r),u,n,c,a,!1))}h.push("...");for(let t=o-Ir;t<o;t++){const s=t*d,r=s+d;h.push(...Er(e.slice(s,r),u,n,c,a,t===o-1))}}else for(let f=0;f<o;f++){const t=f*d,s=t+d;h.push(...Er(e.slice(t,s),u,n,c,a,f===o-1))}const p=2===l?",":"";h[0]="["+(o>0?h[0]+p:"");for(let f=1;f<h.length-1;f++)h[f]=" "+h[f]+p;let m=",\n";for(let f=2;f<l;f++)m+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(r?"":m),h}function Gr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=O(e),null!=n){const e=n.length;$(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||J(t,this.size),this.strides=ce(e)}set(e,...t){0===t.length&&(t=[0]),$(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Lr().makeTensor(this.values,this.shape,this.dtype)}}let Lr=null,zr=null;function Wr(e){Lr=e}function $r(e){zr=e}class Fr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=O(e),this.strides=ce(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return zr.buffer(this.shape,this.dtype,e)}bufferSync(){return zr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return he(this.shape,e,"complex64"===this.dtype)}arraySync(){return he(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Lr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>pr(e)))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Lr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Lr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>pr(e)))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Lr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Lr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return zr.print(this,e)}clone(){return this.throwIfDisposed(),zr.clone(this)}toString(e=!1){const t=this.dataSync();return Tr(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),zr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Lr().makeVariable(this,e,t,n)}}function Vr(){return Le("Tensor",(()=>Fr))}Object.defineProperty(Fr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Vr();class Or extends Fr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!D(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Lr().disposeTensor(this),this.dataId=e.dataId,Lr().incRef(this,null)}dispose(){Lr().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Ar,Xr,Dr,Zr,Kr;Object.defineProperty(Or,Symbol.hasInstance,{value:e=>e instanceof Fr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ar||(Ar={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Xr||(Xr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Dr||(Dr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Zr||(Zr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Kr||(Kr={}));const Pr={float32:Zr,int32:Xr,bool:Dr,complex64:Kr};function _r(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Pr[e][t]}function Br(e){return _r(e,"int32")}function Hr(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Ur(e){return typeof GPUBuffer<"u"&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(e,t){if(e.dtype===t.dtype)return[e,t];const n=_r(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function jr(e,t){$(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Qr(e,t){return t.some((t=>t.id===e.id))}function Jr(e){const t=[];return qr(e,t,new Set),t}function qr(e,t,n){if(null==e)return;if(e instanceof Fr)return void t.push(e);if(!ei(e))return;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),qr(e,t,n))}}function ei(e){return Array.isArray(e)||"object"==typeof e}const ti=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:jr,getTensorsInContainer:Jr,isTensorInList:Qr,makeTypesMatch:Yr},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(e){return null!=e.kernelName}class si{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ai{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new si}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Js(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new br(this.backendInstance),!0}setupRegisteredKernels(){aa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){aa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof T||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Js(`Initialization of backend ${e} failed`),Js(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(n){return Js(`Initialization of backend ${e} failed`),Js(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:a}=this.initializeBackend(n);if(a||s)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,a=this.readSync(t),r=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,r),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(s){throw t(),s}}nextTensorId(){return ai.nextTensorId++}nextVariableId(){return ai.nextVariableId++}clone(e){const t=oi.runKernel(Yt,{x:e}),n={x:e},s=e=>({x:()=>{const t="float32",n={x:e},s={dtype:t};return oi.runKernel(st,n,s)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,a,{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==na(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const r=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-a-r;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),a=this.state.numBytes,r=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ni(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ni(e)){const{kernelName:t,inputs:a,attrs:r}=e;null==this.backendName&&this.backend;const l=na(t,this.backendName);$(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:a,attrs:r,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,a,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,a=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,d=ni(e)?null:e.backwardsFunc;let h;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=i()})),s&&this.addTapeNode(l,u,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-r,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=sa(e);if(null!=s){const e=s.inputsToSave||[],a=s.outputsToSave||[];let r;s.saveAllInputs?($(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),r=Object.keys(t).map((e=>t[e]))):r=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return r.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let a=e;"string"===n&&ae(e[0])&&(a=e.map((e=>hr(e))));const r=s.write(a,t,n),i=new Fr(t,n,r,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(r),t=se(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";const a={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(a,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:a}=e,r=new Fr(s,a,n,this.nextTensorId());return this.trackTensor(r,t),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const a=new Or(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Or||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,a,r){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=sa(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=fe(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],a,r))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Jr(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];!e.kept&&!n.has(e.id)&&e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===s.id&&this.track(e)}))}gradients(e,t,n,s=!1){if($(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));$(a instanceof Fr,(()=>"The result y returned by f() must be a tensor."));const r=wr(this.state.activeTape,t,a);if(!s&&0===r.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=n??ri(a.shape),vr(e,r,(e=>this.tidy(e)),li);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:s}}))}customGrad(e){return $(le(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;$(t.every((e=>e instanceof Fr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};t.forEach(((e,t)=>{s[t]=e}));const a=(s,a)=>(n=e(...t,a),$(n.value instanceof Fr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),$(le(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),r=(e,s)=>{const a=n.gradFunc(e,s),r=Array.isArray(a)?a:[a];$(r.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),$(r.every((e=>e instanceof Fr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return r.forEach(((e,t)=>{i[t]=()=>e})),i};return this.runKernelFunc({forwardFunc:a,backwardsFunc:r,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=cr(),n=await this.backend.time(e);return n.wallMs=cr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new si;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ri(e){const t=me(O(e),"float32");return oi.makeTensor(t,e,"float32")}function ii(){const e=Ge();if(null==e._tfengine){const t=new ke(e);e._tfengine=new ai(t)}return Ee(e._tfengine.ENV),Wr((()=>e._tfengine)),e._tfengine}ai.nextTensorId=0,ai.nextVariableId=0;const oi=ii();function li(e,t){const n={a:e,b:t};return oi.runKernel(Fe,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(){return typeof navigator<"u"&&null!=navigator}let ci;function di(e){ci=e}function hi(e){if(void 0!==ci)return ci;if(e||ui()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function pi(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}const mi=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:pi,isMobile:hi,mockIsMobile:di},Symbol.toStringTag,{value:"Module"})),fi=Ne();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gi(e,t){let n=e;if(mr(e))return"string"===t?[]:[e.length];if(Hr(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Ur(e))return[e.buffer.size/(null==t?4:ne(t))];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||mr(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&Ne().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&bi(e,s,[]),s}function bi(e,t,n){if(n=n||[],!Array.isArray(e)&&!mr(e))return void $(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));$(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),$(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let a=0;a<e.length;++a)bi(e[a],s,n.concat(a))}function yi(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function xi(e,t,n,s="numeric"){if(e instanceof Vr())return yi(s,e.dtype,t,n),e;let a=oe(e);if("string"!==a&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),yi(s,a,t,n),null==e||!mr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const r=gi(e,a);!mr(e)&&!Array.isArray(e)&&(e=[e]);const i="string"!==a?ur(e,a):fr(e,[],!0);return oi.makeTensor(i,r,a)}function wi(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>xi(e,`${t}[${a}]`,n,s)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */fi.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),fi.registerFlag("IS_BROWSER",(()=>pi())),fi.registerFlag("IS_NODE",(()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u")),fi.registerFlag("IS_CHROME",(()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),fi.registerFlag("IS_SAFARI",(()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),fi.registerFlag("PROD",(()=>!1)),fi.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>fi.getBool("DEBUG"))),fi.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),fi.registerFlag("IS_TEST",(()=>!1)),fi.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>fi.getBool("DEBUG"))),fi.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),fi.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),fi.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const vi="__op";function ki(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=vi;const a=(...e)=>{oi.startScope(n);try{const t=s(...e);return we(t)&&console.error("Cannot return a Promise inside of tidy."),oi.endScope(t),t}catch(W7){throw oi.endScope(null),W7}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function Ii(e,t){const n=xi(e,"real","complex"),s=xi(t,"imag","complex");F(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const a={real:n,imag:s};return oi.runKernel(it,a)}const Si=ki({complex_:Ii});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ti(e,t,n,s){if(null==s)s=oe(e);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Ur(e)||Hr(e)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return oi.backend.createTensorFromGPUData(e,t||n,s)}if(!mr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){be(t);const e=O(t),s=O(n);$(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let a=0;a<n.length;++a){const e=n[a],s=a!==n.length-1||e!==O(t.slice(a));$(n[a]===t[a]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!mr(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==s?ur(e,s):fr(e,[],!0),oi.makeTensor(e,t,s)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function Ni(e,t,n){const s=gi(e,n);return Ti(e,t,s,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ri{static join(e){return new Ri(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),e=e.map((e=>mr(e)?e.buffer:e)),0===e.length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const s=e[n];n!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+s.byteLength;this.shards.push({buffer:s,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,a=new ArrayBuffer(s),r=new Uint8Array(a);let i=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],s=e+i-n.start,a=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,s,l-s);if(r.set(u,a),i+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=Ei(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Ei(e,t){let n=0,s=e.length;for(;n<=s;){const a=Math.floor((s-n)/2)+n,r=t(e[a]);if(0===r)return a;r<0?s=a:n=a+1}return-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gi(){Ne().set("PROD",!0)}function Mi(){Ne().set("DEBUG",!0)}function Li(){Ne().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function zi(e){Ne().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Wi(){oi.disposeVariables()}function $i(){return oi}function Fi(){return oi.memory()}function Vi(e){return oi.profile(e)}function Oi(e,t){return oi.tidy(e,t)}function Ai(e){Jr(e).forEach((e=>e.dispose()))}function Xi(e){return oi.keep(e)}function Di(e){return oi.time(e)}function Zi(e){return oi.setBackend(e)}function Ki(){return oi.ready()}function Pi(){return oi.backendName}function _i(e){oi.removeBackend(e)}function Bi(e){return oi.findBackend(e)}function Hi(e){return oi.findBackendFactory(e)}function Ui(e,t,n=1){return oi.registerBackend(e,t,n)}function Yi(){return oi.backend}function ji(e,t){Ne().setPlatform(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qi=4;async function Ji(e,t){const n=[],s=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<a.length;++i){const r=a[i],o=Array.isArray(e)?e[i].tensor:e[r];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${r}': ${o.dtype}`);const l={name:r,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Qi*t.length,s=new Uint8Array(n);let a=0;for(let r=0;r<t.length;r++){const e=t[r],n=new Uint8Array(new Uint32Array([e.length]).buffer);s.set(n,a),a+=Qi,s.set(e,a),a+=e.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}const r=await Promise.all(s);return{data:ro(r),specs:n}}function qi(e,t){const n=new Ri(e),s={};let a=0;for(const r of t){const e=eo(r,((e,t)=>n.slice(a+e,a+t)));s[r.name]=no(r,n.slice(a,a+e)),a+=e}return s}function eo(e,t){const n=O(e.shape);let s;if("quantization"in e){const t=e.quantization;s=Ci[t.dtype]}else{if("string"===e.dtype){let e=0;for(let s=0;s<n;s++)e+=Qi+new Uint32Array(t(e,e+Qi))[0];return e}s=Ci[e.dtype]}return n*s}async function to(e,t){const n=O(e.shape);let s;if("quantization"in e){const t=e.quantization;s=Ci[t.dtype]}else{if("string"===e.dtype){let e=0;for(let s=0;s<n;s++)e+=Qi+new Uint32Array(await t(e,e+Qi))[0];return e}s=Ci[e.dtype]}return n*s}function no(e,t){const n=e.name,s=e.dtype,a=e.shape,r=O(a);let i,o=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error(`Weight ${e.name} with quantization ${a.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==a.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${a.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${e.name} is quantized with ${a.dtype} which only supports weights of type float32 not ${s}.`)}const l=Ci[a.dtype],u="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===s)if("uint8"===a.dtype||"uint16"===a.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error(`Unsupported quantization type ${a.dtype} for weight type float32.`);i=vo()(u)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${n}': ${s}`);if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error(`Unsupported quantization type ${a.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*a.scale+a.min)}}o+=r*l}else if("string"===s){const n=O(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+Qi))[0];o+=Qi;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=Ci[s];if("float32"===s)i=new Float32Array(t);else if("int32"===s)i=new Int32Array(t);else{if("bool"!==s){if("complex64"===s){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const s=Ni(e,a,"float32"),r=Ni(n,a,"float32"),o=Si(s,r);return s.dispose(),r.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${s}`)}i=new Uint8Array(t)}o+=r*e}return Ni(i,a,s)}async function so(e,t,n){let s=new Uint8Array(t);for(;s.byteLength<n;){const{done:t,value:a}=await e.read();if(t&&null==a){const e=n-s.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const r=new Uint8Array(s.length+a.byteLength);r.set(s,0),r.set(new Uint8Array(a),s.length),s=r}return s.buffer}async function ao(e,t){const n={},s=e.getReader();let a=new ArrayBuffer(0);for(const r of t){const e=await to(r,(async(e,t)=>(a=await so(s,a,t),a.slice(e,t))));a=await so(s,a,e);const t=a.slice(0,e);a=a.slice(e);const i=no(r,t);if(n[r.name]=i,"webgpu"===Pi()){const e=Yi();"uploadToGPU"in e&&O(i.shape)>=Ne().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function ro(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let a=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),s.buffer}const io=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function oo(e){return io?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function lo(e){if(io)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,a=t.length;s<a;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function uo(e){if(io){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function co(e){return Ri.join(e)}function ho(e){const t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);const n=e.split(t);return n[n.length-1]}function po(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function mo(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}async function fo(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),mo(e,n,s)}function go(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:oo(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:oo(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ri(e.weightData).byteLength}}function bo(e){const t=[];for(const n of e)t.push(...n.weights);return t}function yo(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function xo(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function wo(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function vo(){const e=yo(),t=xo(),n=wo();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let i=0;i<s.length;i++){const a=s[i],o=e[n[a>>10]+(1023&a)]+t[a>>10];r[i]=o}return new Float32Array(a)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ko{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ko.instance&&(ko.instance=new ko),ko.instance}static registerSaveRouter(e){ko.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ko.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ko.getHandlers(e,"save")}static getLoadHandlers(e,t){return ko.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?ko.getInstance().loadRouters:ko.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&s.push(a)})),s}}const Io=e=>ko.registerSaveRouter(e),So=e=>ko.registerLoadRouter(e),To=e=>ko.getSaveHandlers(e),No=(e,t)=>ko.getLoadHandlers(e,t)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */,Co="tensorflowjs",Ro=1,Eo="models_store",Go="model_info_store";function Mo(){if(!Ne().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Lo(e){const t=e.result;t.createObjectStore(Eo,{keyPath:"modelPath"}),t.createObjectStore(Go,{keyPath:"modelPath"})}class zo{constructor(e){if(this.indexedDB=Mo(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(Co,Ro);s.onupgradeneeded=()=>Lo(s),s.onsuccess=()=>{const a=s.result;if(null==t){const t=a.transaction(Eo,"readonly"),s=t.objectStore(Eo).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(a.close(),n(s.error)),t.oncomplete=()=>a.close()}else{t.weightData=Ri.join(t.weightData);const s=go(t),r=a.transaction(Go,"readwrite");let i,o,l=r.objectStore(Go);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(m){return n(m)}i.onsuccess=()=>{o=a.transaction(Eo,"readwrite");const i=o.objectStore(Eo);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(b){return n(b)}u.onsuccess=()=>e({modelArtifactsInfo:s}),u.onerror=e=>{l=r.objectStore(Go);const t=l.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(u.error)),t.onerror=e=>(a.close(),n(u.error))}},i.onerror=e=>(a.close(),n(i.error)),r.oncomplete=()=>{null==o?a.close():o.oncomplete=()=>a.close()}}},s.onerror=e=>n(s.error)}))}}zo.URL_SCHEME="indexeddb://";const Wo=e=>Ne().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(zo.URL_SCHEME)?$o(e.slice(zo.URL_SCHEME.length)):null;function $o(e){return new zo(e)}function Fo(e){return e.startsWith(zo.URL_SCHEME)?e.slice(zo.URL_SCHEME.length):e}ko.registerSaveRouter(Wo),ko.registerLoadRouter(Wo);class Vo{constructor(){this.indexedDB=Mo()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Co,Ro);n.onupgradeneeded=()=>Lo(n),n.onsuccess=()=>{const s=n.result,a=s.transaction(Go,"readonly"),r=a.objectStore(Go).getAll();r.onsuccess=()=>{const t={};for(const e of r.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},r.onerror=e=>(s.close(),t(r.error)),a.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=Fo(e),new Promise(((t,n)=>{const s=this.indexedDB.open(Co,Ro);s.onupgradeneeded=()=>Lo(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(Go,"readwrite"),i=r.objectStore(Go),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),r=()=>{l=a.transaction(Eo,"readwrite");const s=l.objectStore(Eo).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=r,s.onerror=e=>(r(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),r.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},s.onerror=e=>n(s.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo="/",Ao="tensorflowjs_models",Xo="info",Do="model_topology",Zo="weight_specs",Ko="weight_data",Po="model_metadata";function _o(e){return{info:[Ao,e,Xo].join(Oo),topology:[Ao,e,Do].join(Oo),weightSpecs:[Ao,e,Zo].join(Oo),weightData:[Ao,e,Ko].join(Oo),modelMetadata:[Ao,e,Po].join(Oo)}}function Bo(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Ho(e){const t=e.split(Oo);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Oo)}function Uo(e){return e.startsWith(Yo.URL_SCHEME)?e.slice(Yo.URL_SCHEME.length):e}class Yo{constructor(e){if(!Ne().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=_o(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=go(e),a=Ri.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,lo(a));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch{throw Bo(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const r=this.LS.getItem(this.keys.weightData);if(null==r)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=uo(r),t}}Yo.URL_SCHEME="localstorage://";const jo=e=>Ne().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yo.URL_SCHEME)?Qo(e.slice(Yo.URL_SCHEME.length)):null;function Qo(e){return new Yo(e)}ko.registerSaveRouter(jo),ko.registerLoadRouter(jo);class Jo{constructor(){$(Ne().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),$(typeof window>"u"||typeof window.localStorage<"u",(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Ao+Oo,n=Oo+Xo;for(let s=0;s<this.LS.length;++s){const a=this.LS.key(s);if(a.startsWith(t)&&a.endsWith(n)){const t=Ho(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=Uo(e);const t=_o(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return Bo(t),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo="://";class el{constructor(){this.managers={}}static getInstance(){return null==el.instance&&(el.instance=new el),el.instance}static registerManager(e,t){$(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(qo)&&(e=e.slice(0,e.indexOf(qo))),$(e.length>0,(()=>"scheme must not be an empty string."));const n=el.getInstance();$(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=el.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(el.getInstance().managers)}}function tl(e){if(-1===e.indexOf(qo))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${el.getSchemes().join(",")}`);return{scheme:e.split(qo)[0],path:e.split(qo)[1]}}async function nl(e,t,n=!1){$(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=ko.getLoadHandlers(e);$(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),$(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const a=s[0],r=ko.getSaveHandlers(t);$(r.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),$(r.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=r[0],o=tl(e).scheme,l=tl(e).path,u=o===tl(e).scheme,c=await a.load();n&&u&&await el.getManager(o).removeModel(l);const d=await i.save(c);return n&&!u&&await el.getManager(o).removeModel(l),d.modelArtifactsInfo}async function sl(){const e=el.getSchemes(),t={};for(const n of e){const e=await el.getManager(n).listModels();for(const s in e){const a=n+qo+s;t[a]=e[s]}}return t}async function al(e){const t=tl(e);return el.getManager(t.scheme).removeModel(t.path)}async function rl(e,t){return nl(e,t,!1)}async function il(e,t){return nl(e,t,!0)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ol{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){typeof window>"u"||!Ne().getBool("USE_SETTIMEOUTCUSTOM")?setTimeout(e,t):(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();const t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0)))}isTypedArray(e){return da(e)}}if(Ne().get("IS_BROWSER")){Ne().setPlatform("browser",new ol);try{el.registerManager(Yo.URL_SCHEME,new Jo)}catch{}try{el.registerManager(zo.URL_SCHEME,new Vo)}catch{}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ll={importFetch:()=>require("node-fetch")};let ul;class cl{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ne().global.fetch?Ne().global.fetch(e,t):(null==ul&&(ul=ll.importFetch()),ul(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dl(e,t="float32",n){return t=t||"float32",be(e),new Mr(e,t,n)
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function hl(e,t){const n=xi(e,"x","cast");if(!ee(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},a={dtype:t};return oi.runKernel(st,s,a)}Ne().get("IS_NODE")&&!Ne().get("IS_BROWSER")&&Ne().setPlatform("node",new cl);const pl=ki({cast_:hl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ml(e){const t={x:xi(e,"x","clone","string_or_numeric")};return oi.runKernel(Yt,t)}const fl=ki({clone_:ml});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gl(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ii();const bl={buffer:dl,cast:pl,clone:fl,print:gl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yl(e,t){let n=xi(e,"a","add"),s=xi(t,"b","add");[n,s]=Yr(n,s);const a={a:n,b:s};return oi.runKernel(Fe,a)}$r(bl);const xl=ki({add_:yl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wl(e,t){let n=xi(e,"a","floorDiv"),s=xi(t,"b","floorDiv");[n,s]=Yr(n,s);const a={a:n,b:s};return oi.runKernel(Kt,a)}const vl=ki({floorDiv_:wl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kl(e,t){let n=xi(e,"a","div"),s=xi(t,"b","div");if([n,s]=Yr(n,s),"int32"===n.dtype&&"int32"===s.dtype)return vl(n,s);const a={a:n,b:s},r={};return oi.runKernel(Gt,a,r)}const Il=ki({div_:kl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sl(e,t){let n=xi(e,"a","mul"),s=xi(t,"b","mul");[n,s]=Yr(n,s);const a={a:n,b:s};return oi.runKernel(Gn,a)}const Tl=ki({mul_:Sl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nl(e){const t=xi(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return oi.runKernel(ot,e)}{const e={x:t};return oi.runKernel(ze,e)}}const Cl=ki({abs_:Nl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rl(e){const t={x:xi(e,"x","acos")};return oi.runKernel(We,t)}const El=ki({acos_:Rl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(e){const t={x:xi(e,"x","acosh")};return oi.runKernel($e,t)}const Ml=ki({acosh_:Gl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(e,t=null,n=!1){const s={x:xi(e,"x","all","bool")},a={axis:t,keepDims:n};return oi.runKernel(Oe,s,a)}const zl=ki({all_:Ll});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wl(e,t=null,n=!1){const s={x:xi(e,"x","any","bool")},a={axis:t,keepDims:n};return oi.runKernel(Ae,s,a)}const $l=ki({any_:Wl});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fl(e,t=0){const n={x:xi(e,"x","argMax")},s={axis:t};return oi.runKernel(Xe,n,s)}const Vl=ki({argMax_:Fl});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(e,t=0){const n={x:xi(e,"x","argMin")},s={axis:t};return oi.runKernel(De,n,s)}const Al=ki({argMin_:Ol});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xl(e){const t={x:xi(e,"x","asin")};return oi.runKernel(Ze,t)}const Dl=ki({asin_:Xl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zl(e){const t={x:xi(e,"x","asinh")};return oi.runKernel(Ke,t)}const Kl=ki({asinh_:Zl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(e){const t={x:xi(e,"x","atan")};return oi.runKernel(Pe,t)}const _l=ki({atan_:Pl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(e,t){let n=xi(e,"a","atan2"),s=xi(t,"b","atan2");[n,s]=Yr(n,s);const a={a:n,b:s};return oi.runKernel(Be,a)}const Hl=ki({atan2_:Bl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(e){const t={x:xi(e,"x","atanh")};return oi.runKernel(_e,t)}const Yl=ki({atanh_:Ul});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(e,t,n,s,a="NHWC",r){const i=e[3],o=[...t,i],l=pu(a);return ql(e,o,n,r,s,null,null,l)}function Ql(e,t,n,s,a,r,i="channelsLast"){const[o,l]=au(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ql(e,u,n,s,a,r,!1,i)}function Jl(e,t,n,s,a,r,i="NDHWC"){const[o,l,u]=ru(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",c=[o,l,u,e[1],e[1]]}return eu(e,c,n,s,a,!1,d,r)}function ql(e,t,n,s,a,r,i=!1,o="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,c]=e}const[h,p,,m]=t,[f,g]=au(n),[b,y]=au(s),x=iu(h,b),w=iu(p,y),{padInfo:v,outHeight:k,outWidth:I}=ou(a,u,c,f,g,x,w,r,o),S=i?m*d:m;let T;return"channelsFirst"===o?T=[l,S,k,I]:"channelsLast"===o&&(T=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:d,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:f,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:y,inShape:e,outShape:T,filterShape:t}}function eu(e,t,n,s,a,r=!1,i="channelsLast",o){let[l,u,c,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,d,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,h,u,c,d]=e}const[p,m,f,,g]=t,[b,y,x]=ru(n),[w,v,k]=ru(s),I=iu(p,w),S=iu(m,v),T=iu(f,k),{padInfo:N,outDepth:C,outHeight:R,outWidth:E}=lu(a,u,c,d,b,y,x,I,S,T,o),G=r?g*h:g;let M;return"channelsFirst"===i?M=[l,G,C,R,E]:"channelsLast"===i&&(M=[l,C,R,E,G]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:d,inChannels:h,outDepth:C,outHeight:R,outWidth:E,outChannels:G,padInfo:N,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:m,filterWidth:f,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:M,filterShape:t}}function tu(e,t,n,s,a){null==s&&(s=su(e,t,n));const r=e[0],i=e[1],o=uu((r-t+2*s)/n+1,a),l=uu((i-t+2*s)/n+1,a);return[o,l]}function nu(e,t,n,s,a,r){null==a&&(a=su(e,t[0],s[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=uu((e[o]-t[o]+2*a)/s[o]+1,r));return i}function su(e,t,n,s=1){const a=iu(t,s);return Math.floor((e[0]*(n-1)-n+a)/2)}function au(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ru(e){return"number"==typeof e?[e,e,e]:e}function iu(e,t){return t<=1?e:e+(e-1)*(t-1)}function ou(e,t,n,s,a,r,i,o,l){let u,c,d;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=tu([t,n],r,s,e,o);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/s),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*s+r-t),o=Math.max(0,(d-1)*a+i-n),l=Math.floor(e/2),h=e-l,p=Math.floor(o/2),m=o-p;u={top:l,bottom:h,left:p,right:m,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-r+1)/s),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],f="channelsLast"===l?e[2][1]:e[3][1];u={top:h,bottom:p,left:m,right:f,type:0===h&&0===p&&0===m&&0===f?"VALID":"EXPLICIT"},c=uu((t-r+h+p)/s+1,o),d=uu((n-i+m+f)/a+1,o)}}return{padInfo:u,outHeight:c,outWidth:d}}function lu(e,t,n,s,a,r,i,o,l,u,c){let d,h,p,m;if("valid"===e&&(e=0),"number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const f=nu([t,n,s,1],[o,l,u],1,[a,r,i],e,c);h=f[0],p=f[1],m=f[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{h=Math.ceil(t/a),p=Math.ceil(n/r),m=Math.ceil(s/i);const e=(h-1)*a+o-t,c=(p-1)*r+l-n,f=(m-1)*i+u-s,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),x=c-y,w=Math.floor(f/2),v=f-w;d={top:y,bottom:x,left:w,right:v,front:g,back:b,type:"SAME"}}}return{padInfo:d,outDepth:h,outHeight:p,outWidth:m}}function uu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function cu(e){const[t,n,s]=au(e);return 1===t&&1===n&&1===s}function du(e,t){return cu(e)||cu(t)}function hu(e){return au(e).every((e=>e>0))}function pu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function mu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)$(Z(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{$(Z(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fu(e,t){const n={x:xi(e,"x","reshape","string_or_numeric")},s={shape:t};return oi.runKernel(Qn,n,s)}const gu=ki({reshape_:fu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bu(e,t,n,s,a){const r=xi(e,"x","avgPool","float32"),i=1;$(du(n,i),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));let o=r,l=!1;3===r.rank&&(l=!0,o=gu(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),mu("avgPool",s,a);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:a};let d=oi.runKernel(He,u,c);return d=pl(d,r.dtype),l?gu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const yu=ki({avgPool_:bu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xu(e,t,n,s,a,r="NDHWC"){const i=xi(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=gu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),$("NDHWC"===r,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`)),$("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),mu("avgPool3d",s,a);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:a,dataFormat:r};let d=oi.runKernel(Ye,u,c);return d=pl(d,o.dtype),l?gu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const wu=ki({avgPool3d_:xu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vu(e,t=0){$(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=wi(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return fl(n[0]);const s=n,a={axis:t};return oi.runKernel(lt,s,a)}const ku=ki({concat_:vu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(e,t,n=!1,s=!1){let a=xi(e,"a","matMul"),r=xi(t,"b","matMul");[a,r]=Yr(a,r);const i={a:a,b:r},o={transposeA:n,transposeB:s};return oi.runKernel(Qe,i,o)}const Su=ki({matMul_:Iu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tu(e){const t={x:xi(e,"x","sigmoid","float32")};return oi.runKernel(fs,t)}const Nu=ki({sigmoid_:Tu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cu(e,t,n){const s=xi(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:t,size:n};return oi.runKernel(ds,a,r)}const Ru=ki({slice_:Cu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eu(e){const t={x:xi(e,"x","tanh","float32")};return oi.runKernel(Fs,t)}const Gu=ki({tanh_:Eu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mu(e,t,n){const s=xi(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));$(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),$(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),$(s.shape[0]%a===0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const r={x:s},i={blockShape:t,crops:n};return oi.runKernel(Je,r,i)}const Lu=ki({batchToSpaceND_:Mu});function zu(e){let t;return t=0===e.rank||1===e.rank?gu(e,[1,1,1,e.size]):2===e.rank?gu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?gu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function Wu(e,t,n,s,a,r){null==r&&(r=.001);const i=xi(e,"x","batchNorm"),o=xi(t,"mean","batchNorm"),l=xi(n,"variance","batchNorm");let u,c;null!=a&&(u=xi(a,"scale","batchNorm")),null!=s&&(c=xi(s,"offset","batchNorm")),$(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),$(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),$(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d={x:zu(i),scale:u,offset:c,mean:o,variance:l},h={varianceEpsilon:r},p=oi.runKernel(Pt,d,h);return gu(p,i.shape)}const $u=ki({batchNorm_:Wu});function Fu(e,t,n,s,a,r){const i=xi(e,"x","batchNorm"),o=xi(t,"mean","batchNorm"),l=xi(n,"variance","batchNorm");let u,c;return null!=a&&(u=xi(a,"scale","batchNorm")),null!=s&&(c=xi(s,"offset","batchNorm")),$(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),$(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),$(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&$(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&$(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),$u(i,o,l,c,u,r)}const Vu=ki({batchNorm2d_:Fu});function Ou(e,t,n,s,a,r){const i=xi(e,"x","batchNorm"),o=xi(t,"mean","batchNorm"),l=xi(n,"variance","batchNorm");let u,c;return null!=a&&(u=xi(a,"scale","batchNorm")),null!=s&&(c=xi(s,"offset","batchNorm")),$(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),$(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),$(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&$(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&$(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),$u(i,o,l,c,u,r)}const Au=ki({batchNorm3d_:Ou});function Xu(e,t,n,s,a,r){const i=xi(e,"x","batchNorm"),o=xi(t,"mean","batchNorm"),l=xi(n,"variance","batchNorm");let u,c;return null!=a&&(u=xi(a,"scale","batchNorm")),null!=s&&(c=xi(s,"offset","batchNorm")),$(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),$(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),$(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&$(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&$(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),$u(i,o,l,c,u,r)}const Du=ki({batchNorm4d_:Xu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zu(e,t,n){const s=xi(e,"x","bincount"),a=xi(t,"weights","bincount");$("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),$(n>=0,(()=>`size must be non-negative, but got ${n}.`)),$(a.size===s.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${a.shape}.`));const r={x:s,weights:a},i={size:n};return oi.runKernel(qe,r,i)}const Ku=ki({bincount_:Zu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pu(e,t){let n=xi(e,"broadcastTo","x");const s=n.shape;if(be(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=gu(n,e)}const a=n.shape,r=Array.from(t);for(let l=t.length-1;l>=0;l--)if(a[l]===t[l])r[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===r.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return fl(n);const i={x:n},o={reps:r};return oi.runKernel(Vs,i,o)}const _u=ki({broadcastTo_:Pu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bu(e){const t={x:xi(e,"x","ceil","float32")};return oi.runKernel(at,t)}const Hu=ki({ceil_:Bu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uu(e,t,n){be(e),n=n||oe(t);const s={shape:e,value:t,dtype:n};return oi.runKernel(Xt,{},s)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yu(e,t,n){const s=xi(e,"x","clipByValue");if($(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Uu(s.shape,t,s.dtype);const a={x:s},r={clipValueMin:t,clipValueMax:n};return oi.runKernel(rt,a,r)}const ju=ki({clipByValue_:Yu});function Qu(e){return ku(e,0)}const Ju=ki({concat1d_:Qu});function qu(e,t){return ku(e,t)}const ec=ki({concat2d_:qu});function tc(e,t){return ku(e,t)}const nc=ki({concat3d_:tc});function sc(e,t){return ku(e,t)}const ac=ki({concat4d_:sc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rc(e,t,n,s,a="NHWC",r=[1,1],i){const o=xi(e,"x","conv2d","float32"),l=xi(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=gu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),$(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),mu("conv2d",s,i);const d="NHWC"===a?u.shape[3]:u.shape[1];$(d===l.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`)),$(du(n,r),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),$(hu(r),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),$(hu(n),(()=>"Error in conv2D: Strides should be larger than 0."));const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},m=oi.runKernel(ut,h,p);return c?gu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ic=ki({conv2d_:rc});function oc(e,t,n,s,a="NWC",r=1,i){const o=xi(e,"x","conv1d"),l=xi(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=gu(o,[1,o.shape[0],o.shape[1]])),$(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),$(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),mu("conv1d",s,i),$(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),$(du(n,r),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${r}'`)),$(hu(r),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),$(hu(n),(()=>"Error in conv1D: Stride should be larger than 0.")),$("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const d=gu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=gu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=ic(h,d,[1,n],s,"NHWC",[1,r],i);return gu(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}const lc=ki({conv1d_:oc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uc(e,t,n,s,a,r="NHWC",i){$(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=gu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),$(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),$(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===r?o[3]:o[1],d="NHWC"===r?l.shape[3]:l.shape[1];$(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),$(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),mu("conv2dDerInput",a,i);const h={dy:l,filter:n},p={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,inputShape:o},m=oi.runKernel(dt,h,p);return u?gu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const cc=ki({conv2DBackpropInput_:uc});function dc(e,t,n,s,a,r){const i=xi(e,"x","conv2dTranspose"),o=xi(t,"filter","conv2dTranspose");return cc(n,i,o,s,a,"NHWC",r)}const hc=ki({conv2dTranspose_:dc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pc(e,t,n,s,a="NDHWC",r=[1,1,1]){const i=xi(e,"x","conv3d"),o=xi(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=gu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),$(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),$(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),$(du(n,r),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),$("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),$(hu(r),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),$(hu(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},d={strides:n,pad:s,dataFormat:a,dilations:r},h=oi.runKernel(ht,c,d);return u?gu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const mc=ki({conv3d_:pc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(e,t,n,s,a){$(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let r=e,i=t,o=!1;4===t.rank&&(o=!0,i=gu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,e[0],e[1],e[2],e[3]]);const l=r[4],u=i.shape[4];$(5===r.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`)),$(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),$(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),$(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),$(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},d={pad:a,strides:s,inputShape:r},h=oi.runKernel(mt,c,d);return o?gu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const gc=ki({conv3DBackpropInput_:fc});function bc(e,t,n,s,a){const r=xi(e,"x","conv3dTranspose"),i=xi(t,"filter","conv3dTranspose");return gc(n,r,i,s,a)}const yc=ki({conv3dTranspose_:bc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xc(e){const t={x:xi(e,"x","cos","float32")};return oi.runKernel(ft,t)}const wc=ki({cos_:xc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vc(e){const t={x:xi(e,"x","cosh","float32")};return oi.runKernel(gt,t)}const kc=ki({cosh_:vc});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ic(e,t=0,n=!1,s=!1){const a={x:xi(e,"x","cumprod")},r={axis:t,exclusive:n,reverse:s};return oi.runKernel(bt,a,r)}const Sc=ki({cumprod_:Ic});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tc(e,t=0,n=!1,s=!1){const a={x:xi(e,"x","cumsum")},r={axis:t,exclusive:n,reverse:s};return oi.runKernel(yt,a,r)}const Nc=ki({cumsum_:Tc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cc(e,t,n,s=!1){const a=xi(e,"x","denseBincount"),r=xi(t,"weights","denseBincount");$("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),$(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),$(n>=0,(()=>`size must be non-negative, but got ${n}.`)),$(r.size===a.size||0===r.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${r.shape}.`));const i={x:a,weights:r},o={size:n,binaryOutput:s};return oi.runKernel(wt,i,o)}const Rc=ki({denseBincount_:Cc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ec(e,t,n="NHWC"){const s=xi(e,"x","depthToSpace","float32"),a="NHWC"===n?s.shape[1]:s.shape[2],r="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];$(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),$(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),$(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),$(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return oi.runKernel(vt,o,l)}const Gc=ki({depthToSpace_:Ec});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mc(e,t,n,s,a="NHWC",r=[1,1],i){const o=xi(e,"x","depthwiseConv2d","float32"),l=xi(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=gu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),$(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const d="NHWC"===a?u.shape[3]:u.shape[1];$(d===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`)),mu("depthwiseConv2d",s,i);const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},m=oi.runKernel(kt,h,p);return c?gu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Lc=ki({depthwiseConv2d_:Mc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zc(e,t,n,s,a=[1,1],r="NHWC"){const i=xi(e,"x","dilation2d"),o=xi(t,"filter","dilation2d");$(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),$(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),$("NHWC"===r,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`));let l=i,u=!1;3===i.rank&&(l=gu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),$(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},d={strides:n,pad:s,dilations:a},h=oi.runKernel(Nt,c,d);return u?gu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Wc=ki({dilation2d_:zc});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $c(e,t){const n=e.length,s=[];for(let a=0;a<n;a++){const r=n-1-a,i=e[r]||1;(t[t.length-1-a]||1)>1&&1===i&&s.unshift(r)}return s}function Fc(e,t){const n=[];for(let s=0;s<t.length;s++){const a=e[e.length-s-1],r=t.length-s-1,i=t[r];(null==a||1===a&&i>1)&&n.unshift(r)}return n}function Vc(e,t){const n=Math.max(e.length,t.length),s=new Array(n);for(let a=0;a<n;a++){let r=e[e.length-a-1];null==r&&(r=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===r)s[n-a-1]=i;else if(1===i)s[n-a-1]=r;else{if(r!==i){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}s[n-a-1]=r}}return s}const Oc=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Vc,getBroadcastDims:$c,getReductionAxes:Fc},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ac(e,t){let n=xi(e,"a","equal","string_or_numeric"),s=xi(t,"b","equal","string_or_numeric");[n,s]=Yr(n,s),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel($t,a)}const Xc=ki({equal_:Ac});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dc(e,t,n){const s=xi(t,"a","where"),a=xi(n,"b","where"),r=xi(e,"condition","where","bool"),i=Vc(Vc(r.shape,s.shape),a.shape),o=_u(r,i),l=_u(s,i),u=_u(a,i),c={condition:o,t:l,e:u};return oi.runKernel(us,c)}const Zc=ki({where_:Dc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kc(e){const t={x:xi(e,"x","zerosLike")};return oi.runKernel(_s,t)}const Pc=ki({zerosLike_:Kc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _c(e,t){let n=xi(e,"a","div"),s=xi(t,"b","div");[n,s]=Yr(n,s);const a=Il(n,s),r=Pc(a),i=Xc(s,r);return Zc(i,r,a)}const Bc=ki({divNoNan_:_c});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hc(e,t){const n=xi(e,"t1","dot"),s=xi(t,"t2","dot");$((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const a=1===n.rank?n.size:n.shape[1],r=1===s.rank?s.size:s.shape[0];if($(a===r,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${r}.`)),1===n.rank&&1===s.rank){const e=gu(n,[1,-1]),t=gu(s,[-1,1]),a=Su(e,t);return gu(a,[])}if(1===n.rank&&2===s.rank){const e=gu(n,[1,-1]),t=gu(s,[s.shape[0],s.shape[1]]),a=Su(e,t);return gu(a,[a.size])}if(2===n.rank&&1===s.rank){const e=gu(s,[-1,1]),t=Su(n,e);return gu(t,[t.size])}{const e=gu(s,[s.shape[0],s.shape[1]]);return Su(n,e)}}const Uc=ki({dot_:Hc});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yc(e,...t){const n=t.map(((e,t)=>xi(e,`tensors${t}`,"einsum"))),s={equation:e};return oi.runKernel(Mt,n,s)}const jc=ki({einsum_:Yc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qc(e){const t={x:xi(e,"x","elu","float32")};return oi.runKernel(Lt,t)}const Jc=ki({elu_:Qc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qc(e){let t=xi(e,"x","erf");$("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=pl(t,"float32"));const n={x:t};return oi.runKernel(Wt,n)}const ed=ki({erf_:qc});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function td(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function nd(e,t,n){const s=e.length+t.length,a=[];let r=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?a.push(e[r++]):a.push(t[i++]);return a}function sd(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);const a=t.map((t=>e[t]));return[n,a]}function ad(e,t){const n=t.map((e=>1));return nd(e,n,t)}function rd(e,t,n){$(td(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function id(e,t){if(td(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function od(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function ld(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ud(e,t=null,n=!1){const s={x:xi(e,"x","max")},a={reductionIndices:t,keepDims:n};return oi.runKernel(bn,s,a)}const cd=ki({max_:ud});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dd(e,t=null,n=!1){const s={x:xi(e,"x","min")},a={axis:t,keepDims:n};return oi.runKernel(Tn,s,a)}const hd=ki({min_:dd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pd(e,t){let n=xi(e,"base","pow"),s=xi(t,"exp","pow");[n,s]=Yr(n,s);const a={a:n,b:s};return oi.runKernel(Dn,a)}const md=ki({pow_:pd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(e,t){if((mr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&mr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ti(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gd(e){const t={x:xi(e,"x","sqrt","float32")};return oi.runKernel(bs,t)}const bd=ki({sqrt_:gd});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yd(e){const t=xi(e,"x","square"),n={};return oi.runKernel("Square",{x:t},n)}const xd=ki({square_:yd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wd(e,t=null,n=!1){let s=xi(e,"x","sum");"bool"===s.dtype&&(s=pl(s,"int32"));const a={x:s},r={axis:t,keepDims:n};return oi.runKernel(ys,a,r)}const vd=ki({sum_:wd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(e,t="euclidean",n=null,s=!1){e=xi(e,"x","norm");const a=Id(e,t,n);let r=a.shape;if(s){const t=Y(n,e.shape);r=ad(a.shape,t)}return gu(a,r)}function Id(e,t,n=null){if(0===e.rank)return Cl(e);if(1!==e.rank&&null===n)return Id(gu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return vd(Cl(e),n);if(t===1/0)return cd(Cl(e),n);if(t===-1/0)return hd(Cl(e),n);if("euclidean"===t||2===t)return bd(vd(md(Cl(e),fd(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return cd(vd(Cl(e),n[0]),n[1]-1);if(t===1/0)return cd(vd(Cl(e),n[1]),n[0]);if(t===-1/0)return hd(vd(Cl(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return bd(vd(xd(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Sd=ki({norm_:kd});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Td(e,t=null,n=!1){return Sd(e,"euclidean",t,n)}const Nd=ki({euclideanNorm_:Td});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(e){const t={x:xi(e,"x","exp")};return oi.runKernel(Ft,t)}const Rd=ki({exp_:Cd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ed(e,t=0){const n=xi(e,"x","expandDims","string_or_numeric");$(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},a={dim:t};return oi.runKernel(Vt,s,a)}const Gd=ki({expandDims_:Ed});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Md(e){const t={x:xi(e,"x","expm1")};return oi.runKernel(Ot,t)}const Ld=ki({expm1_:Md});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zd(e,t){const n=xi(e,"x","tile","string_or_numeric");$(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},a={reps:t};return oi.runKernel(Vs,s,a)}const Wd=ki({tile_:zd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $d(e,t,n,s="float32"){null==t&&(t=e);const a=dl([e,t],s),r=e<=t?e:t;for(let o=0;o<r;++o)a.set(1,o,o);const i=gu(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Wd(Gd(i,0),[n[0],1,1]);if(2===n.length)return Wd(Gd(Gd(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Wd(Gd(Gd(Gd(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const Fd=ki({eye_:$d});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vd(e){const t={x:xi(e,"x","floor","float32")};return oi.runKernel(Zt,t)}const Od=ki({floor_:Vd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(e,t,n=0,s=0){const a=xi(e,"x","gather"),r=xi(t,"indices","gather","int32"),i={x:a,indices:r},o={axis:n,batchDims:s};return oi.runKernel(_t,i,o)}const Xd=ki({gather_:Ad});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dd(e,t){let n=xi(e,"a","greater","string_or_numeric"),s=xi(t,"b","greater","string_or_numeric");[n,s]=Yr(n,s),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(Ht,a)}const Zd=ki({greater_:Dd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(e,t){let n=xi(e,"a","greaterEqual","string_or_numeric"),s=xi(t,"b","greaterEqual","string_or_numeric");[n,s]=Yr(n,s),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(Ut,a)}const Pd=ki({greaterEqual_:Kd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _d(e){const t={input:xi(e,"input","imag")};return oi.runKernel(Qt,t)}const Bd=ki({imag_:_d});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hd(e){const t={x:xi(e,"x","isFinite")};return oi.runKernel(Jt,t)}const Ud=ki({isFinite_:Hd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yd(e){const t={x:xi(e,"x","isInf")};return oi.runKernel(qt,t)}const jd=ki({isInf_:Yd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qd(e){const t={x:xi(e,"x","isNaN")};return oi.runKernel(en,t)}const Jd=ki({isNaN_:Qd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(e,t=.2){const n={x:xi(e,"x","leakyRelu")},s={alpha:t};return oi.runKernel(tn,n,s)}const eh=ki({leakyRelu_:qd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function th(e,t){let n=xi(e,"a","less","string_or_numeric"),s=xi(t,"b","less","string_or_numeric");[n,s]=Yr(n,s),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(nn,a)}const nh=ki({less_:th});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sh(e,t){let n=xi(e,"a","lessEqual","string_or_numeric"),s=xi(t,"b","lessEqual","string_or_numeric");[n,s]=Yr(n,s),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(sn,a)}const ah=ki({lessEqual_:sh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rh(e,t=5,n=1,s=1,a=.5){const r=xi(e,"x","localResponseNormalization");$(4===r.rank||3===r.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${r.rank}.`)),$(Z(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=r,o=!1;3===r.rank&&(o=!0,i=gu(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:a},c=oi.runKernel(mn,l,u);return o?gu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const ih=ki({localResponseNormalization_:rh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oh(e){const t={x:xi(e,"x","log","float32")};return oi.runKernel(rn,t)}const lh=ki({log_:oh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uh(e){const t={x:xi(e,"x","log1p")};return oi.runKernel(on,t)}const ch=ki({log1p_:uh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dh(e){return $(le(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=xi(t,"x","tf.grad","string_or_numeric"),a=null!=n?xi(n,"dy","tf.grad"):null;return oi.tidy((()=>{const{value:t,grads:n}=oi.gradients((()=>e(s)),[s],a);return null!=a&&F(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),bh(n),n[0]}))}}function hh(e){return $(le(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{$(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=wi(t,"args","tf.grads","string_or_numeric"),a=null!=n?xi(n,"dy","tf.grads"):null;return oi.tidy((()=>{const{value:t,grads:n}=oi.gradients((()=>e(...s)),s,a);return null!=a&&F(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bh(n),n}))}}function ph(e){return $(le(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{$(t instanceof Fr,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),$(null==n||n instanceof Fr,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:a}=oi.gradients((()=>e(t)),[t],n);return bh(s),{grad:s[0],value:a}}}function mh(e){return $(le(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{$(Array.isArray(t)&&t.every((e=>e instanceof Fr)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),$(null==n||n instanceof Fr,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=oi.gradients((()=>e(...t)),t,n);return null!=n&&F(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),bh(s.grads),s}}function fh(e,t){$(le(e),(()=>"The f passed in variableGrads(f) must be a function")),$(null==t||Array.isArray(t)&&t.every((e=>e instanceof Or)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in oi.registeredVariables)t.push(oi.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),$(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const r=!0,{value:i,grads:o}=oi.gradients(e,t,null,r);$(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),$(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=o[t]&&(l[e.name]=o[t])})),null!=s&&s.forEach((e=>l[e.name]=null)),{value:i,grads:l}}function gh(e){return oi.customGrad(e)}function bh(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yh(e){const t={x:xi(e,"x","neg")};return oi.runKernel(Mn,t)}const xh=ki({neg_:yh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wh(e){const t={x:xi(e,"x","softplus")};return oi.runKernel(gs,t)}const vh=ki({softplus_:wh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kh(e){const t=xi(e,"x","logSigmoid");return gh((e=>({value:xh(vh(xh(e))),gradFunc:t=>Tl(t,Nu(xh(e)))})))(t)}const Ih=ki({logSigmoid_:kh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sh(e,t){let n=xi(e,"a","sub"),s=xi(t,"b","sub");[n,s]=Yr(n,s);const a={a:n,b:s};return oi.runKernel(Ws,a)}const Th=ki({sub_:Sh});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(e,t=-1){const n=xi(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return gh(((e,n)=>{const s=cd(e,t,!0),a=Th(e,s),r=Th(pl(a,"float32"),lh(vd(Rd(a),t,!0)));return n([r]),{value:r,gradFunc:(e,n)=>{const[s]=n,a=!0,r=Rd(s);return Th(e,Tl(vd(e,t,a),r))}}}))(n)}const Ch=ki({logSoftmax_:Nh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rh(e,t=null,n=!1){const s=xi(e,"x","logSumExp"),a=Y(t,s.shape),r=cd(s,a,!0),i=Th(s,r),o=Rd(i),l=vd(o,a),u=lh(l),c=xl(gu(r,u.shape),u);if(n){const e=ad(c.shape,a);return gu(c,e)}return c}const Eh=ki({logSumExp_:Rh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gh(e,t){const n=xi(e,"a","logicalAnd","bool"),s=xi(t,"b","logicalAnd","bool");Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(ln,a)}const Mh=ki({logicalAnd_:Gh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lh(e){const t={x:xi(e,"x","logicalNot","bool")};return oi.runKernel(un,t)}const zh=ki({logicalNot_:Lh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wh(e,t){const n=xi(e,"a","logicalOr","bool"),s=xi(t,"b","logicalOr","bool");Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(cn,a)}const $h=ki({logicalOr_:Wh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fh(e,t){const n=xi(e,"a","logicalXor","bool"),s=xi(t,"b","logicalXor","bool");return Vc(n.shape,s.shape),Mh($h(e,t),zh(Mh(e,t)))}const Vh=ki({logicalXor_:Fh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oh(e,t,n,s,a){const r=xi(e,"x","maxPool"),i=1;let o=r,l=!1;3===r.rank&&(l=!0,o=gu(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),$(du(n,i),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),mu("maxPool",s,a);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:a},d=oi.runKernel(xn,u,c);return l?gu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Ah=ki({maxPool_:Oh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xh(e,t=[1,1,1],n,s,a,r="NDHWC"){const i=xi(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=gu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),$("NDHWC"===r,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`)),mu("maxPool3d",s,a);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:a,dataFormat:r},d=oi.runKernel(vn,u,c);return l?gu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Dh=ki({maxPool3d_:Xh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zh(e,t){let n=xi(e,"a","maximum"),s=xi(t,"b","maximum");[n,s]=Yr(n,s),"bool"===n.dtype&&(n=pl(n,"int32"),s=pl(s,"int32")),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(yn,a)}const Kh=ki({maximum_:Zh});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ph(e,t=null,n=!1){const s={x:xi(e,"x","mean")},a={axis:t,keepDims:n};return oi.runKernel(Sn,s,a)}const _h=ki({mean_:Ph});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bh(e,t="float32"){if(be(e),"complex64"===t){const t=Bh(e,"float32"),n=Bh(e,"float32");return Si(t,n)}const n=fe(O(e),t);return oi.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hh(e,t="float32"){if(be(e),"complex64"===t){const t=Hh(e,"float32"),n=Bh(e,"float32");return Si(t,n)}const n=me(O(e),t);return oi.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uh(e,t){let n=xi(e,"a","minimum"),s=xi(t,"b","minimum");[n,s]=Yr(n,s),"bool"===n.dtype&&(n=pl(n,"int32"),s=pl(s,"int32")),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(Nn,a)}const Yh=ki({minimum_:Uh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jh(e,t,n){$("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=xi(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let o=0;o<s.rank;o++)$(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$(t[o][0]>=0&&t[o][0]<=s.shape[o]-a&&t[o][1]>=0&&t[o][1]<=s.shape[o]-a,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-a} or less than 0 for input of shape ${s.shape}`));const r={paddings:t,mode:n},i={x:s};return oi.runKernel(Cn,i,r)}const Qh=ki({mirrorPad_:jh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jh(e,t){let n=xi(e,"a","mod"),s=xi(t,"b","mod");[n,s]=Yr(n,s);const a={a:n,b:s};return oi.runKernel(Rn,a)}const qh=ki({mod_:Jh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ep(e,t=null,n=!1){e=xi(e,"x","moments");const s=Y(t,e.shape),a=_h(e,s,n);let r=a.shape;n||(r=ad(a.shape,s));const i=xd(Th(pl(e,"float32"),gu(a,r))),o=_h(i,s,n);return{mean:a,variance:o}}const tp=ki({moments_:ep});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function np(e,t){let n=xi(e,"a","notEqual","string_or_numeric"),s=xi(t,"b","notEqual","string_or_numeric");[n,s]=Yr(n,s),Vc(n.shape,s.shape);const a={a:n,b:s};return oi.runKernel(Ln,a)}const sp=ki({notEqual_:np});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ap(e,t,n=1,s=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:xi(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:s};return oi.runKernel(Vn,r,i)}const rp=ki({oneHot_:ap});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ip(e){const t={x:xi(e,"x","onesLike")};return oi.runKernel(Fn,t)}const op=ki({onesLike_:ip});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lp(e,t,n=0){const s=xi(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},r={x:s};return oi.runKernel(An,r,a)}const up=ki({pad_:lp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(e,t,n){const s=xi(e,"x","spaceToBatchND");$(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),$(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),$(s.shape.reduce(((e,s,a)=>a>0&&a<=t.length?e&&(s+n[a-1][0]+n[a-1][1])%t[a-1]===0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:s},r={blockShape:t,paddings:n};return oi.runKernel(xs,a,r)}const dp=ki({spaceToBatchND_:cp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hp(e,t,n,s,a,r,i){null==a&&(a=[1,1]),null==r&&(r=1),0===s&&(s="valid");const o=xi(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=gu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(du(r,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`));const c=Ql(l.shape,t,r,a,s),d=[c.dilationHeight,c.dilationWidth];let h;h="same"===s?mp([c.filterHeight,c.filterWidth],d):[[0,0],[0,0]];const p=1===d[0]&&1===d[1],[m,f]=pp([c.inHeight,c.inWidth],d,h),g=p?s:"valid",b=p?l:dp(l,d,m),y=("avg"===n?()=>yu(b,t,r,g,i):()=>Ah(b,t,r,g,i))(),x=p?y:Lu(y,d,f);return u?gu(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function pp(e,t,n){const s=n.map((e=>e[0])),a=n.map((e=>e[1])),r=e.concat(s,a),i=t.map(((e,t)=>(e-r[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[s[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}function mp(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],a[t]]))}const fp=ki({pool_:hp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gp(e,t){const n=xi(e,"x","prelu"),s=xi(t,"alpha","prelu"),a={x:n,alpha:s};return oi.runKernel(Zn,a)}const bp=ki({prelu_:gp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yp(e,t=null,n=!1){let s=xi(e,"x","prod");"bool"===s.dtype&&(s=pl(s,"int32"));const a={x:s},r={axis:t,keepDims:n};return oi.runKernel(Kn,a,r)}const xp=ki({prod_:yp});var wp={exports:{}};wp.exports,function(e){(function(e,t,n){function s(e){var t=this,n=i();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function r(e,t){var n=new s(e),r=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}function i(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var s=.02519603282416938*e;e=s>>>0,s-=e,s*=e,e=s>>>0,s-=e,e+=4294967296*s}return 2.3283064365386963e-10*(e>>>0)};return t}t&&t.exports?t.exports=r:n&&n.amd?n((function(){return r})):this.alea=r})(0,e,!1)}(wp);var vp=wp.exports,kp={exports:{}};kp.exports,function(e){(function(e,t,n){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function r(e,t){var n=new s(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=r:n&&n.amd?n((function(){return r})):this.xor128=r})(0,e,!1)}(kp);var Ip=kp.exports,Sp={exports:{}};Sp.exports,function(e){(function(e,t,n){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function r(e,t){var n=new s(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=r:n&&n.amd?n((function(){return r})):this.xorwow=r})(0,e,!1)}(Sp);var Tp=Sp.exports,Np={exports:{}};Np.exports,function(e){(function(e,t,n){function s(e){var t=this;function n(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,s=t.x,a=t.i;return e=s[a],e^=e>>>7,n=e^e<<24,e=s[a+1&7],n^=e^e>>>10,e=s[a+3&7],n^=e^e>>>3,e=s[a+4&7],n^=e^e<<7,e=s[a+7&7],e^=e<<13,n^=e^e<<9,s[a]=n,t.i=a+1&7,n},n(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function r(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},i.int32=n.next,i.quick=i,r&&(r.x&&a(r,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=r:n&&n.amd?n((function(){return r})):this.xorshift7=r})(0,e,!1)}(Np);var Cp=Np.exports,Rp={exports:{}};Rp.exports,function(e){(function(e,t,n){function s(e){var t=this;function n(e,t){var n,s,a,r,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),a=0,r=-32;r<l;++r)t&&(s^=t.charCodeAt((r+32)%t.length)),0===r&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,r>=0&&(i=i+1640531527|0,n=o[127&r]^=s+i,a=0==n?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,r=512;r>0;--r)s=o[a+34&127],n=o[a=a+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[a]=s^n;e.w=i,e.X=o,e.i=a}t.next=function(){var e,n,s=t.w,a=t.X,r=t.i;return t.w=s=s+1640531527|0,n=a[r+34&127],e=a[r=r+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[r]=n^e,t.i=r,n+(s^s>>>16)|0},n(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function r(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},i.int32=n.next,i.quick=i,r&&(r.X&&a(r,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=r:n&&n.amd?n((function(){return r})):this.xor4096=r})(0,e,!1)}(Rp);var Ep=Rp.exports,Gp={exports:{}};Gp.exports,function(e){(function(e,t,n){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function r(e,t){var n=new s(e),r=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=r:n&&n.amd?n((function(){return r})):this.tychei=r})(0,e,!1)}(Gp);var Mp=Gp.exports,Lp={exports:{}};const zp={},Wp=Object.freeze(Object.defineProperty({__proto__:null,default:zp},Symbol.toStringTag,{value:"Module"})),$p=ma(Wp);(function(e){(function(t,n,s){var a,r=256,i=6,o=52,l="random",u=s.pow(r,i),c=s.pow(2,o),d=2*c,h=r-1;function p(e,t,a){var o=[];t=1==t?{entropy:!0}:t||{};var h=b(g(t.entropy?[e,x(n)]:e??y(),3),o),p=new m(o),w=function(){for(var e=p.g(i),t=u,n=0;e<c;)e=(e+n)*r,t*=r,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|p.g(4)},w.quick=function(){return p.g(4)/4294967296},w.double=w,b(x(p.S),n),(t.pass||a||function(e,t,n,a){return a&&(a.S&&f(a,p),e.state=function(){return f(p,{})}),n?(s[l]=e,t):e})(w,h,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,s=this,a=0,i=s.i=s.j=0,o=s.S=[];for(n||(e=[n++]);a<r;)o[a]=a++;for(a=0;a<r;a++)o[a]=o[i=h&i+e[a%n]+(t=o[a])],o[i]=t;(s.g=function(e){for(var t,n=0,a=s.i,i=s.j,o=s.S;e--;)t=o[a=h&a+1],n=n*r+o[h&(o[a]=o[i=h&i+t])+(o[i]=t)];return s.i=a,s.j=i,n})(r)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],a=typeof e;if(t&&"object"==a)for(n in e)try{s.push(g(e[n],t-1))}catch{}return s.length?s:"string"==a?e:e+"\0"}function b(e,t){for(var n,s=e+"",a=0;a<s.length;)t[h&a]=h&(n^=19*t[h&a])+s.charCodeAt(a++);return x(t)}function y(){try{var e;return a&&(e=a.randomBytes)?e=e(r):(e=new Uint8Array(r),(t.crypto||t.msCrypto).getRandomValues(e)),x(e)}catch{var s=t.navigator,i=s&&s.plugins;return[+new Date,t,i,t.screen,x(n)]}}function x(e){return String.fromCharCode.apply(0,e)}if(b(s.random(),n),e.exports){e.exports=p;try{a=$p}catch{}}else s["seed"+l]=p})(typeof self<"u"?self:ha,[],Math)})(Lp);var Fp=Lp.exports,Vp=vp,Op=Ip,Ap=Tp,Xp=Cp,Dp=Ep,Zp=Mp,Kp=Fp;Kp.alea=Vp,Kp.xor128=Op,Kp.xorwow=Ap,Kp.xorshift7=Xp,Kp.xor4096=Dp,Kp.tychei=Zp;var Pp=Kp;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _p{constructor(e,t,n,s,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const r=a||Math.random();this.random=Pp.alea(r.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,a,r;do{s=2*this.random()-1,a=2*this.random()-1,r=s*s+a*a}while(r>=1||0===r);const i=Math.sqrt(-2*Math.log(r)/r);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Bp{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const a=s||Math.random();this.randu=Pp.alea(a.toString()),this.randn=new _p(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,a,r;for(;;){do{s=this.randn.nextValue(),r=1+this.c*s}while(r<=0);if(r*=r*r,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-r+Math.log(r)),a=this.randu(),a<t||Math.log(a)<n)break}return r=1/this.beta*this.d*r,this.alpha<1&&(r*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(r)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Hp{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Pp.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Up(e,t=0,n=1,s,a){if(be(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const r=new _p(t,n,s,!1,a),i=dl(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const Yp=ki({randomNormal_:Up});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jp(e,t=0,n=1,s="float32",a){be(e);const r=dl(e,s),i=new Hp(t,n,null,a);for(let o=0;o<r.values.length;o++)r.values[o]=i.nextValue();return r.toTensor()}const Qp=ki({randomUniform_:jp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jp(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:s};return oi.runKernel(Hn,{},a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qp(e){const t={input:xi(e,"input","real")};return oi.runKernel(Un,t)}const em=ki({real_:qp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tm(e){const t={x:xi(e,"x","reciprocal")};return oi.runKernel(Yn,t)}const nm=ki({reciprocal_:tm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sm(e){const t={x:xi(e,"x","relu")};return oi.runKernel(jn,t)}const am=ki({relu_:sm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rm(e){const t={x:xi(e,"x","relu6")};return oi.runKernel(ns,t)}const im=ki({relu6_:rm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function om(e,t){const n={x:xi(e,"x","reverse")},s={dims:t};return oi.runKernel(ss,n,s)}const lm=ki({reverse_:om});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function um(e){const t={x:xi(e,"x","round")};return oi.runKernel(as,t)}const cm=ki({round_:um});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dm(e){const t={x:xi(e,"x","rsqrt","float32")};return oi.runKernel(rs,t)}const hm=ki({rsqrt_:dm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pm(e){const t={x:xi(e,"x","selu")};return oi.runKernel(cs,t)}const mm=ki({selu_:pm});function fm(e,t,n,s,a,r=[1,1],i="NHWC"){const o=xi(e,"x","separableConv2d"),l=xi(t,"depthwiseFilter","separableConv2d"),u=xi(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=gu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),$(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),$(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),$(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),$(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const h=l.shape[2],p=l.shape[3];$(u.shape[2]===h*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`));const m=Lc(c,l,s,a,i,r),f=ic(m,u,1,"valid",i);return d?gu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const gm=ki({separableConv2d_:fm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bm(e){const t={x:xi(e,"x","sign")};return oi.runKernel(ms,t)}const ym=ki({sign_:bm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xm(e){const t={x:xi(e,"x","sin","float32")};return oi.runKernel(hs,t)}const wm=ki({sin_:xm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vm(e){const t={x:xi(e,"x","sinh")};return oi.runKernel(ps,t)}const km=ki({sinh_:vm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Im(e,t,n){const s=xi(e,"x","slice1d");return $(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Ru(s,[t],[n])}const Sm=ki({slice1d_:Im});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tm(e,t,n){const s=xi(e,"x","slice2d");return $(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Ru(s,t,n)}const Nm=ki({slice2d_:Tm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cm(e,t,n){const s=xi(e,"x","slice3d");return $(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Ru(s,t,n)}const Rm=ki({slice3d_:Cm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Em(e,t,n){const s=xi(e,"x","slice4d");return $(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Ru(s,t,n)}const Gm=ki({slice4d_:Em});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mm(e,t=-1){const n=xi(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},a={dim:t};return oi.runKernel(vs,s,a)}const Lm=ki({softmax_:Mm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zm(e){$("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return oi.runKernel(At,t)}const Wm=ki({fft_:zm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $m(e){$("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return oi.runKernel(jt,t)}const Fm=ki({ifft_:$m});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vm(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const a=gu(e,[n,t]);s=Fm(a)}else{const a=[n,2*(t-1)],r=gu(em(e),[n,t]),i=gu(Bd(e),[n,t]),o=lm(Ru(r,[0,1],[n,t-2]),1),l=Tl(lm(Ru(i,[0,1],[n,t-2]),1),fd(-1)),u=ku([r,o],1),c=ku([i,l],1),d=gu(Si(u,c),[a[0],a[1]]);s=Fm(d)}if(s=em(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=gu(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}const Om=ki({irfft_:Vm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Am(e,t,n=0){const s={x:xi(e,"x","split")},a={numOrSizeSplits:t,axis:n};return oi.runKernel(ws,s,a)}const Xm=ki({split_:Am});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dm(e,t){$("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let a;if(null!=t&&t<n){const s=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,a=Ru(e,s,r),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,a=ku([e,Bh(s)],e.shape.length-1),n=t}else a=e;const r=Pc(a),i=gu(Si(a,r),[s,n]),o=Wm(i),l=Math.floor(n/2)+1,u=em(o),c=Bd(o),d=Xm(u,[l,n-l],u.shape.length-1),h=Xm(c,[l,n-l],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=l,gu(Si(d[0],h[0]),p)}const Zm=ki({rfft_:Dm});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Km(e,t){let n=xi(e,"a","squaredDifference"),s=xi(t,"b","squaredDifference");[n,s]=Yr(n,s),Vc(n.shape,s.shape);const a={a:n,b:s},r={};return oi.runKernel(Cs,a,r)}const Pm=ki({squaredDifference_:Km});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _m(e,t){const n=xi(e,"x","squeeze","string_or_numeric");return gu(n,j(n.shape,t).newShape)}const Bm=ki({squeeze_:_m});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hm(e,t=0){const n=wi(e,"tensors","stack","string_or_numeric");$(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&$(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,a={axis:t};return oi.runKernel(On,s,a)}const Um=ki({stack_:Hm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ym(e,t=0){const n={x:xi(e,"x","step")},s={alpha:t};return oi.runKernel(Bs,n,s)}const jm=ki({step_:Ym});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qm(e,t,n,s,a=0,r=0,i=0,o=0,l=0){const u={x:xi(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return oi.runKernel(Gs,u,c)}const Jm=ki({stridedSlice_:Qm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(e){const t={x:xi(e,"x","tan","float32")};return oi.runKernel($s,t)}const ef=ki({tan_:qm});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tf(e,t){V(e);const n=gi(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ti(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nf(e,t,n){if(V(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=gi(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ti(e,t,s,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sf(e,t,n){if(V(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=gi(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ti(e,t,s,n)}function af(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(r+` update.rank < ${a}. `);if(e.length<s+(n.rank-a))throw new Error(r+` Output shape length < ${s+(n.rank-a)}`);if(n.rank!==a+e.length-s)throw new Error(r+" update.rank != "+(a+e.length-s));for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(r+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+s])throw new Error(r+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function rf(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}af(n,t,e)}function of(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,r=n.length;let i=1;for(let d=a;d<r;++d)i*=n[d];const o=a<1?1:a,l=O(t.shape)/o,u=[...ce(n.slice(0,a)),1],c=O(n);return{sliceRank:a,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}const lf=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:of,validateInput:rf,validateUpdateShape:af},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uf(e,t=1,n=!0){const s=xi(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const r={x:s},i={k:t,sorted:n},[o,l]=oi.runKernel(Os,r,i);return{values:o,indices:l}}const cf=ki({topk_:uf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function df(e,t=0,n=1,s,a){if(be(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const r=new _p(t,n,s,!0,a),i=dl(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const hf=ki({truncatedNormal_:df});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pf(e,t=0){const n=xi(e,"x","unique","string_or_numeric");$(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},a={axis:t},[r,i]=oi.runKernel(Ds,s,a);return{values:r,indices:i}}const mf=ki({unique_:pf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ff(e,t,n){const s=xi(e,"x","unsortedSegmentSum"),a=xi(t,"segmentIds","unsortedSegmentSum","int32");$(Z(n),(()=>"numSegments must be of dtype int"));const r={x:s,segmentIds:a},i={numSegments:n};return oi.runKernel(Ks,r,i)}const gf=ki({unsortedSegmentSum_:ff});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bf(e,t=0){const n=xi(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},a={axis:t};return oi.runKernel(Zs,s,a)}const yf=ki({unstack_:bf});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xf(e,t=!0,n,s){return oi.makeVariable(e,t,n,s)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wf(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const s=dl(e,"int32"),a=dl([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=s.indexToLoc(n[r]),i=r*e.length;a.values.set(t,i)}return a.toTensor()}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vf(e,t,n){const s=xi(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),$(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{$(e>=0&&e<s.rank,(()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`))})),s.rank<=1)return s.clone();const a={x:s},r={perm:t};return"complex64"===s.dtype?Oi((()=>{let e=em(s),t=Bd(s);return e=oi.runKernel(Xs,{x:e},r),t=oi.runKernel(Xs,{x:t},r),n&&(t=xh(t)),Si(e,t)})):oi.runKernel(Xs,a,r)}const kf=ki({transpose_:vf});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function If(e,t){if(null==t)return e.shape.slice();if(D(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sf(e,t,n,s){const a=xi(e,"x","dropout");if($("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),$(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Fr?a.clone():a;const r=If(a,n),i=1-t,o=Il(Od(xl(Qp(r,0,1,"float32",s),i)),i);return Tl(a,o)}const Tf=ki({dropout_:Sf});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Cf(e,t,n){const s=1-e%2,a=new Float32Array(e);for(let r=0;r<e;++r){const i=2*Math.PI*r/(e+s-1);a[r]=t-n*Math.cos(i)}return tf(a,"float32")}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rf(e,t,n,s,a,r="NHWC",i){let o=e;3===e.rank&&(o=gu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=gu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),$(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),$(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===r?o.shape[3]:o.shape[1],c="NHWC"===r?l.shape[3]:l.shape[1];$(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),$(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),mu("conv2dDerFilter",a,i);const d={x:o,dy:l},h={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,filterShape:n};return oi.runKernel(ct,d,h)}const Ef=ki({conv2DBackpropFilter_:Rf});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gf(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Tl(e,jm(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Mf(e,t){let n=t;const s=Fc(e.shape,t.shape);return s.length>0&&(n=vd(n,s)),gu(n,e.shape)}function Lf(e,t,n,s){if("linear"===t)return e;if("relu"===t)return am(e);if("elu"===t)return Jc(e);if("relu6"===t)return im(e);if("prelu"===t)return bp(e,n);if("leakyrelu"===t)return eh(e,s);if("sigmoid"===t)return Nu(e);throw new Error(`Unknown fused activation ${t}.`)}const zf=(e,t)=>!(e>0)||"linear"===t
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;function Wf({x:e,filter:t,strides:n,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===zf(oi.state.gradientDepth,l)){$("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let d=ic(e,t,n,s,a,r,i);return null!=o&&(d=xl(d,o)),Lf(d,l,u,c)}const d=xi(e,"x","conv2d","float32"),h=xi(t,"filter","conv2d","float32");let p=d,m=!1;3===d.rank&&(m=!0,p=gu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),$(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),mu("fused conv2d",s,i);const f="NHWC"===a?p.shape[3]:p.shape[1];$(h.shape[2]===f,(()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${h.shape[2]}.`)),$(du(n,r),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`));const g=ql(p.shape,h.shape,n,r,s,i);let b,y;if(null!=o&&(b=xi(o,"bias","fused conv2d"),[b]=Yr(b,d),"NHWC"===a?Vc(g.outShape,b.shape):($(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),$(0===b.shape.length||b.shape[0]===g.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if($(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)$(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Vc(e,g.outShape)}catch{const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(t)}y=xi(u,"prelu weights","fused conv2d")}const x=(e,t)=>{$("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[i,o,u,c]=t,d=Gf(e,u,l);$(cu(r),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const h=cc(o.shape,d,i,n,s),p=Ef(o,d,i.shape,n,s),m=[h,p];if(null!=c){const e=Mf(c,d);m.push(e)}return m},w={x:p,filter:h,bias:b,preluActivationWeights:y},v={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?gh(((e,t,n)=>{let s=oi.runKernel(js,w,v);return n([t,e,s]),m&&(s=gu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(p,h):gh(((e,t,n,s)=>{let a=oi.runKernel(js,w,v);return s([t,e,a,n]),m&&(a=gu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(p,h,b)}const $f=ki({fusedConv2d_:Wf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ff(e,t,n,s,a,r=[1,1],i){let o=e;3===e.rank&&(o=gu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=gu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:a,dimRoundingMode:i,dilations:r,filterShape:n};return oi.runKernel(It,u,c)}const Vf=ki({depthwiseConv2dNativeBackpropFilter_:Ff});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Of(e,t,n,s,a,r=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=gu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:a,dimRoundingMode:i,dilations:r,inputShape:e},d=oi.runKernel(St,u,c);return l?gu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Af=ki({depthwiseConv2dNativeBackpropInput_:Of});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xf({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:a,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===zf(oi.state.gradientDepth,r)){let l=Su(e,t,n,s);return null!=a&&(l=xl(l,a)),Lf(l,r,i,o)}let l=xi(e,"a","fused matMul"),u=xi(t,"b","fused matMul");[l,u]=Yr(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),f=u.shape.slice(0,-2),g=O(m),b=O(f);$(c===d,(()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const y=Vc(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),x=gu(l,n?[g,c,h]:[g,h,c]),w=gu(u,s?[b,p,d]:[b,d,p]);let v,k;null!=a&&(v=xi(a,"bias","fused matMul"),[v]=Yr(v,l),Vc(y,v.shape)),null!=i&&(k=xi(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=Gf(gu(e,l.shape),l,r);let d,h;if(n||s?!n&&s?(d=Su(c,o,!1,!1),h=Su(c,i,!0,!1)):n&&!s?(d=Su(o,c,!1,!0),h=Su(i,c,!1,!1)):(d=Su(o,c,!0,!0),h=Su(c,i,!0,!0)):(d=Su(c,o,!1,!0),h=Su(i,c,!0,!1)),null!=a){const e=Mf(u,c);return[d,h,e]}return[d,h]},S={a:x,b:w,bias:v,preluActivationWeights:k},T={transposeA:n,transposeB:s,activation:r,leakyreluAlpha:o};return null==a?gh(((e,t,n)=>{const s=oi.runKernel(Ys,S,T);return n([e,t,s]),{value:gu(s,y),gradFunc:I}}))(x,w):gh(((e,t,n,s)=>{const a=oi.runKernel(Ys,S,T);return s([e,t,a,n]),{value:gu(a,y),gradFunc:I}}))(x,w,v)}const Df=ki({fusedMatMul_:Xf});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(e){return Cf(e,.54,.46)}const Kf=ki({hammingWindow_:Zf});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pf(e){return Cf(e,.5,.5)}const _f=ki({hannWindow_:Pf});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(e,t,n,s=!1,a=0){let r=0;const i=[];for(;r+t<=e.size;)i.push(Ru(e,r,t)),r+=n;if(s)for(;r<e.size;){const s=r+t-e.size,o=ku([Ru(e,r,t-s),Uu([s],a)]);i.push(o),r+=n}return 0===i.length?nf([],[0,t]):gu(ku(i),[i.length,t])}const Hf=ki({frame_:Bf});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(e,t,n,s,a=_f){null==s&&(s=Nf(t));const r=Hf(e,t,n),i=Tl(r,a(t));return Zm(i,s)}const Yf=ki({stft_:Uf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jf(e,t,n,s,a="bilinear",r=0){const i=xi(e,"image","cropAndResize"),o=xi(t,"boxes","cropAndResize","float32"),l=xi(n,"boxInd","cropAndResize","int32"),u=o.shape[0];$(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),$(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),$(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),$(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),$(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),$("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:l},d={method:a,extrapolationValue:r,cropSize:s};return oi.runKernel(xt,c,d)}const Qf=ki({cropAndResize_:jf});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jf(e){const t=xi(e,"image","flipLeftRight","float32");$(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return oi.runKernel(Dt,n,{})}const qf=ki({flipLeftRight_:Jf});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eg(e){const t=xi(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];$(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),$(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Wd(t,a)}const tg=ki({grayscaleToRGB_:eg});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ng(e){const t=xi(e,"image","RGBToGrayscale"),n=t.rank-1,s=t.shape[n];$(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),$(3===s,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`));const a=t.dtype,r=pl(t,"float32"),i=tf([.2989,.587,.114]);let o;switch(t.rank){case 2:o=jc("ij,j->i",r,i);break;case 3:o=jc("ijk,k->ij",r,i);break;case 4:o=jc("ijkl,l->ijk",r,i);break;case 5:o=jc("ijklm,m->ijkl",r,i);break;case 6:o=jc("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Gd(o,-1),pl(o,a)}const sg=ki({rgbToGrayscale_:ng});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ag(e,t,n=0,s=.5){const a=xi(e,"image","rotateWithOffset","float32");$(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const r={image:a},i={radians:t,fillValue:n,center:s};return oi.runKernel(Us,r,i)}const rg=ki({rotateWithOffset_:ag});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ig(e,t,n,s,a,r){null==s&&(s=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==r&&(r=0);const i=e.shape[0];return n=Math.min(n,i),$(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),$(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),$(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),$(1===t.rank,(()=>"scores must be a 1D tensor")),$(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),$(0<=r&&r<=1,(()=>`softNmsSigma must be in [0, 1], but was '${r}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function og(e,t,n,s=.5,a=Number.NEGATIVE_INFINITY){const r=xi(e,"boxes","nonMaxSuppression","float32"),i=xi(t,"scores","nonMaxSuppression","float32"),o=ig(r,i,n,s,a);n=o.maxOutputSize,s=o.iouThreshold,a=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:a};return oi.runKernel(zn,{boxes:r,scores:i},l)}const lg=ki({nonMaxSuppression_:og});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ug(e,t,n){const s=cg(e,t,n),a=s<0?-(s+1):s;e.splice(a,0,t)}function cg(e,t,n){return hg(e,t,n||dg)}function dg(e,t){return e>t?1:e<t?-1:0}function hg(e,t,n){let s=0,a=e.length,r=0,i=!1;for(;s<a;){r=s+(a-s>>>1);const o=n(t,e[r]);o>0?s=r+1:(a=r,i=!o)}return i?s:-s-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pg(e,t,n,s,a){return gg(e,t,n,s,a,0)}function mg(e,t,n,s,a,r){return gg(e,t,n,s,a,0,!1,r,!0)}function fg(e,t,n,s,a,r){return gg(e,t,n,s,a,r,!0)}function gg(e,t,n,s,a,r,i=!1,o=!1,l=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>a&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(xg);const c=r>0?-.5/r:0,d=[],h=[];for(;d.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:r,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let l=d.length-1;l>=i;--l){const n=bg(e,r,d[l]);if(n>=s){o=!0;break}if(t.score=t.score*yg(s,c,n),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(r),h.push(t.score)):t.score>a&&ug(u,t,xg))}const p=d.length,m=n-p;o&&m>0&&(d.push(...new Array(m).fill(0)),h.push(...new Array(m).fill(0)));const f={selectedIndices:d};return i&&(f.selectedScores=h),l&&(f.validOutputs=p),f}function bg(e,t,n){const s=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-r)*(l-i),m=(d-u)*(h-c);if(p<=0||m<=0)return 0;const f=Math.max(r,u),g=Math.max(i,c),b=Math.min(o,d),y=Math.min(l,h),x=Math.max(b-f,0)*Math.max(y-g,0);return x/(p+m-x)}function yg(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function xg(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function wg(e,t,n,s=.5,a=Number.NEGATIVE_INFINITY){const r=xi(e,"boxes","nonMaxSuppressionAsync"),i=xi(t,"scores","nonMaxSuppressionAsync"),o=ig(r,i,n,s,a);n=o.maxOutputSize,s=o.iouThreshold,a=o.scoreThreshold;const l=await Promise.all([r.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:d}=pg(u,c,n,s,a);return r!==e&&r.dispose(),i!==t&&i.dispose(),tf(d,"int32")}const vg=wg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kg(e,t,n,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=xi(e,"boxes","nonMaxSuppression"),o=xi(t,"scores","nonMaxSuppression"),l=ig(i,o,n,s,a,r);n=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold,r=l.softNmsSigma;const u={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},d=oi.runKernel($n,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}const Ig=ki({nonMaxSuppressionWithScore_:kg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Sg(e,t,n,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=xi(e,"boxes","nonMaxSuppressionAsync"),o=xi(t,"scores","nonMaxSuppressionAsync"),l=ig(i,o,n,s,a,r);n=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold,r=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=fg(c,d,n,s,a,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:tf(h,"int32"),selectedScores:tf(p)}}const Tg=Sg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ng(e,t,n,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=xi(e,"boxes","nonMaxSuppression"),o=xi(t,"scores","nonMaxSuppression"),l=ig(i,o,n,s,a,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,h={boxes:i,scores:o},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:r},m=oi.runKernel(Wn,h,p);return{selectedIndices:m[0],validOutputs:m[1]}}const Cg=ki({nonMaxSuppressionPadded_:Ng});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Rg(e,t,n,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=xi(e,"boxes","nonMaxSuppressionAsync"),o=xi(t,"scores","nonMaxSuppressionAsync"),l=ig(i,o,n,s,a,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=mg(h,p,u,c,d,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:tf(m,"int32"),validOutputs:fd(f,"int32")}}const Eg=Rg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gg(e,t,n=!1,s=!1){const a=xi(e,"images","resizeBilinear");$(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),$(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),$(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let r=a,i=!1;3===a.rank&&(i=!0,r=gu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:r},l={alignCorners:n,halfPixelCenters:s,size:t},u=oi.runKernel(es,o,l);return i?gu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Mg=ki({resizeBilinear_:Gg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lg(e,t,n=!1,s=!1){const a=xi(e,"images","resizeNearestNeighbor");$(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),$(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),$("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),$(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let r=a,i=!1;3===a.rank&&(i=!0,r=gu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:r},l={alignCorners:n,halfPixelCenters:s,size:t},u=oi.runKernel(Jn,o,l);return i?gu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const zg=ki({resizeNearestNeighbor_:Lg});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wg(e,t="binary",n=!1,s=.5){const a=xi(e,"image","threshold"),r=.2989,i=.587,o=.114,l=a.shape[0]*a.shape[1];let u,c,d,h,p=Tl(tf([s]),255);if($(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),$(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),$("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),$("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[u,c,d]=Xm(a,[1,1,1],-1);const e=Tl(u,r),t=Tl(c,i),n=Tl(d,o);h=xl(xl(e,t),n)}else h=e;if("otsu"===t){const e=Ku(pl(cm(h),"int32"),Ni([]),256);p=$g(e,l)}const m=n?ah(h,p):Zd(h,p);return pl(Tl(m,255),"int32")}function $g(e,t){let n,s,a,r,i,o,l=tf([-1]),u=tf([0]),c=tf([0]);for(let d=0;d<e.size-1;d++){n=Ru(e,0,d+1),s=Ru(e,d+1),i=Il(vd(n),t),o=Il(vd(s),t);const h=vd(Tl(n,Jp(0,n.size)));a=Il(h,vd(n));const p=Uu(s.shape,n.size),m=xl(Jp(0,s.size),p),f=Tl(s,m);r=Il(vd(f),vd(s));const g=Th(a,r),b=Th(a,r),y=Tl(i,o);c=Tl(Tl(y,g),b);const x=Zd(c,u);u=Zc(x,c,u),l=Zc(x,tf([d]),l)}return l}const Fg=ki({threshold_:Wg});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vg(e,t,n="nearest",s="constant",a=0,r){const i=xi(e,"image","transform","float32"),o=xi(t,"transforms","transform","float32");$(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),$(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),$(null==r||2===r.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:a,outputShape:r};return oi.runKernel(As,l,u)}const Og=ki({transform_:Vg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ag(e,t,n){const s=xi(e,"a","bandPart");$(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const a=s.shape,[r,i]=s.shape.slice(-2);let o,l;"number"==typeof t?($(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),$(t<=r,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`)),o=xi(t<0?r:t,"numLower","bandPart")):($("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=Zc(nh(t,0),r,Yh(t,r))),"number"==typeof n?($(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),$(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=xi(n<0?i:n,"numUpper","bandPart")):($("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=Zc(nh(n,0),i,Yh(n,i)));const u=gu(Jp(0,r,1,"int32"),[-1,1]),c=Jp(0,i,1,"int32"),d=Th(u,c),h=Mh(ah(d,o),Pd(d,xh(l))),p=Bh([r,i],s.dtype);return gu(Um(yf(gu(s,[-1,r,i])).map((e=>Zc(h,e,p)))),a)}const Xg=ki({bandPart_:Ag});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dg(e){let t;if(Array.isArray(e)){t=!1,$(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)$(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Xm(e,e.shape[0],0).map((e=>Bm(e,[0])));$(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let a=0;a<e.length;++a)n.push(oi.tidy((()=>{let e=s[a];if(a>0)for(let t=0;t<a;++t){const s=Tl(vd(Tl(n[t],e)),n[t]);e=Th(e,s)}return Il(e,Sd(e,"euclidean"))})));return t?Um(n,0):n}const Zg=ki({gramSchmidt_:Dg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kg(e,t=!1){if($(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Pg(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=yf(gu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],r=[];s.forEach((e=>{const[n,s]=Pg(e,t);a.push(n),r.push(s)}));const i=gu(Um(a,0),e.shape),o=gu(Um(r,0),e.shape);return[i,o]}}function Pg(e,t=!1){return oi.tidy((()=>{$(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let a=Fd(n),r=fl(e);const i=nf([[1]],[1,1]);let o=fl(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=r,l=o,u=a;[o,r,a]=oi.tidy((()=>{const t=Ru(r,[e,e],[n-e,1]),l=Sd(t),u=Ru(r,[e,e],[1,1]),c=Zc(Zd(u,0),nf([[-1]]),nf([[1]])),d=Th(u,Tl(c,l)),h=Il(t,d);o=1===h.shape[0]?fl(i):ku([i,Ru(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=xh(Il(Su(c,d),l)),m=Ru(r,[e,0],[n-e,s]),f=Tl(p,o),g=kf(o);if(0===e)r=Th(m,Su(f,Su(g,m)));else{const t=Th(m,Su(f,Su(g,m)));r=ku([Ru(r,[0,0],[e,s]),t],0)}const b=kf(f),y=Ru(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Th(y,Su(Su(y,o),b));else{const t=Th(y,Su(Su(y,o),b));a=ku([Ru(a,[0,0],[n,e]),t],1)}return[o,r,a]})),Ai([t,l,u])}return!t&&n>s&&(a=Ru(a,[0,0],[n,s]),r=Ru(r,[0,0],[s,s])),[a,r]}))}const _g=ki({qr_:Kg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bg;function Hg(e,t,n=Bg.SUM_BY_NONZERO_WEIGHTS){const s=xi(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=xi(t,"weights","computeWeightedLoss"));const r=null==a?s:Tl(s,a);if(n===Bg.NONE)return r;if(n===Bg.SUM)return vd(r);if(n===Bg.MEAN){if(null==a)return _h(r);{const e=s.size/a.size,t=Il(vd(r),vd(a));return e>1?Il(t,fd(e)):t}}if(n===Bg.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Il(vd(r),fd(s.size));{const e=Tl(a,Hh(s.shape)),t=pl(vd(sp(e,fd(0))),"float32");return Il(vd(r),t)}}throw Error(`Unknown reduction: ${n}`)}(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Bg||(Bg={}));const Ug=ki({computeWeightedLoss_:Hg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yg(e,t,n,s=Bg.SUM_BY_NONZERO_WEIGHTS){const a=xi(e,"labels","absoluteDifference"),r=xi(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=xi(n,"weights","absoluteDifference")),F(a.shape,r.shape,"Error in absoluteDifference: ");const o=Cl(Th(a,r));return Ug(o,i,s)}const jg=ki({absoluteDifference_:Yg});function Qg(e,t,n,s,a=Bg.SUM_BY_NONZERO_WEIGHTS){const r=xi(e,"labels","cosineDistance"),i=xi(t,"predictions","cosineDistance");let o=null;null!=s&&(o=xi(s,"weights","cosineDistance")),F(r.shape,i.shape,"Error in cosineDistance: ");const l=fd(1),u=Th(l,vd(Tl(r,i),n,!0));return Ug(u,o,a)}const Jg=ki({cosineDistance_:Qg});function qg(e,t,n,s=Bg.SUM_BY_NONZERO_WEIGHTS){let a=xi(e,"labels","hingeLoss");const r=xi(t,"predictions","hingeLoss");let i=null;null!=n&&(i=xi(n,"weights","hingeLoss")),F(a.shape,r.shape,"Error in hingeLoss: ");const o=fd(1);a=Th(Tl(fd(2),a),o);const l=am(Th(o,Tl(a,r)));return Ug(l,i,s)}const eb=ki({hingeLoss_:qg});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(e,t,n,s=1,a=Bg.SUM_BY_NONZERO_WEIGHTS){const r=xi(e,"labels","huberLoss"),i=xi(t,"predictions","huberLoss");let o=null;null!=n&&(o=xi(n,"weights","huberLoss")),F(r.shape,i.shape,"Error in huberLoss: ");const l=fd(s),u=Cl(Th(i,r)),c=Yh(u,l),d=Th(u,c),h=xl(Tl(fd(.5),xd(c)),Tl(l,d));return Ug(h,o,a)}const nb=ki({huberLoss_:tb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(e,t,n,s=1e-7,a=Bg.SUM_BY_NONZERO_WEIGHTS){const r=xi(e,"labels","logLoss"),i=xi(t,"predictions","logLoss");let o=null;null!=n&&(o=xi(n,"weights","logLoss")),F(r.shape,i.shape,"Error in logLoss: ");const l=fd(1),u=fd(s),c=xh(Tl(r,lh(xl(i,u)))),d=Tl(Th(l,r),lh(xl(Th(l,i),u))),h=Th(c,d);return Ug(h,o,a)}const ab=ki({logLoss_:sb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(e,t,n,s=Bg.SUM_BY_NONZERO_WEIGHTS){const a=xi(e,"labels","meanSquaredError"),r=xi(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=xi(n,"weights","meanSquaredError")),F(a.shape,r.shape,"Error in meanSquaredError: ");const o=Pm(a,r);return Ug(o,i,s)}const ib=ki({meanSquaredError_:rb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ob(e,t){const n=xi(e,"labels","sigmoidCrossEntropyWithLogits"),s=xi(t,"logits","sigmoidCrossEntropyWithLogits");F(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=am(s),r=Tl(s,n),i=ch(Rd(xh(Cl(s))));return xl(Th(a,r),i)}function lb(e,t,n,s=0,a=Bg.SUM_BY_NONZERO_WEIGHTS){let r=xi(e,"multiClassLabels","sigmoidCrossEntropy");const i=xi(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=xi(n,"weights","sigmoidCrossEntropy")),F(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=fd(s),t=fd(1),n=fd(.5);r=xl(Tl(r,Th(t,e)),Tl(n,e))}const l=ob(r,i);return Ug(l,o,a)}const ub=ki({sigmoidCrossEntropy_:lb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cb(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return gh(((e,t,s)=>{const a=Eh(t,[n],!0),r=Th(pl(t,"float32"),a);s([e,r]);const i=xh(Tl(r,e));return{value:vd(i,[n]),gradFunc:(e,t)=>{const[s,a]=t,r=ad(e.shape,[n]);return[Tl(gu(e,r),Th(pl(s,"float32"),Rd(a))),Tl(gu(e,r),Th(Rd(a),pl(s,"float32")))]}}}))(e,t)}function db(e,t,n,s=0,a=Bg.SUM_BY_NONZERO_WEIGHTS){let r=xi(e,"onehotLabels","softmaxCrossEntropy");const i=xi(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=xi(n,"weights","softmaxCrossEntropy")),F(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=fd(s),t=fd(1),n=fd(r.shape[1]);r=xl(Tl(r,Th(t,e)),Il(e,n))}const l=cb(r,i);return Ug(l,o,a)}const hb=ki({softmaxCrossEntropy_:db});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pb(e,t,n,s){const a=xi(e,"indices","sparseFillEmptyRows","int32"),r=xi(t,"values","sparseFillEmptyRows"),i=xi(n,"denseShape","sparseFillEmptyRows","int32"),o=xi(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:r,denseShape:i,defaultValue:o},u=oi.runKernel(ks,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const mb=ki({sparseFillEmptyRows_:pb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fb(e,t,n){const s=xi(e,"inputIndices","sparseReshape","int32"),a=xi(t,"inputShape","sparseReshape","int32"),r=xi(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==r.rank)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:a,newShape:r},o=oi.runKernel(Is,i);return{outputIndices:o[0],outputShape:o[1]}}const gb=ki({sparseReshape_:fb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(e,t,n){const s=xi(e,"data","sparseSegmentMean"),a=xi(t,"indices","sparseSegmentMean","int32"),r=xi(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==r.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return oi.runKernel(Ss,i)}const yb=ki({sparseSegmentMean_:bb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xb(e,t,n){const s=xi(e,"data","sparseSegmentSum"),a=xi(t,"indices","sparseSegmentSum","int32"),r=xi(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==r.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return oi.runKernel(Ts,i)}const wb=ki({sparseSegmentSum_:xb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vb(e,t,n,s,a,r,i,o){const l=xi(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=xi(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:a,rightPad:r,padWidth:i,preserveShortSequences:o},d={data:l,dataSplits:u},h=oi.runKernel(Ms,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}const kb=ki({stringNGrams_:vb});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ib(e,t,n=!0){const s=xi(e,"input","stringSplit","string"),a=xi(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const r={skipEmpty:n},i={input:s,delimiter:a},o=oi.runKernel(Ls,i,r);return{indices:o[0],values:o[1],shape:o[2]}}const Sb=ki({stringSplit_:Ib});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tb(e,t){const n=xi(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return oi.runKernel(zs,a,s)}const Nb=ki({stringToHashBucketFast_:Tb});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cb(e,t,n,s=!0){const a=xi(e,"input","staticRegexReplace","string"),r={pattern:t,rewrite:n,replaceGlobal:s};return oi.runKernel(Es,{x:a},r)}const Rb=ki({staticRegexReplace_:Cb}),Eb={fft:Wm,ifft:Fm,rfft:Zm,irfft:Om},Gb={hammingWindow:Kf,hannWindow:_f,frame:Hf,stft:Yf},Mb={flipLeftRight:qf,grayscaleToRGB:tg,resizeNearestNeighbor:zg,resizeBilinear:Mg,rgbToGrayscale:sg,rotateWithOffset:rg,cropAndResize:Qf,nonMaxSuppression:lg,nonMaxSuppressionAsync:vg,nonMaxSuppressionWithScore:Ig,nonMaxSuppressionWithScoreAsync:Tg,nonMaxSuppressionPadded:Cg,nonMaxSuppressionPaddedAsync:Eg,threshold:Fg,transform:Og},Lb={bandPart:Xg,gramSchmidt:Zg,qr:_g},zb={absoluteDifference:jg,computeWeightedLoss:Ug,cosineDistance:Jg,hingeLoss:eb,huberLoss:nb,logLoss:ab,meanSquaredError:ib,sigmoidCrossEntropy:ub,softmaxCrossEntropy:hb},Wb={sparseFillEmptyRows:mb,sparseReshape:gb,sparseSegmentMean:yb,sparseSegmentSum:wb},$b={stringNGrams:kb,stringSplit:Sb,stringToHashBucketFast:Nb,staticRegexReplace:Rb},Fb=new Map,Vb=new Map;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ob{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ab{constructor(){this.classNameMap={}}static getMap(){return null==Ab.instance&&(Ab.instance=new Ab),Ab.instance}static register(e){Ab.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Xb(e,t,n){$(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),$("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),$(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),typeof t>"u"&&(t="Custom"),typeof n>"u"&&(n=e.className);const s=n,a=t+">"+s;return Ab.register(e),Fb.set(a,e),Vb.set(e,a),e}function Db(e){return Vb.has(e)?Vb.get(e):e.className}const Zb=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Ob,SerializationMap:Ab,getRegisteredName:Db,registerClass:Xb},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kb extends Ob{minimize(e,t=!1,n){const{value:s,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Ai(a),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return fh(e,t)}dispose(){null!=this.iterations_&&Ai(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:fd(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Kb,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Pb extends Kb{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=oi.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=oi.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Oi((()=>Pc(s).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Oi((()=>Pc(s).variable(a)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Oi((()=>{const e=xl(Tl(i,this.rho),Tl(xd(r),1-this.rho)),t=Tl(Il(bd(xl(o,this.epsilon)),bd(xl(i,this.epsilon))),r),n=xl(Tl(o,this.rho),Tl(xd(t),1-this.rho));i.assign(e),o.assign(n);const a=xl(Tl(t,-this.learningRate),s);s.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ai(this.accumulatedGrads.map((e=>e.variable))),Ai(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _b extends Kb{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=oi.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Oi((()=>Uu(s.shape,this.initialAccumulatorValue).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=this.accumulatedGrads[n].variable;Oi((()=>{const e=xl(r,xd(a));r.assign(e);const t=xl(Tl(Il(a,bd(xl(e,oi.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ai(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bb extends Kb{static get className(){return"Adam"}constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Oi((()=>{this.accBeta1=fd(t).variable(),this.accBeta2=fd(n).variable()})),null==s&&(this.epsilon=oi.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Oi((()=>{const n=Th(1,this.accBeta1),s=Th(1,this.accBeta2);t.forEach(((t,a)=>{const r=oi.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Oi((()=>Pc(r).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Oi((()=>Pc(r).variable(i)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=xl(Tl(l,this.beta1),Tl(o,1-this.beta1)),d=xl(Tl(u,this.beta2),Tl(xd(o),1-this.beta2)),h=Il(c,n),p=Il(d,s);l.assign(c),u.assign(d);const m=xl(Tl(Il(h,xl(bd(p),this.epsilon)),-this.learningRate),r);r.assign(m)})),this.accBeta1.assign(Tl(this.accBeta1,this.beta1)),this.accBeta2.assign(Tl(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ai(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Ai(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Oi((()=>{this.accBeta1.assign(md(this.beta1,this.iterations_+1)),this.accBeta2.assign(md(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hb extends Kb{static get className(){return"Adamax"}constructor(e,t,n,s=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Oi((()=>{this.iteration=fd(0).variable(),this.accBeta1=fd(t).variable()})),null==s&&(this.epsilon=oi.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Oi((()=>{const n=Th(1,this.accBeta1),s=Il(-this.learningRate,xl(Tl(this.iteration,this.decay),1));t.forEach(((t,a)=>{const r=oi.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Pc(r).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Pc(r).variable(i)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=xl(Tl(l,this.beta1),Tl(o,1-this.beta1)),d=Tl(u,this.beta2),h=Cl(o),p=Kh(d,h);l.assign(c),u.assign(p);const m=xl(Tl(Il(s,n),Il(c,xl(p,this.epsilon))),r);r.assign(m)})),this.iteration.assign(xl(this.iteration,1)),this.accBeta1.assign(Tl(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ai(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Ai(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ub extends Kb{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=oi.registeredVariables[t];Oi((()=>{const e=xl(Tl(this.c,s),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Xi(fd(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yb extends Ub{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=fd(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=oi.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:Oi((()=>Pc(s).variable(!1)))});const a=this.accumulations[n].variable,r=Array.isArray(e)?e[n].tensor:e[t];null!=r&&Oi((()=>{let e;const t=xl(Tl(this.m,a),r);e=this.useNesterov?xl(Tl(this.c,xl(r,Tl(t,this.m))),s):xl(Tl(this.c,t),s),a.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ai(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jb extends Kb{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,s=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==s&&(this.epsilon=oi.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=oi.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Oi((()=>Pc(s).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Oi((()=>Pc(s).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Oi((()=>Pc(s).variable(a)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Oi((()=>{const e=xl(Tl(i,this.decay),Tl(xd(r),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=xl(Tl(t,this.decay),Tl(r,1-this.decay)),l=Il(Tl(r,this.learningRate),bd(Th(e,xl(xd(a),this.epsilon)))),u=xl(Tl(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);const c=Th(s,u);s.assign(c)}else{const e=xl(Tl(i,this.decay),Tl(xd(r),1-this.decay)),t=xl(Tl(o,this.momentum),Il(Tl(r,this.learningRate),bd(xl(e,this.epsilon))));i.assign(e),o.assign(t);const n=Th(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ai(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ai(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Ai(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qb=[Pb,_b,Bb,Hb,Yb,jb,Ub];function Jb(){for(const e of Qb)Xb(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(e,t,n,s){i(e),n=n??0,s=s??1,o(n,s);let a=0;const r=r=>(r.then((r=>{const i=n+ ++a/e.length*(s-n);return t(i),r})),r);function i(e){$(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}function o(e,t){$(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),$(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),$(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}return Promise.all(e.map(r))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ey(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ne().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(s):await qb(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await qb(a,t.onProgress,.5,1)}function ty(e,t){var n;const s=null==t.fetchFunc?Ne().platform.fetch:t.fetchFunc;let a,r=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;r<e.length;){a||(a=(await s(e[r],t.requestInit,{isBinary:!0})).body.getReader());const{done:o,value:l}=await a.read();if(!o)return void n.enqueue(l);r++,a=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,r/e.length)}n.close()}})}async function ny(e,t="",n,s){return sy((e=>ey(e,{requestInit:s})))(e,t,n)}function sy(e){return async(t,n="",s)=>{const a=t.map((()=>!1)),r={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Ci[l]*O(e.shape),c=()=>{a[t]=!0,null==r[t]&&(r[t]=[]),r[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let h=0;return l.forEach((e=>{const n=t[e].paths.length,s=new Ri(c.slice(h,h+n));r[e].forEach((e=>{const t=s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=qi(t,[e.manifestEntry]);for(const s in n)d[s]=n[s]})),h+=n})),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ay="application/octet-stream",ry="application/json";class iy{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?($("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ne().platform.fetch,$(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&$(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=po(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:ry}),"model.json"),null!=e.weightData){const n=Ri.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:ay}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:go(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return fo(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=bo(e.weightsManifest),s=()=>ty(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:s})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=oy(t),a=this.weightPathPrefix||n,r=[],i=[];for(const o of e)for(const e of o.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):r.push(a+e+s);return this.weightUrlConverter&&r.push(...await Promise.all(i)),r}async loadWeights(e){const t=await this.getWeightUrls(e),n=bo(e),s=await ey(t,this.loadOptions);return[n,s]}}function oy(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),a=n>t?e.substring(n):"";return[s+"/",a]}function ly(e){return null!=e.match(iy.URL_SCHEME_REGEX)}iy.URL_SCHEME_REGEX=/^https?:\/\//;const uy=(e,t)=>{if(typeof fetch>"u"&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ly(e))):ly(e),n)return cy(e,t)}return null};function cy(e,t){return new iy(e,t)}function dy(e,t){return cy(e,t)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ko.registerSaveRouter(uy),ko.registerLoadRouter(uy);let hy,py=!1;function my(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,a=!1,r=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)r=!0;else if(null!=e.getContext)i=!0;else{if(!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=na(Hs,oi.backendName)){const n={pixels:e},s={numChannels:t};return oi.runKernel(Hs,n,s)}const[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(r||a||o){if(null==hy)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");hy=new OffscreenCanvas(1,1).getContext("2d")}else hy=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});hy.canvas.width=l,hy.canvas.height=u,hy.drawImage(e,0,0,l,u),c=hy.getImageData(0,0,l,u).data}if(4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return sf(d,[u,l,t],"int32")}function fy(e){return null!=e&&e.data instanceof Uint8Array}function gy(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function by(e){return null!=e&&0!==e.width&&0!==e.height}function yy(e){return gy()&&!(e instanceof ImageBitmap)&&by(e)&&!fy(e)}async function xy(e,t=3){let n=null;if(Ne().getBool("WRAP_TO_IMAGEBITMAP")&&yy(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return my(n,t)}function wy(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function vy(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function ky(e,t){let n=xi(e,"img","toPixels");if(!(e instanceof Fr)){const e=n;n=pl(e,"int32"),e.dispose()}wy(n);const[s,a]=n.shape.slice(0,2),r=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*s*4);for(let u=0;u<s*a;++u){const e=[0,0,0,255];for(let s=0;s<r;s++){const t=i[u*r+s];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===r?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[s]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){py||null!=na(Et,oi.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),py=!0),t.width=a,t.height=s;const e=t.getContext("2d"),n=new ImageData(l,a,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function Iy(e,t,n){let s=xi(e,"img","draw");if(!(e instanceof Fr)){const e=s;s=pl(e,"int32"),e.dispose()}wy(s),vy(null==n?void 0:n.imageOptions);const a={image:s},r={canvas:t,options:n};oi.runKernel(Et,a,r)}const Sy=ki({fromPixels_:my}),Ty=Object.freeze(Object.defineProperty({__proto__:null,draw:Iy,fromPixels:Sy,fromPixelsAsync:xy,toPixels:ky},Symbol.toStringTag,{value:"Module"}));function Ny(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===O(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,r=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=e.shape,l=a.slice();l.pop();let u=1;for(let d=r;d<n;++d)u*=o[d],l.push(o[d]);const c=[...ce(e.shape).map((e=>e/u)),1].slice(0,r);return[l,i,u,c]}const Cy=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Ny},Symbol.toStringTag,{value:"Module"})),Ry=-2,Ey=-1;
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gy(e,t,n){const s=e.shape.length;$(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),$(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let a=0;a<s;++a)$(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function My(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ly(e,t,n){const s=[];for(let a=0;a<e.length;a++)s[a]=Math.ceil((t[a]-e[a])/n[a]);return s}function zy(e,t,n,s){const a=[...e];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<n;r++)0===r?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Wy(e,t,n){return n<=e?n:n-(t-1)}function $y(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Fy(e,t,n,s,a,r,i,o,l){const u=e.length;let c=new Array(u),d=new Array(u),h=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Vy(i,l,u,s,e),d=Oy(o,l,u,a,e),h=zy(r,l,u,e)}else for(let p=0;p<u;p++)c[p]=Xy(i,s,r,e,p,l),d[p]=Dy(o,a,r,e,p,l),h[p]=Ay(r,p,l);return{begin:c,end:d,strides:h}}function Vy(e,t,n,s,a){const r=[...a],i=$y(n,t);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=0;else{const a=Wy(t,n,o);let i=s[a];e&1<<a&&(i=0),r[o]=i}return r}function Oy(e,t,n,s,a){const r=[...a],i=$y(n,t);for(let o=0;o<r.length;o++)if(i.indexOf(o)>-1)r[o]=Number.MAX_SAFE_INTEGER;else{const a=Wy(t,n,o);let i=s[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),r[o]=i}for(let o=0;o<r.length;o++){const e=a[o];r[o]<0&&(r[o]+=e),r[o]=E(0,r[o],a[o])}return r}function Ay(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Xy(e,t,n,s,a,r){let i=t[a];const o=n[a]||1;(e&1<<a||r&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),i=E(0,i,l-1),i}function Dy(e,t,n,s,a,r){let i=t[a];const o=n[a]||1;(e&1<<a||r&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),i=o>0?E(0,i,l):E(-1,i,l-1),i}function Zy(e,t,n){let s=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){s=a;break}for(let a=s+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Ky(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Py(e,t,n){let s;const a=e.shape.length;let r;return s="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{$(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:($(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,r]}function _y(e,t,n,s,a,r,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let y=0;y<d.dims;y++)c&&1<<y&o&&d.numAddAxisAfterEllipsis++,1<<y&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};By(d,h);let p=!0,m=!0,f=!0;const g=[],b=[];for(let y=0;y<e.length;++y){if(0===h.strides[y])throw Error(`strides[${y}] must be non-zero`);const t=!!(h.shrinkAxisMask&1<<y),n=e[y];if(-1===n){g.push(t?1:-1);continue}const s=[h.beginMask&1<<y,h.endMask&1<<y],a=[h.strides[y]>0?0:-1,h.strides[y]>0?n:n-1];if(t&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&1===h.strides[y];const r=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(t){const e=h.begin[y]<0?n+h.begin[y]:h.begin[y];if(h.begin[y]=e,h.end[y]=h.begin[y]+1,e<0||e>=n)throw Error(`slice index ${h.begin[y]} of dimension ${y} out of bounds.`)}else h.begin[y]=Hy(h.begin[y],0,h.strides[y],n,s,a),h.end[y]=Hy(h.end[y],1,h.strides[y],n,s,a);const e=1===h.strides[y]&&0===h.begin[y]&&h.end[y]===n;p=p&&e,m=m&&(0===y&&1===h.strides[y]||e)}else p=p&&1===h.strides[y]&&r,m=m&&(0===y&&1===h.strides[y]||r);let i,o=!1;if(h.beginValid&&h.endValid?(i=h.end[y]-h.begin[y],o=!0):t?(i=1,o=!0):r&&n>=0&&(i=h.strides[y]<0?-n:n,o=!0),o){let e;e=0===i||i<0!=h.strides[y]<0?0:Math.trunc(i/h.strides[y])+(i%h.strides[y]!==0?1:0),g.push(e)}else g.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){const e=h.finalShapeGatherIndices[y];e>=0?b.push(g[e]):e===Ry&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>h.finalShapeGatherIndices[t]!==Ry)),finalShape:b,isIdentity:p,sliceDim0:m,isSimpleSlice:f,begin:h.begin,end:h.end,strides:h.strides}}function By(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Ry),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Ey),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Hy(e,t,n,s,a,r){if(a[t])return n>0?r[t]:r[t+1&1];{const t=e<0?s+e:e;return t<r[0]?r[0]:t>r[1]?r[1]:t}}const Uy=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Gy,computeFlatOffset:Ky,computeOutShape:Ly,getNormalizedAxes:Fy,isSliceContinous:Zy,maskToAxes:My,parseSliceParams:Py,sliceInfo:_y,startForAxis:Xy,startIndicesWithElidedDims:Vy,stopForAxis:Dy,stopIndicesWithElidedDims:Oy,stridesForAxis:Ay,stridesWithElidedDims:zy},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yy{static sgd(e){return new Ub(e)}static momentum(e,t,n=!1){return new Yb(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,a=!1){return new jb(e,t,n,s,a)}static adam(e=.001,t=.9,n=.999,s=null){return new Bb(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Pb(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,a=0){return new Hb(e,t,n,s,a)}static adagrad(e,t=.1){return new _b(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jy=Yy,Qy=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jy(){return new Promise((e=>Qy((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qy(e,t){const n=e[0].length;e.forEach(((e,t)=>{$(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),$(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,a)=>{for(let r=0;r<n;r++)$(r===t||e[r]===s[r],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`))}))}function ex(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var tx;function nx(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let a=1;a<n.length;++a){const r=n[a],i=s[s.length-n.length+a],o=s[i];if(r>=0)if(o>=0){if(o!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${r} but shape[${a+e}] = ${o}`)}else s[i]=r}return s}function sx(e){const t={FIRST_DIM_SIZE:tx.FIRST_DIM_SIZE,VALUE_ROWIDS:tx.VALUE_ROWIDS,ROW_LENGTHS:tx.ROW_LENGTHS,ROW_SPLITS:tx.ROW_SPLITS,ROW_LIMITS:tx.ROW_LIMITS,ROW_STARTS:tx.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function ax(e){return 0===e.length?0:e[0]===tx.FIRST_DIM_SIZE?e.length-1:e.length}function rx(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(n,s-1);++a){const n=e[a],s=t[a+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${s}`)}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(tx||(tx={}));const ix=30;function ox(e){return e<=ix?e:ue(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lx(e,t,n){const s=n*("number"==typeof e?e:e[0]),a=t*("number"==typeof e?e:e[1]);return[s,a]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ux(e,t,n,s=!0){let a=[];if(s)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)a=a.concat([e[s+1]/t[s],t[s]]);a=a.concat(e.slice(n+1))}return a}function cx(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],a=[];for(let s=1;s<e;++s)s>=2*t+1||s%2===1?a.push(s):n.push(s);s.push(...n),s.push(0),s.push(...a)}return s}function dx(e,t,n,s=!0){const a=[];s?a.push(e[0]/n):a.push(e[0]*n);for(let r=1;r<e.length;++r)r<=t.length?s?a.push(t[r-1]*e[r]):a.push(e[r]/t[r-1]):a.push(e[r]);return a}function hx(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function px(e,t,n){const s=e.slice(0,1);for(let a=0;a<n;++a)s.push(e[a+1]-t[a][0]-t[a][1]);return s}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mx=1.7580993408473768,fx=1.0507009873554805,gx=.3275911,bx=.254829592,yx=-.284496736,xx=1.421413741,wx=-1.453152027,vx=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kx(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Ix(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Sx(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],s[Math.floor(a/4)]=e[a+1];return{real:n,imag:s}}function Tx(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],s[Math.floor(a/4)]=e[a+1];return{real:n,imag:s}}function Nx(e,t){const n=e[2*t],s=e[2*t+1];return{real:n,imag:s}}function Cx(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Rx(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const r=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:n,imag:s}}function Ex(e,t,n){const s=(n?2:-2)*Math.PI*(e/t),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gx="->",Mx=/->/g,Lx=",",zx="...";function Wx(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(Mx,"").length)/Gx.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Gx}").`);const[s,a]=e.split(Gx);$(-1===s.indexOf(zx),(()=>`The ellipsis notation ("${zx}") is not supported yet.`));const r=s.split(Lx),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<a.length;++h){const e=a[h];if(!r.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<s.length;++h){const e=s[h];-1===o.indexOf(e)&&e!==Lx&&o.push(e)}const l=new Array(r.length);for(let h=0;h<i;++h){if(new Set(r[h].split("")).size!==r[h].length)throw new Error(`Found duplicate axes in input component ${r[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let e=0;e<r[h].length;++e)l[h].push(o.indexOf(r[h][e]))}const u=o.length,c=a.length,d=[];for(let h=c;h<u;++h)d.push(h);return{allDims:o,summedDims:d,idDims:l}}function $x(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const s=[];for(let a=0;a<e;++a)-1===n[a]&&s.push(a);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Fx(e,t,n){const s=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===s[t[a][n]]?s[t[a][n]]=e[n]:$(s[t[a][n]]===e[n],(()=>`Expected dimension ${s[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Vx(e,t){const n=e,s=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<n.length;++i){const e=n[i],a=Ax(t,e);for(const t of a)-1===r.indexOf(t)&&(s[i].push(t),r.push(t))}return{path:n,steps:s}}function Ox(e){return e.every(((e,t)=>e===t))}function Ax(e,t){const n=[];for(let s=0;s<e.length;++s)(0===e[s].length||-1!==e[s].indexOf(t)||-1===t)&&n.push(s);return n}function Xx(e,t,n=0){let s=[];if("number"==typeof t)$(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);$(a<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const s=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-s}$(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dx(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Zx(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Kx(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Px(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function _x(e,t){return`size ${e} must be non-negative, not ${t}`}function Bx(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Hx(e,t){const n=O(e),s=O(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function Ux(e,t){const n=O(e),s=O(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yx(){return"segment ids must be >= 0"}function jx(){return"segment ids are not increasing"}function Qx(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Jx(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(e,t){let n,s=!1;for(e<=ix?(n=e,s=!0):n=ue(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=ue(e,n+1);return n}function ew(e,t,n){const s=[],a=e.length;for(let r=0;r<a;r++)r!==t?s.push(e[r]):s.push(n);return s}function tw(e,t,n,s){const a=t.shape.length,r=e.shape.length;if(0!==s&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${r}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let d=0;d<s;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let d=0;d<s;++d)o.push(e.shape[d]),l*=e.shape[d];for(let d=s;d<n;d++)o.push(e.shape[d]),u*=e.shape[d];for(let d=s;d<a;d++)o.push(t.shape[d]);for(let d=n+1;d<r;d++)o.push(e.shape[d]),c*=e.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}const nw=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:tw,computeOutShape:ew,segOpComputeOptimalWindowSize:qx},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sw(e){try{return e.map((e=>pr(e)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function aw(e){return e.map((e=>hr(e)))}const rw=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:bx,ERF_A2:yx,ERF_A3:xx,ERF_A4:wx,ERF_A5:vx,ERF_P:gx,PARALLELIZE_THRESHOLD:ix,get RowPartitionType(){return tx},SELU_SCALE:fx,SELU_SCALEALPHA:mx,applyActivation:Lf,assertAndGetBroadcastShape:Vc,assertAxesAreInnerMostDims:rd,assertParamsConsistent:qy,assignToTypedArray:Cx,axesAreInnerMostDims:td,calculateShapes:of,checkEinsumDimSizes:Fx,checkPadOnDimRoundingMode:mu,combineLocations:nd,combineRaggedTensorToTensorShapes:nx,complexWithEvenIndex:Sx,complexWithOddIndex:Tx,computeConv2DInfo:ql,computeConv3DInfo:eu,computeDefaultPad:su,computeDilation2DInfo:jl,computeOptimalWindowSize:ox,computeOutAndReduceShapes:sd,computeOutShape:ex,computePool2DInfo:Ql,computePool3DInfo:Jl,convertConv2DDataFormat:pu,decodeEinsumEquation:Wx,eitherStridesOrDilationsAreOne:du,expandShapeToKeepDim:ad,exponent:Ex,exponents:Rx,fromStringArrayToUint8:aw,fromUint8ToStringArray:sw,getAxesPermutation:id,getBroadcastDims:$c,getComplexWithIndex:Nx,getEinsumComputePath:Vx,getEinsumPermutation:$x,getFusedBiasGradient:Mf,getFusedDyActivation:Gf,getImageCenter:lx,getInnerMostAxes:ld,getPermuted:cx,getRaggedRank:ax,getReductionAxes:Fc,getReshaped:ux,getReshapedPermuted:dx,getRowPartitionTypesHelper:sx,getSliceBeginCoords:hx,getSliceSize:px,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Dx,getSparseFillEmptyRowsNegativeIndexErrorMessage:Zx,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Kx,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Bx,getSparseReshapeInputOutputMismatchErrorMessage:Ux,getSparseReshapeInputOutputMultipleErrorMessage:Hx,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Px,getSparseReshapeNegativeOutputDimErrorMessage:_x,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:Jx,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Yx,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:jx,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Qx,getUndoAxesPermutation:od,isIdentityPermutation:Ox,log:qs,mergeRealAndImagArrays:kx,prepareAndValidate:Ny,prepareSplitSize:Xx,segment_util:nw,shouldFuse:zf,slice_util:Uy,splitRealAndImagArrays:Ix,stridesOrDilationsArePositive:hu,tupleValuesAreOne:cu,upcastType:_r,validateDefaultValueShape:rx,validateInput:rf,validateUpdateShape:af,warn:Js},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Jb();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const iw={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,jm(pl(n,"float32"),-1))}}},ow={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=xd(pl(n,"float32")),s=bd(Th(fd(1),t));return xh(Il(e,s))}}}},lw={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bd(Th(xd(pl(n,"float32")),1));return Il(e,t)}}}},uw={kernelName:Fe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Vc(n.shape,s.shape);return{a:()=>{let t=e;const s=Fc(n.shape,a);return s.length>0&&(t=vd(t,s)),gu(t,n.shape)},b:()=>{let t=e;const n=Fc(s.shape,a);return n.length>0&&(t=vd(t,n)),gu(t,s.shape)}}}},cw={kernelName:Ve,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},dw={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pc(n)}}},hw={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pc(n)}}},pw={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,bd(Th(fd(1),xd(pl(n,"float32")))))}}},mw={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bd(xl(fd(1),xd(pl(n,"float32"))));return Il(e,t)}}}},fw={kernelName:Be,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Vc(n.shape,s.shape);return{a:()=>{const t=xl(xd(n),xd(s));let r=Tl(e,Il(s,t));const i=Fc(n.shape,a);return i.length>0&&(r=vd(r,i)),gu(r,n.shape)},b:()=>{const t=xl(xd(n),xd(s));let r=xh(Tl(e,Il(n,t)));const i=Fc(s.shape,a);return i.length>0&&(r=vd(r,i)),gu(r,s.shape)}}}},gw={kernelName:Pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,xl(xd(pl(n,"float32")),1))}}},bw={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,Th(fd(1),xd(pl(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yw(e,t,n,s,a,r){const i=xi(e,"dy","avgPool3dGrad"),o=xi(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=gu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=gu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),$(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),mu("avgPool3dGrad",a,r);const d={dy:l,input:u},h={filterSize:n,strides:s,pad:a,dimRoundingMode:r},p=oi.runKernel(je,d,h);return c?gu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const xw=ki({avgPool3dGrad_:yw}),ww={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:a,strides:r,pad:i,dimRoundingMode:o}=n;return{x:()=>xw(e,s,a,r,i,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vw(e,t,n,s,a){const r=xi(e,"dy","avgPoolGrad"),i=xi(t,"input","avgPoolGrad");$(i.rank===r.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`));let o=i,l=r,u=!1;3===i.rank&&(u=!0,o=gu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=gu(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),$(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},d={filterSize:n,strides:s,pad:a},h=oi.runKernel(Ue,c,d);return u?gu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const kw=ki({avgPoolGrad_:vw}),Iw={kernelName:He,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:a,strides:r,pad:i}=n;return{x:()=>kw(e,s,a,r,i)}}},Sw={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,a]=t,{transposeA:r,transposeB:i}=n;return r||i?!r&&i?{a:()=>Su(e,a,!1,!1),b:()=>Su(e,s,!0,!1)}:r&&!i?{a:()=>Su(a,e,!1,!0),b:()=>Su(s,e,!1,!1)}:{a:()=>Su(a,e,!0,!0),b:()=>Su(e,s,!0,!0)}:{a:()=>Su(e,a,!1,!0),b:()=>Su(s,e,!0,!1)}}},Tw={kernelName:Je,gradFunc:(e,t,n)=>{const{blockShape:s,crops:a}=n;return{x:()=>dp(e,s,a)}}},Nw={kernelName:tt,gradFunc:(e,t,n)=>{const s=n,a=s.inputShape,r=s.shape,i=Array.from(r);for(let l=a.length-1;l>=0;l--)if(a[l]===r[l])i[l]=1;else if(1!==a[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>vd(e,o,!0)}}},Cw={kernelName:st,gradFunc:e=>({x:()=>e.clone()})},Rw={kernelName:at,gradFunc:e=>({x:()=>Pc(e)})},Ew={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:a,clipValueMax:r}=n;return{x:()=>Zc(Mh(Pd(s,a),ah(s,r)),e,Pc(e))}}},Gw={kernelName:ot,inputsToSave:["x"],gradFunc:iw.gradFunc},Mw={kernelName:lt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:a}=n,r=Y(a,t[0].shape)[0],i=s.map((e=>e[r]));return Xm(e,i,r).map((e=>()=>e))}},Lw={kernelName:ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,a]=t,{dilations:r,strides:i,pad:o,dataFormat:l}=n;return $(cu(r),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`)),{x:()=>cc(s.shape,e,a,i,o,l),filter:()=>Ef(s,e,a.shape,i,o,l)}}},zw={kernelName:dt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,a]=t,{strides:r,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ic(e,a,r,i,o,1,l),filter:()=>Ef(e,s,a.shape,r,i,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ww(e,t,n,s,a){let r=e;4===e.rank&&(r=gu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=gu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(5===r.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`)),$(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),$(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),$(r.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${n[3]}.`)),$(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:r,dy:i},l={strides:s,pad:a,filterShape:n};return oi.runKernel(pt,o,l)}const $w=ki({conv3DBackpropFilter_:Ww}),Fw={kernelName:ht,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:a,pad:r}=n;$(cu(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>gc(i.shape,e,o,a,r),filter:()=>$w(i,e,o.shape,a,r)}}},Vw={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(xh(wm(pl(n,"float32"))),e)}}},Ow={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(km(pl(n,"float32")),e)}}},Aw={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:a,exclusive:r,reverse:i}=n;return{x:()=>{const t=id([a],s.rank);let n=Nc(e,a,r,!i);return null!=t&&(n=kf(n,t)),n}}}},Xw={kernelName:kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=n,o=s??[1,1];$(cu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return $(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),$(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),$(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),$(du(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),mu("depthwiseConv2d",r,i),{x:()=>Af(l.shape,e,u,a,r,o,i),filter:()=>Vf(l,e,u.shape,a,r,o,i)}}},Dw={kernelName:Nt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,a]=t,r={x:s,filter:a,dy:e},i={x:s,filter:a,dy:e};return{x:()=>oi.runKernel(Ct,r,n),filter:()=>oi.runKernel(Rt,i,n)}}},Zw={kernelName:Lt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>oi.runKernel(zt,s)}}},Kw={kernelName:Wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Tl(Rd(xh(xd(n))),2/Math.sqrt(Math.PI));return{x:()=>Tl(e,s)}}},Pw={kernelName:Ft,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,n)}}},_w={kernelName:Vt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>gu(e,n.shape)}}},Bw={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,Rd(n))}}},Hw={kernelName:Zt,gradFunc:e=>({x:()=>Pc(e)})},Uw={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Vc(n.shape,s.shape);return{a:()=>{const t=Il(e,pl(s,"float32")),r=Fc(n.shape,a);return r.length>0?gu(vd(t,r),n.shape):t},b:()=>{let t=Tl(e,pl(n,"float32"));const r=Fc(s.shape,a);r.length>0&&(t=gu(vd(t,r),s.shape));const i=xd(s);return xh(Il(t,pl(i,"float32")))}}}},Yw={kernelName:Pt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[a,r,i,o]=t,l=o??fd(1),u=Fc(r.shape,a.shape),c=[];if(1===r.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const d=Th(a,r),h=Tl(e,l),p=hm(xl(i,fd(s))),m=Tl(Tl(Tl(p,p),p),fd(-.5));return{x:()=>1===r.rank?gu(Tl(Tl(e,Wd(gu(p,[1,1,1,r.shape[0]]),c)),l),a.shape):gu(Tl(Tl(e,p),l),a.shape),mean:()=>{let e=Tl(Tl(p,fd(-1)),h);return 1===r.rank&&(e=vd(e,u)),gu(e,r.shape)},variance:()=>{let e=Tl(Tl(m,d),h);return 1===r.rank&&(e=vd(e,u)),gu(e,r.shape)},scale:()=>{const t=Tl(d,p);let n=Tl(e,t);return 1===r.rank&&(n=vd(n,u)),gu(n,r.shape)},offset:()=>{let t=e;return 1===r.rank&&(t=vd(t,u)),gu(t,r.shape)}}}},jw={kernelName:_t,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,a]=t,{axis:r,batchDims:i}=n,o=Y(r,s.shape)[0],l=(e,t,n)=>()=>{const s=e.shape,a=t.size,i=s.slice(0,o),l=i.length,u=s.slice(r,s.length).slice(1),c=u.length,d=Qw(0,l),h=Qw(l+1,l+1+c),p=Jw([i,[a],u]),m=gu(n,p),f=gu(t,[a]),g=Jw([[l],d,h]),b=kf(m,g);let y=gf(b,f,e.shape[o]);const x=od(g);return y=kf(y,x),y};if(1===i){const t=s.shape[0],n=s.split(t,0);return{x:()=>Um(n.map(((t,n)=>l(t,a.slice(n,1),e.slice(n,1))()))).reshape(s.shape),indices:()=>a}}return{x:l(s,a,e),indices:()=>a}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qw(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Jw(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Pc(n),b:()=>Pc(s)}}},ev={kernelName:Yt,gradFunc:e=>({x:()=>pl(e,"float32")})},tv={kernelName:Jt,gradFunc:e=>({x:()=>Pc(e)})},nv={kernelName:qt,gradFunc:e=>({x:()=>Pc(e)})},sv={kernelName:en,gradFunc:e=>({x:()=>Pc(e)})},av={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:a}=n,r=Zd(s,0);return{x:()=>Zc(r,e,Tl(e,a))}}},rv={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,xl(n,1))}}},iv={kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,pl(n,"float32"))}}},ov={kernelName:hn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:a}=n;return{logits:()=>{const t=Rd(s);return Th(e,Tl(vd(e,a,!0),t))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lv(e,t,n,s=5,a=1,r=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:a,alpha:r,beta:i};return oi.runKernel(fn,o,l)}const uv=ki({localResponseNormalizationBackprop_:lv}),cv={kernelName:mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,a]=t,{depthRadius:r,bias:i,alpha:o,beta:l}=n;return{x:()=>uv(s,a,e,r,i,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dv(e,t,n,s){return t.rank<n.rank&&(t=gu(t,ad(t.shape,s))),e.rank<n.rank&&(e=gu(e,ad(e.shape,s))),{x:()=>Tl(e,pl(Xc(n,t),e.dtype))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}const hv={kernelName:bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:a}=s,r=t[0],i=t[1],o=Y(a,r.shape),l=dv(e,i,r,o);return{x:()=>l.x()}}},pv={kernelName:yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Tl(e,pl(Pd(n,s),"float32")),b:()=>Tl(e,pl(nh(n,s),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mv(e,t,n,s,a,r,i){const o=xi(e,"dy","maxPool3dGrad"),l=xi(t,"input","maxPool3dGrad"),u=xi(n,"output","maxPool3dGrad");let c=o,d=l,h=u,p=!1;4===l.rank&&(p=!0,c=gu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=gu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=gu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),$(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),$(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),$(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),mu("maxPool3dGrad",r,i);const m={dy:c,input:d,output:h},f={filterSize:s,strides:a,pad:r,dimRoundingMode:i},g=oi.runKernel(kn,m,f);return p?gu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const fv=ki({maxPool3dGrad_:mv}),gv={kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,a]=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>fv(e,s,a,r,i,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bv(e,t,n,s,a,r,i){const o=xi(e,"dy","maxPoolGrad"),l=xi(t,"input","maxPoolGrad"),u=xi(n,"output","maxPoolGrad");$(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),$(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),$(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),mu("maxPoolGrad",r,i);const c={dy:o,input:l,output:u},d={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return oi.runKernel(wn,c,d)}const yv=ki({maxPoolGrad_:bv}),xv={kernelName:xn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,a]=t,{filterSize:r,strides:i,pad:o}=n;return{x:()=>yv(e,s,a,r,i,o)}}},wv={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:a}=n,r=Y(a,s.shape),i=sd(s.shape,r)[1],o=O(i);return{x:()=>{const t=s.shape.slice();r.forEach((e=>{t[e]=1}));const n=gu(e,t);return Il(Tl(n,Hh(s.shape,"float32")),o)}}}},vv={kernelName:Tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:a}=s,[r,i]=t,o=Y(a,r.shape),l=dv(e,i,r,o);return{x:()=>l.x()}}},kv={kernelName:Nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Tl(e,pl(ah(n,s),"float32")),b:()=>Tl(e,pl(Zd(n,s),"float32"))}}},Iv={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:a}=n,r=a.map((e=>e[0]));return{x:()=>Ru(e,r,s.shape)}}},Sv={kernelName:Rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Vc(n.shape,s.shape);return{a:()=>{const t=Fc(n.shape,a);return t.length>0?gu(vd(e,t),n.shape):e},b:()=>{const t=Tl(e,xh(Od(Il(n,s)))),r=Fc(s.shape,a);return r.length>0?gu(vd(t,r),s.shape):t}}}},Tv={kernelName:Gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Vc(n.shape,s.shape);return{a:()=>{const t=Tl(e,pl(s,"float32")),r=Fc(n.shape,a);return r.length>0?gu(vd(t,r),n.shape):t},b:()=>{const t=Tl(e,pl(n,"float32")),r=Fc(s.shape,a);return r.length>0?gu(vd(t,r),s.shape):t}}}},Nv={kernelName:Mn,gradFunc:e=>({x:()=>xh(e)})},Cv={kernelName:Vn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Bh(n.shape,"float32")}}},Rv={kernelName:Fn,gradFunc:e=>({x:()=>Pc(e)})},Ev={kernelName:On,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return yf(e,s).map((e=>()=>e))}},Gv={kernelName:An,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:a}=n,r=a.map((e=>e[0]));return{x:()=>Ru(e,r,s.shape)}}},Mv={kernelName:Dn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,a]=t,r=n,i=s,o=Vc(r.shape,i.shape);return{a:()=>{const t=pl(i,"float32");let n=Tl(e,Tl(t,md(r,Th(t,fd(1)))));const s=Fc(r.shape,o);return s.length>0&&(n=vd(n,s)),gu(n,r.shape)},b:()=>{const t=Zd(r,0),n=Zc(t,lh(r),Pc(r));let s=Tl(e,Tl(a,n));const l=Fc(i.shape,o);return l.length>0&&(s=vd(s,l)),gu(s,i.shape)}}}},Lv={kernelName:Zn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,a=Zd(n,0);return{x:()=>Zc(a,e,Tl(e,s)),alpha:()=>{let t=Zc(a,Pc(e),Tl(e,n));const r=Fc(s.shape,e.shape);return r.length>0&&(t=vd(t,r)),gu(t,s.shape)}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zv(e,t,n){const s=e.shape.slice();s[n]=1;const a=gu(t,s),r=Sc(e,n,!0,!1),i=Sc(e,n,!0,!0),o=Tl(r,i);return Tl(a,o)}function Wv(e,t,n){const s=e.shape.length,a=s-n.length,r=id(n,s);let i=e;null!=r&&(i=kf(e,r));const o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);const u=i.reshape(o);let c=zv(u,t,a);if(c=c.reshape(i.shape),null!=r){const e=od(r);c=kf(c,e)}return c}const $v={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:a}=n;let r=[];return r=null==a?s.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>Wv(s,e,r)}}},Fv={kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Vc(n.shape,s.shape);return{a:()=>{const t=Il(e,pl(s,"float32")),r=Fc(n.shape,a);return r.length>0?gu(vd(t,r),n.shape):t},b:()=>{let t=Tl(e,pl(n,"float32"));const r=Fc(s.shape,a);r.length>0&&(t=gu(vd(t,r),s.shape));const i=xd(s);return xh(Il(t,pl(i,"float32")))}}}},Vv={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,xh(xd(n)))}}},Ov={kernelName:ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Tl(ah(n,6),jm(n));return{x:()=>Tl(e,pl(s,"float32"))}}},Av={kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,pl(jm(n),"float32"))}}},Xv={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,n.shape)}}},Dv={kernelName:es,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,a={dy:e,images:s};return{images:()=>oi.runKernel(ts,a,n)}}},Zv={kernelName:Jn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,a={dy:e,images:s};return{images:()=>oi.runKernel(qn,a,n)}}},Kv={kernelName:ss,gradFunc:(e,t,n)=>{const{dims:s}=n,a=Y(s,e.shape);return{x:()=>lm(e,a)}}},Pv={kernelName:as,gradFunc:e=>({x:()=>Pc(e)})},_v={kernelName:rs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xh(Il(e,Tl(md(n,1.5),2)))}}},Bv={kernelName:us,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>pl(Pc(n),"float32"),t:()=>Tl(e,pl(n,e.dtype)),e:()=>Tl(e,pl(zh(n),e.dtype))}}},Hv={kernelName:cs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Zd(n,fd(0)),s=fd(mx),a=fd(fx),r=Tl(e,a),i=Tl(Tl(e,s),Rd(pl(n,"float32")));return Zc(t,r,i)}}}},Uv={kernelName:fs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,Tl(n,Th(fd(1),n)))}}},Yv={kernelName:ms,gradFunc:e=>({x:()=>Pc(e)})},jv={kernelName:hs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(wc(pl(n,"float32")),e)}}},Qv={kernelName:ps,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(kc(pl(n,"float32")),e)}}},Jv={kernelName:ds,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:a,size:r}=n,i=s.shape,[o,l]=Py(s,a,r),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>up(e,u)}}},qv={kernelName:vs,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:a}=n,r=!0,i=Tl(e,s);return{logits:()=>Th(i,Tl(vd(i,[a],r),s))}}},ek={kernelName:gs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,Nu(n))}}},tk={kernelName:xs,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:a}=n;return{x:()=>Lu(e,s,a)}}},nk={kernelName:ws,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>ku(e,s)}}},sk={kernelName:bs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,Tl(bd(pl(n,"float32")),2))}}},ak={kernelName:Rs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(e,Tl(pl(n,"float32"),2))}}},rk={kernelName:Cs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=fd(2);return{a:()=>Tl(e,Tl(a,Th(n,s))),b:()=>Tl(e,Tl(a,Th(s,n)))}}},ik={kernelName:Bs,gradFunc:e=>({x:()=>Pc(e)})},ok={kernelName:Ws,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,a=Vc(n.shape,s.shape);return{a:()=>{let t=e;const s=Fc(n.shape,a);return s.length>0&&(t=vd(t,s)),gu(t,n.shape)},b:()=>{let t=e;const n=Fc(s.shape,a);return n.length>0&&(t=vd(t,n)),gu(xh(t),s.shape)}}}},lk={kernelName:ys,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,a=s.shape.slice(),{axis:r}=n;Y(r,s.shape).forEach((e=>{a[e]=1}));const i=gu(e,a),o=Tl(i,Hh(s.shape,"float32"));return{x:()=>o}}},uk={kernelName:$s,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(e,xd(wc(n)))}}},ck={kernelName:Fs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tl(Th(fd(1),xd(n)),e)}}},dk={kernelName:Vs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:a}=n;return{x:()=>{let t=Pc(s);if(1===s.rank)for(let n=0;n<a[0];++n)t=xl(t,Ru(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<a[0];++n)for(let r=0;r<a[1];++r)t=xl(t,Ru(e,[n*s.shape[0],r*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<a[0];++n)for(let r=0;r<a[1];++r)for(let i=0;i<a[2];++i)t=xl(t,Ru(e,[n*s.shape[0],r*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let r=0;r<a[1];++r)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=xl(t,Ru(e,[n*s.shape[0],r*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},hk={kernelName:Xs,gradFunc:(e,t,n)=>{const s=n,{perm:a}=s,r=od(a);return{x:()=>kf(e,r)}}},pk={kernelName:Zs,gradFunc:(e,t,n)=>{const s=n,{axis:a}=s;return{value:()=>Um(e,a)}}},mk={kernelName:Ks,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fk(e,n)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(e,t){const n=Kh(t,Pc(t)),s=Xd(e,n);let a=Pd(t,fd(0,"int32"));const r=s.rank-a.rank;for(let o=0;o<r;++o)a=Gd(a,o+1);a=Mh(a,Hh(s.shape,"bool"));const i=Pc(s);return Zc(a,s,i)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gk={kernelName:_s,gradFunc:e=>({x:()=>Pc(e)})},bk=[iw,ow,lw,uw,cw,dw,hw,pw,mw,fw,gw,bw,ww,Iw,Sw,Tw,Nw,Cw,Rw,Ew,Gw,Mw,zw,Lw,Fw,Vw,Ow,Aw,Xw,Dw,Fv,Zw,Kw,Pw,_w,Bw,Uw,Hw,Yw,jw,qw,ev,tv,nv,sv,av,rv,iv,ov,cv,hv,hv,pv,gv,xv,wv,vv,kv,Iv,Sv,Tv,Nv,Cv,Rv,Ev,Gv,Gv,Mv,Lv,$v,Vv,Ov,Av,Xv,Dv,Zv,Kv,Pv,_v,Bv,Hv,Uv,Yv,jv,Qv,Jv,qv,ek,tk,tk,nk,nk,sk,rk,ak,ik,ok,lk,uk,ck,dk,hk,pk,mk,gk];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const _ee of bk)ia(_ee);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Vr().prototype.abs=function(){return this.throwIfDisposed(),Cl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.acos=function(){return this.throwIfDisposed(),El(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.acosh=function(){return this.throwIfDisposed(),Ml(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.add=function(e){return this.throwIfDisposed(),xl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.all=function(e,t){return this.throwIfDisposed(),zl(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.any=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.argMax=function(e){return this.throwIfDisposed(),Vl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.argMin=function(e){return this.throwIfDisposed(),Al(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.asScalar=function(){return this.throwIfDisposed(),$(1===this.size,(()=>"The array must have only 1 element.")),gu(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.asType=function(e){return this.throwIfDisposed(),pl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.as1D=function(){return this.throwIfDisposed(),gu(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.as2D=function(e,t){return this.throwIfDisposed(),gu(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),gu(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),gu(this,[e,t,n,s])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.as5D=function(e,t,n,s,a){return this.throwIfDisposed(),gu(this,[e,t,n,s,a])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.asin=function(){return this.throwIfDisposed(),Dl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.asinh=function(){return this.throwIfDisposed(),Kl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.atan=function(){return this.throwIfDisposed(),_l(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.atan2=function(e){return this.throwIfDisposed(),Hl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.atanh=function(){return this.throwIfDisposed(),Yl(this)},Vr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),yu(this,e,t,n,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.batchNorm=function(e,t,n,s,a){return this.throwIfDisposed(),$u(this,e,t,n,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),_u(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.cast=function(e){return this.throwIfDisposed(),pl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.ceil=function(){return this.throwIfDisposed(),Hu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ju(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Fr&&(e=[e]),ku([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.conv1d=function(e,t,n,s,a,r){return this.throwIfDisposed(),lc(this,e,t,n,s,a,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.conv2dTranspose=function(e,t,n,s,a){return this.throwIfDisposed(),hc(this,e,t,n,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.conv2d=function(e,t,n,s,a,r){return this.throwIfDisposed(),ic(this,e,t,n,s,a,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.cos=function(){return this.throwIfDisposed(),wc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.cosh=function(){return this.throwIfDisposed(),kc(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Sc(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Nc(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Gc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.depthwiseConv2d=function(e,t,n,s,a,r){return this.throwIfDisposed(),Lc(this,e,t,n,s,a,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.dilation2d=function(e,t,n,s,a){return this.throwIfDisposed(),Wc(this,e,t,n,s,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.divNoNan=function(e){return this.throwIfDisposed(),Bc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.div=function(e){return this.throwIfDisposed(),Il(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.dot=function(e){return this.throwIfDisposed(),Uc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.elu=function(){return this.throwIfDisposed(),Jc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.equal=function(e){return this.throwIfDisposed(),Xc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.erf=function(){return this.throwIfDisposed(),ed(this)},
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Nd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.exp=function(){return this.throwIfDisposed(),Rd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.expandDims=function(e){return this.throwIfDisposed(),Gd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.expm1=function(){return this.throwIfDisposed(),Ld(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.fft=function(){return this.throwIfDisposed(),Wm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.flatten=function(){return this.throwIfDisposed(),gu(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.floor=function(){return this.throwIfDisposed(),Od(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.floorDiv=function(e){return this.throwIfDisposed(),vl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Xd(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Pd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.greater=function(e){return this.throwIfDisposed(),Zd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.ifft=function(){return this.throwIfDisposed(),Fm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.irfft=function(){return this.throwIfDisposed(),Om(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.isFinite=function(){return this.throwIfDisposed(),Ud(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.isInf=function(){return this.throwIfDisposed(),jd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.isNaN=function(){return this.throwIfDisposed(),Jd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),eh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.lessEqual=function(e){return this.throwIfDisposed(),ah(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.less=function(e){return this.throwIfDisposed(),nh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),ih(this,e,t,n,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ih(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ch(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Eh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.log=function(){return this.throwIfDisposed(),lh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.log1p=function(){return this.throwIfDisposed(),ch(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Mh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.logicalNot=function(){return this.throwIfDisposed(),zh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.logicalOr=function(e){return this.throwIfDisposed(),$h(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.logicalXor=function(e){return this.throwIfDisposed(),Vh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Su(this,e,t,n)},Vr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Ah(this,e,t,n,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.max=function(e,t){return this.throwIfDisposed(),cd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.maximum=function(e){return this.throwIfDisposed(),Kh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.mean=function(e,t){return this.throwIfDisposed(),_h(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.min=function(e,t){return this.throwIfDisposed(),hd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.minimum=function(e){return this.throwIfDisposed(),Yh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Qh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.mod=function(e){return this.throwIfDisposed(),qh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.mul=function(e){return this.throwIfDisposed(),Tl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.neg=function(){return this.throwIfDisposed(),xh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Sd(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.notEqual=function(e){return this.throwIfDisposed(),sp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),rp(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.onesLike=function(){return this.throwIfDisposed(),op(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.pad=function(e,t){return this.throwIfDisposed(),up(this,e,t)},Vr().prototype.pool=function(e,t,n,s,a,r){return this.throwIfDisposed(),fp(this,e,t,n,s,a,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.pow=function(e){return this.throwIfDisposed(),md(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.prelu=function(e){return this.throwIfDisposed(),bp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.prod=function(e,t){return this.throwIfDisposed(),xp(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.reciprocal=function(){return this.throwIfDisposed(),nm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.relu=function(){return this.throwIfDisposed(),am(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.relu6=function(){return this.throwIfDisposed(),im(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),gu(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.reshape=function(e){return this.throwIfDisposed(),gu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Mg(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),zg(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.reverse=function(e){return this.throwIfDisposed(),lm(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.rfft=function(){return this.throwIfDisposed(),Zm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.round=function(){return this.throwIfDisposed(),cm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.rsqrt=function(){return this.throwIfDisposed(),hm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.selu=function(){return this.throwIfDisposed(),mm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.separableConv2d=function(e,t,n,s,a,r){return this.throwIfDisposed(),gm(this,e,t,n,s,a,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.sigmoid=function(){return this.throwIfDisposed(),Nu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.sign=function(){return this.throwIfDisposed(),ym(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.sin=function(){return this.throwIfDisposed(),wm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.sinh=function(){return this.throwIfDisposed(),km(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.slice=function(e,t){return this.throwIfDisposed(),Ru(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.softmax=function(e){return this.throwIfDisposed(),Lm(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.softplus=function(){return this.throwIfDisposed(),vh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),dp(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.split=function(e,t){return this.throwIfDisposed(),Xm(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.sqrt=function(){return this.throwIfDisposed(),bd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.square=function(){return this.throwIfDisposed(),xd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Pm(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.squeeze=function(e){return this.throwIfDisposed(),Bm(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Fr?[this,e]:[this,...e];return Um(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.step=function(e){return this.throwIfDisposed(),jm(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.stridedSlice=function(e,t,n,s,a,r,i,o){return this.throwIfDisposed(),Jm(this,e,t,n,s,a,r,i,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.sub=function(e){return this.throwIfDisposed(),Th(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.sum=function(e,t){return this.throwIfDisposed(),vd(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.tan=function(){return this.throwIfDisposed(),ef(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.tanh=function(){return this.throwIfDisposed(),Gu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.tile=function(e){return this.throwIfDisposed(),Wd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.toBool=function(){return this.throwIfDisposed(),pl(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.toFloat=function(){return this.throwIfDisposed(),pl(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.toInt=function(){return this.throwIfDisposed(),pl(this,"int32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.topk=function(e,t){return this.throwIfDisposed(),cf(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.transpose=function(e){return this.throwIfDisposed(),kf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.unique=function(e){return this.throwIfDisposed(),mf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),gf(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.unstack=function(e){return this.throwIfDisposed(),yf(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.where=function(e,t){return this.throwIfDisposed(),Zc(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Vr().prototype.zerosLike=function(){return this.throwIfDisposed(),Pc(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class yk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yk.prototype)}}class xk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xk.prototype)}}class wk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wk.prototype)}}class vk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vk.prototype)}}class kk extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kk.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ik{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sk(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Tk(e,t){if(!e)throw new kk(t)}function Nk(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Ck(e){return 1===e.length?e[0]:e}function Rk(e){return Array.isArray(e)?e:[e]}function Ek(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Gk(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Mk={};function Lk(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function zk(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>zk(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?zk(t):e[n]=t.value)}}}function Wk(e,t={},n={},s="object",a=!1){if("string"==typeof e){const a=e;let r;if(a in n)r=n[a];else if(a in Mk)r=Mk[a];else if(r=t[a],null==r)throw new wk(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}{const r=e;if(null==r.className||null==r.config)throw new wk(`${s}: Improper config format: ${JSON.stringify(r)}.\n'className' and 'config' must set.`);const i=r.className;let o,l;if(i in n?[o,l]=n[i]:i in Mk?[o,l]=Mk.className:i in t&&([o,l]=t[i]),null==o)throw new wk(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(Mk))e[n]=Mk[n];for(const a of Object.keys(n))e[a]=n[a];const t=r.config;t.customObjects=e;const s=Object.assign({},Mk);for(const a of Object.keys(n))Mk[a]=n[a];zk(r.config);const i=l(o,r.config,n,a);return Mk=Object.assign({},s),i}{const e=Object.assign({},Mk);for(const s of Object.keys(n))Mk[s]=n[s];const t=new o(r.config);return Mk=Object.assign({},e),t}}}function $k(e,t){return e<t?-1:e>t?1:0}function Fk(e,t){return-1*$k(e,t)}function Vk(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ok(e){if(null==e)throw new wk(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ak(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new wk(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Xk(e,t,n=0,s=1/0){return Tk(n>=0),Tk(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Dk(e,t){Array.isArray(e)?($(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Dk(e,`element ${n+1} of ${t}`)))):$(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Zk(e)}.`))}function Zk(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Zk(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Kk(e,t,n){let s,a=null!=n?n():cr();return(...r)=>{const i=null!=n?n():cr();return i-a<t||(a=i,s=e(...r)),s}}function Pk(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _k=0;function Bk(){return _k++}const Hk={};function Uk(e=""){return e in Hk||(Hk[e]=0),Hk[e]+=1,e+Hk[e].toString()
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */}const Yk=["channelsFirst","channelsLast"],jk=["nearest","bilinear"],Qk=["valid","same","causal"],Jk=["max","avg"],qk=["sum","mul","concat","ave"],eI=new Map;
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tI(e){Ak(Yk,"DataFormat",e)}function nI(e){Ak(jk,"InterpolationFormat",e)}function sI(e){Ak(Qk,"PaddingMode",e)}function aI(e){Ak(Jk,"PoolMode",e)}const rI=[],iI="/";function oI(e,t){rI.push(e);try{const e=t();return rI.pop(),e}catch(n){throw rI.pop(),n}}function lI(){return 0===rI.length?"":rI.join(iI)+iI}function uI(e){if(!hI(e))throw new Error("Not a valid tensor name: '"+e+"'");return lI()+e}function cI(e){if(!hI(e))throw new Error("Not a valid tensor name: '"+e+"'");eI.has(e)||eI.set(e,0);const t=eI.get(e);if(eI.set(e,eI.get(e)+1),t>0){const n=`${e}_${t}`;return eI.set(n,1),n}return e}const dI=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function hI(e){return!!e.match(dI)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pI(e){return e===parseInt(e.toString(),10)}function mI(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let a=t;a<n;++a)s*=e[a];return s}function fI(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function gI(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function bI(e,t){if(t<e)throw new wk(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let yI;function xI(){return null==yI&&(yI=Yi().epsilon()),yI}function wI(){return"channelsLast"}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vI(e,t){return pl(e,t)}function kI(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),gu(e,n)}function II(e,t){return Oi((()=>{if(2!==e.shape.length)throw new wk(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=kI(e,1);return MI(n,[1,t,1])}))}function SI(e){const t=[mI(e.shape)];return gu(e,t)}function TI(e){if(e.rank<=1)throw new wk(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],mI(e.shape,1)];return gu(e,t)}function NI(e,t,n){return Oi((()=>{switch(e.rank){case 1:return Sm(e,t,n);case 2:return Nm(e,[t,0],[n,e.shape[1]]);case 3:return Rm(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Gm(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ru(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ru(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new wk(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function CI(e,t,n){return Oi((()=>{switch(e.rank){case 1:return Sm(e,t,n);case 2:return Nm(e,[0,t],[e.shape[0],n]);case 3:return Rm(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Gm(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new wk(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function RI(e,t,n,s){return Oi((()=>{switch(e.rank){case 1:return Sm(e,t,n);case 2:switch(s){case 1:return NI(e,t,n);case 2:return CI(e,t,n);default:throw new wk(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return NI(e,t,n);case 2:return Rm(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return CI(e,t,n);default:throw new wk(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return NI(e,t,n);case 2:return Gm(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Gm(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return CI(e,t,n);default:throw new wk(`The axis is not within the rank of the tensor ${s}`)}default:throw new wk(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function EI(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),ku(e,t)}function GI(e,t){switch(e.rank){case 1:return Ju([e,t]);case 2:return ec([e,t],0);case 3:return nc([e,t],0);case 4:return ac([e,t],0);default:throw new wk(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function MI(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new wk(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Wd(e,t)}function LI(e,t=0,n=1,s,a){return Yp(e,t,n,s,a)}function zI(e,t,n,s){if(e.rank<2||t.rank<2)throw new vk(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const n=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new vk(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank)return Df({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?FI(e.rank,s,wI()):null,activation:n});{const a=e.shape.slice(),r=a.pop();e=gu(e,[-1,r]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=gu(kf(t,c),[l,-1]);const d=[...a,...u];return gu(Df({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?FI(e.rank,s,wI()):null,activation:n}),d)}}function WI(e,t,n){return Oi((()=>(t=Array.isArray(t)?tf(t,"int32"):pl(t,"int32"),Xd(e,t,n))))}function $I(e){return Tl(e,e)}function FI(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new wk(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?gu(t,[1,s[0],1,1,1]):gu(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?gu(t,[1,1,1,1,s[0]]):gu(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?gu(t,[1,s[0],1,1]):gu(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?gu(t,[1,1,1,s[0]]):gu(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?gu(t,[1,s[0],1]):gu(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?gu(t,[1,1,s[0]]):gu(t,[1].concat(s))}else if(e<3)return t;throw new wk(`Unsupported input rank by biasAdd: ${t.rank}`)}function VI(e,t,n){return Oi((()=>(null==n&&(n=wI()),tI(n),xl(e,FI(e.rank,t,n)))))}function OI(e,t=1){if(1!==t)throw new vk(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Jc(e)}function AI(e){return Oi((()=>Il(e,xl(Cl(e),1))))}function XI(e,t,n,s){return Oi((()=>Tf(e,t,n,s)))}function DI(e){return Oi((()=>{const t=xl(.5,Tl(.2,e));return ju(t,0,1)}))}function ZI(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const KI=["fanIn","fanOut","fanAvg"],PI=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _I(e){Ak(KI,"FanMode",e)}function BI(e){Ak(PI,"Distribution",e)}class HI extends Ob{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class UI extends HI{apply(e,t){return Bh(e,t)}}UI.className="Zeros",Xb(UI);class YI extends HI{apply(e,t){return Hh(e,t)}}YI.className="Ones",Xb(YI);class jI extends HI{constructor(e){if(super(),"object"!=typeof e)throw new wk(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new wk(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Oi((()=>Tl(fd(this.value),Hh(e,t))))}getConfig(){return{value:this.value}}}jI.className="Constant",Xb(jI);class QI extends HI{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Qp(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}QI.className="RandomUniform",Xb(QI);class JI extends HI{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new vk(`randomNormal does not support dType ${t}.`);return LI(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}JI.className="RandomNormal",Xb(JI);class qI extends HI{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new vk(`truncatedNormal does not support dType ${t}.`);return hf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}qI.className="TruncatedNormal",Xb(qI);class eS extends HI{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Oi((()=>{if(2!==e.length||e[0]!==e[1])throw new wk("Identity matrix initializer can only be used for 2D square matrices.");return Tl(this.gain,Fd(e[0]))}))}getConfig(){return{gain:this.gain}}}function tS(e,t="channelsLast"){let n,s;if(tI(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=mI(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=mI(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=mI(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}eS.className="Identity",Xb(eS);class nS extends HI{constructor(e){if(super(),e.scale<0)throw new wk(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,_I(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,BI(this.distribution),this.seed=e.seed}apply(e,t){const n=tS(e),s=n[0],a=n[1];let r=this.scale;if("fanIn"===this.mode?r/=Math.max(1,s):"fanOut"===this.mode?r/=Math.max(1,a):r/=Math.max(1,(s+a)/2),"normal"===this.distribution){const n=Math.sqrt(r);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new vk(`${this.getClassName()} does not support dType ${t}.`);return hf(e,0,n,t,this.seed)}{const n=Math.sqrt(3*r);return Qp(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}nS.className="VarianceScaling",Xb(nS);class sS extends nS{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return nS.className}}sS.className="GlorotUniform",Xb(sS);class aS extends nS{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return nS.className}}aS.className="GlorotNormal",Xb(aS);class rS extends nS{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return nS.className}}rS.className="HeNormal",Xb(rS);class iS extends nS{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return nS.className}}iS.className="HeUniform",Xb(iS);class oS extends nS{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return nS.className}}oS.className="LeCunNormal",Xb(oS);class lS extends nS{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return nS.className}}lS.className="LeCunUniform",Xb(lS);class uS extends HI{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Oi((()=>{if(e.length<2)throw new vk("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=O(e.slice(0,-1)),s=e[e.length-1],a=n*s;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);const r=[Math.max(s,n),Math.min(s,n)],i=LI(r,0,1,t,this.seed),o=Lb.qr(i,!1);let l=o[0];const u=o[1].flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return l=Tl(l,u.sign()),n<s&&(l=l.transpose()),Tl(fd(this.gain),l.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}uS.className="Orthogonal",Xb(uS);const cS={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function dS(e,t={}){return Wk(e,Ab.getMap().classNameMap,t,"initializer")}function hS(e){return Lk(e)}function pS(e){if("string"==typeof e){const t=e in cS?cS[e]:e;if("GlorotNormal"===t)return new aS;if("GlorotUniform"===t)return new sS;if("HeNormal"===t)return new rS;if("HeUniform"===t)return new iS;if("LeCunNormal"===t)return new oS;if("LeCunUniform"===t)return new lS;{const e={};return e.className=t,e.config={},dS(e)}}return e instanceof HI?e:dS(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mS(e){return Array.isArray(e)&&Array.isArray(e[0])}function fS(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function gS(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new wk(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function bS(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new wk(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yS(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xS="Variable";class wS{constructor(e,t="float32",n=xS,s=!0,a=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Bk(),n=n??xS,this.originalName=uI(n),this.name=cI(this.originalName),this.trainable_=s,this.constraint=a,this.val=xf(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),vS(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function vS(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function kS(e){return e.map((e=>e.read()))}function IS(e){e.forEach((e=>{e[0].write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class SS{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class TS{constructor(e,t,n,s,a,r,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=a,this.outputTensorIndex=i,this.id=Bk(),null!=r&&(this.originalName=uI(r),this.name=cI(this.originalName)),this.rank=t.length}}let NS=0;class CS{constructor(e,t){this.callArgs=t,this.id=NS++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let RS=0;class ES extends Ob{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=RS++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Ek(e)+"_"+Uk(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new xk(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new wk(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Ck(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ck(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new yk(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new yk(`Layer ${this.name} is not connected, no input to return.`);return Ck(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new yk(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new yk(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Ck(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Rk(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Rk(this.inputSpec);if(t.length!==n.length)throw new wk(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let s=0;s<t.length;s++){const e=t[s],a=n[s];if(null==a)continue;const r=e.rank;if(null!=a.ndim&&r!==a.ndim)throw new wk(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${r}`);if(null!=a.maxNDim&&r>a.maxNDim)throw new wk(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${r}`);if(null!=a.minNDim&&r<a.minNDim)throw new wk(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${r}.`);if(null!=a.dtype&&e.dtype!==a.dtype)throw new wk(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${e.dtype}.`);if(a.axes){const t=e.shape;for(const e in a.axes){const n=Number(e),r=a.axes[e],i=n>=0?t[n]:t[t.length+n];if(null!=r&&-1===[r,null].indexOf(i))throw new wk(`Input ${s} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${r} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const n=a.shape[t],r=e.shape[t];if(null!=n&&null!=r&&n!==r)throw new wk(`Input ${s} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${e.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Rk(e),s=zS(e),a=WS(e);if(s===a)throw new wk("Arguments to apply() must be all SymbolicTensors or all Tensors");return oI(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Rk(e))t.push(n.shape);this.build(Ck(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,s);const a=Rk(s),r=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),r.push(e);if(s=Ck(r),null!=this.activityRegularizer)throw new vk("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=GS(e),s=this.computeOutputShape(n);let a;const r=MS(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new TS(r,n,this,Rk(e),t,this.name,s))):new TS(r,s,this,Rk(e),t,this.name),this.addInboundNode(e,a,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new vk("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new yk(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new yk(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new xk(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return yS(this.weights)}build(e){this.built=!0}getWeights(e=!1){return kS(e?this.trainableWeights:this.weights)}setWeights(e){Oi((()=>{const t=this.weights;if(t.length!==e.length)throw new wk(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=kS(t);for(let a=0;a<s.length;++a){const r=s[a],i=t[a],o=e[a];if(!D(r.shape,o.shape))throw new wk(`Layer weight shape ${r.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}IS(n)}))}addWeight(e,t,n,s,a,r,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new wk(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():pS("zeros"));const l=s.apply(t,n),u=new wS(l,n,e,r,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==r&&(r=!0),r?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Rk(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const s=this.computeMask(e,n),a=Rk(t),r=Rk(s);if(a.length!==r.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let i=0;i<a.length;i++)a[i].kerasMask=r[i]}addInboundNode(e,t,n,s,a,r,i=null){const o=Rk(e);t=Rk(t),n=Rk(n),s=Rk(s),a=fS(a),r=fS(r);const l=[],u=[],c=[];for(const d of o)l.push(d.sourceLayer),u.push(d.nodeIndex),c.push(d.tensorIndex);new CS({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:a,outputShapes:r},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function GS(e){e=Rk(e);const t=[];for(const n of e)t.push(n.shape);return Ck(t)}function MS(e){return"float32"}function LS(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=e.inputTensors[n],a=e.inboundLayers[n],r=e.nodeIndices[n],i=LS(s,a,r);for(const e of i)-1===t.indexOf(e)&&t.push(e)}return t}}}function zS(e){let t=!0;for(const n of Rk(e))if(!(n instanceof TS)){t=!1;break}return t}function WS(e){let t=!0;for(const n of Rk(e))if(n instanceof TS){t=!1;break}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $S extends ES{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Uk("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new wk("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new wk("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new wk("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new TS(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new CS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new wk(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function FS(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new wk("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new $S({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */}function VS(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return pl(t,e.dtype)}catch{throw new wk(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}$S.className="InputLayer",Xb($S);class OS{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof OS)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new wk(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=VS(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof TS){if(null==this.id2Value[e.id])throw new wk(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new wk(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof TS){if(null==this.id2Value[e.id])throw new wk(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new wk(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Ai(this.id2Mask)}}const AS=new Ik,XS=new Ik;function DS(e){null!=AS&&AS.setMaxEntries(e),null!=XS&&XS.setMaxEntries(e)}function ZS(e,t,n,s){const a=null!=n&&n.training,r=Array.isArray(e),i=r?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const m of o)-1!==u.indexOf(m)?l.push(t.getValue(m)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let d,h=AS.get(c);if(null==h){const e=KS(i,t);h=e.sorted,d=e.recipientCounts,AS.put(c,h),XS.put(c,d)}d={},a||Object.assign(d,XS.get(c));const p=new OS(t);for(let m=0;m<h.length;++m){if(null!=s){const e=Fi().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=h[m],r=e.sourceLayer;if(r instanceof $S)continue;const i=[],u=[],c=[];let f=!1;for(const n of e.inputs){const e=p.getValue(n),s=p.getMask(n);i.push(e),u.push(s),null!=s&&(f=!0),a||(d[n.name]--,0===d[n.name]&&!t.hasKey(n)&&-1===o.indexOf(n.name)&&!e.isDisposed&&!0!==n.sourceLayer.stateful&&c.push(e))}f&&(n=n||{},n.mask=u[0]);const g=Rk(r.apply(i,n));let b=null;r.supportsMasking&&(b=r.computeMask(i,u));const y=BS(e),x=Array.isArray(y)?y:[y];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}a||Ai(c)}return p.disposeMasks(),r?l:l[0]}function KS(e,t){$(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const a=_S(e[0],t);n=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of e){const{sorted:e,recipientMap:i}=_S(r,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:PS(s)}}function PS(e){const t={};for(const n in e)t[n]=e[n].size;return t}function _S(e,t){const n=new Set,s=[],a={};for(const o of t.names())n.add(o);const r=[],i=[];for(r.push(e);r.length>0;){const e=r[r.length-1];if(n.has(e.name)){r.pop();continue}const t=i[i.length-1]===r.length-1;if(0===e.inputs.length||t)r.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(r.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&r.push(t)}}return{sorted:s,recipientMap:a}}function BS(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS=Ne();
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function US(e,t){return Oi((()=>bd(vd(Tl(e,e),t,!0))))}HS.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),DS);class YS extends Ob{getConfig(){return{}}}class jS extends YS{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Oi((()=>{const t=US(e,this.axis),n=ju(t,0,this.maxValue);return Tl(e,Il(n,xl(xI(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}jS.className="MaxNorm",Xb(jS);class QS extends YS{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Oi((()=>Il(e,xl(xI(),US(e,this.axis)))))}getConfig(){return{axis:this.axis}}}QS.className="UnitNorm",Xb(QS);class JS extends YS{apply(e){return am(e)}}JS.className="NonNeg",Xb(JS);class qS extends YS{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Oi((()=>{const t=US(e,this.axis),n=xl(Tl(this.rate,ju(t,this.minValue,this.maxValue)),Tl(1-this.rate,t));return Tl(e,Il(n,xl(xI(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}qS.className="MinMaxNorm",Xb(qS);const eT={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function tT(e){return Lk(e)}function nT(e,t={}){return Wk(e,Ab.getMap().classNameMap,t,"constraint")}function sT(e){if(null==e)return null;if("string"==typeof e){const t={className:e in eT?eT[e]:e,config:{}};return nT(t)}return e instanceof YS?e:nT(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function aT(e){if(null==e)return;const t=[],n=[],s=[];for(const a in e){const r=e[a];if("number"!=typeof r){const e=r;t.push(e.data()),n.push(a),s.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Ai(s)}}function rT(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var iT;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(iT||(iT={}));const oT=125;class lT{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class uT{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class cT extends lT{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const s in t){const e=t[s];if("number"==typeof e)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+e*n;else{let t;s in this.totals?t=this.totals[s]:this.totals[s]=0;const a=Oi((()=>xl(this.totals[s],Tl(e,n))));this.totals[s]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Oi((()=>{const e=Tl(Il(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),Xi(t[n])})))}}class dT extends lT{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const a in this.history){const s=this.history[a];for(let r=0;r<s.length;++r)if("number"!=typeof s[r]){const i=s[r];e.push(i.data()),t.push(a),n.push(r)}}const s=await Promise.all(e);for(let a=0;a<s.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=s[a][0]}}class hT extends lT{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Jy,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=oT),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ie(this.yieldEvery)&&(this.maybeWait=Kk(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await aT(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await aT(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await aT(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await aT(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await aT(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ie(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await aT(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await aT(e),await this.trainEnd(e))}}function pT(e,t){return null==e&&(e={}),e instanceof lT?[e]:Array.isArray(e)&&e[0]instanceof lT?e:Rk(e).map((e=>new hT(e,t)))}class mT{constructor(){}static registerCallbackConstructor(e,t){$(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),mT.checkForDuplicate(t),null==mT.constructors[e]&&(mT.constructors[e]=[]),mT.constructors[e].push(t)}static checkForDuplicate(e){for(const t in mT.constructors)mT.constructors[+t].forEach((t=>{if(t===e)throw new wk("Duplicate callback constructor.")}))}static clear(){mT.constructors={}}static createCallbacks(e){const t=[];for(const n in mT.constructors){const s=+n;e>=s&&t.push(...mT.constructors[s])}return t.map((e=>new e))}}function fT(e,t,n,s,a,r,i,o,l){const u=new dT,c=[new cT,...mT.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const d=new uT(c);return d.setParams({epochs:n,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */}function gT(e,t={},n=!1){return Wk(e,Ab.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bT(e,t){return Oi((()=>{"float32"!==e.dtype&&(e=pl(e,"float32"));const n=vd($I(e),t,!0),s=Uu(n.shape,xI()),a=bd(Kh(n,s));return Il(e,a)}))}function yT(e,t){return Oi((()=>_h($I(Th(t,e)),-1)))}function xT(e,t){return Oi((()=>_h(Cl(Th(t,e)),-1)))}function wT(e,t){return Oi((()=>{const n=Th(e,t),s=ju(Cl(e),xI(),Number.MAX_VALUE),a=Cl(Il(n,s));return Tl(100,_h(a,-1))}))}function vT(e,t){return Oi((()=>{const n=ju(t,xI(),Number.MAX_VALUE),s=lh(xl(1,n)),a=ju(e,xI(),Number.MAX_VALUE),r=lh(xl(1,a));return _h($I(Th(s,r)),-1)}))}function kT(e,t){return Oi((()=>{const n=Kh(0,Th(1,Tl(e,t)));return _h($I(n),-1)}))}function IT(e,t){return Oi((()=>{const n=Kh(0,Th(1,Tl(e,t)));return _h(n,-1)}))}function ST(e,t){return Oi((()=>{const n=vd(Tl(e,t),-1),s=cd(Tl(Th(1,e),t),-1);return Kh(0,xl(1,Th(s,n)))}))}function TT(e,t){return Oi((()=>{const n=Math.log(2),s=Th(t,e),a=Th(xl(s,vh(Tl(-2,s))),n);return _h(a,-1)}))}function NT(e,t,n=!1){return Oi((()=>{if(n)t=Lm(t);else{const e=vd(t,t.shape.length-1,!0);t=Il(t,e)}return t=ju(t,xI(),1-xI()),xh(vd(Tl(pl(e,"float32"),lh(t)),t.shape.length-1))}))}function CT(e,t,n=!1){return Oi((()=>{const s=pl(Od(SI(e)),"int32");t=ju(t,xI(),1-xI());const a=t.shape,r=gu(rp(s,a[a.length-1]),a);return NT(r,t,n)}))}function RT(e,t){if(!D(e.shape,t.shape))throw new wk(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Oi((()=>{const n=am(t),s=xh(Cl(t));return xl(Th(n,Tl(t,e)),ch(Rd(s)))}))}function ET(e,t){return Oi((()=>{let n;return n=ju(t,xI(),1-xI()),n=lh(Il(n,Th(1,n))),_h(RT(e,n),-1)}))}function GT(e,t){return Oi((()=>{const n=ju(e,xI(),1),s=ju(t,xI(),1);return vd(Tl(e,lh(Il(n,s))),-1)}))}function MT(e,t){return Oi((()=>{const n=lh(xl(xI(),t));return _h(Th(t,Tl(e,n)),-1)}))}function LT(e,t){return Oi((()=>{const n=bT(e,-1),s=bT(t,-1),a=Tl(n,s);return xh(vd(a,-1))}))}mT.constructors={};const zT={meanSquaredError:yT,meanAbsoluteError:xT,meanAbsolutePercentageError:wT,meanSquaredLogarithmicError:vT,squaredHinge:kT,hinge:IT,categoricalHinge:ST,logcosh:TT,categoricalCrossentropy:NT,sparseCategoricalCrossentropy:CT,binaryCrossentropy:ET,kullbackLeiblerDivergence:GT,poisson:MT,cosineProximity:LT};function WT(e){if("string"==typeof e){if(e in zT)return zT[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new wk(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $T(e,t){return Oi((()=>{const n=Tl(.5,op(t)),s=vI(Zd(t,n),e.dtype);return _h(Xc(e,s),-1)}))}function FT(e,t){return Oi((()=>vI(Xc(Vl(e,-1),Vl(t,-1)),"float32")))}function VT(e,t){return Oi((()=>pl(vd(Mh(Xc(e,1),Xc(t,1))),"float32")))}function OT(e,t){return Oi((()=>pl(vd(Mh(Xc(e,1),Xc(t,0))),"float32")))}function AT(e,t){return Oi((()=>pl(vd(Mh(Xc(e,0),Xc(t,1))),"float32")))}function XT(e,t){return Oi((()=>{const n=VT(e,t),s=AT(e,t),a=xl(n,s);return pl(Zc(Zd(a,0),Il(n,a),0),"float32")}))}function DT(e,t){return Oi((()=>{const n=VT(e,t),s=OT(e,t),a=xl(n,s);return pl(Zc(Zd(a,0),Il(n,a),0),"float32")}))}function ZT(e,t){return ET(e,t)}function KT(e,t){return e.rank===t.rank&&(e=Bm(e,[e.rank-1])),t=Vl(t,-1),t.dtype!==e.dtype&&(t=pl(t,e.dtype)),pl(Xc(e,t),"float32")}const PT=yT,_T=yT,BT=xT,HT=xT,UT=wT,YT=wT,jT=NT,QT=LT,JT=CT,qT={binaryAccuracy:$T,categoricalAccuracy:FT,precision:XT,categoricalCrossentropy:jT,sparseCategoricalCrossentropy:JT,mse:PT,MSE:_T,mae:BT,MAE:HT,mape:UT,MAPE:YT,cosine:QT};function eN(e){if("string"==typeof e&&e in qT)return qT[e];if("string"!=typeof e&&null!=e)return e;throw new wk(`Unknown metric ${e}`)}function tN(e){if(Tk(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(zT))if(zT[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(qT))if(qT[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nN(e){const t={Adagrad:()=>jy.adagrad(.01),Adadelta:()=>jy.adadelta(1,.95,xI()),Adam:()=>jy.adam(.001,.9,.999,xI()),Adamax:()=>jy.adamax(.002,.9,.999,xI(),0),RMSProp:()=>jy.rmsprop(.001,.9,0,xI()),SGD:()=>jy.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new wk(`Unknown Optimizer ${e}`)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sN=1048576;function aN(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!rN(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>sN&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${sN}.`)}}function rN(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t)if("string"!=typeof n||!rN(e[n]))return!1;return!0}if(Array.isArray(e)){for(const t of e)if(!rN(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iN(e,t,n,s=console.log){const a=lN(e),r=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){r.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),uN(r,n,s),s("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)a?cN(o[c],n,s):dN(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=oN(e),u=yS(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function oN(e){let t;return t=null!=e.collectedTrainableWeights?yS(e.collectedTrainableWeights):yS(e.trainableWeights),t}function lN(e){let t=!0;const n=[],s=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){t=!1;break}s.push(...a)}if(t)for(const a of e.layers){let e=!1;for(const n of a.inboundNodes)if(-1!==s.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function uN(e,t,n=console.log){let s="";for(let a=0;a<e.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=e[a],s=s.slice(0,t[a]),s+=" ".repeat(t[a]-s.length);n(s)}function cN(e,t,n){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch{a="multiple"}try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}const r=e.name,i=e.getClassName(),o=[`${r} (${i})`,a,s,e.countParams().toString()];uN(o,t,n)}function dN(e,t,n,s){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch{r="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}const i=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],s=d.tensorIndices[e];i.push(`${t}[${n}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0],c=[`${o} (${l})`,r,a,e.countParams().toString(),u];uN(c,t,s);for(let d=1;d<i.length;++d)uN(["","","","",i[d]],t,s)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hN(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function pN(e,t){if(null===e)return null;if("string"==typeof e)return Gk(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let a=0;a<s;++a){const s=e[a];hN(t,a,s)?n.push(s):n.push(pN(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=Gk(n);t[e]=pN(s,e)}}return t}}function mN(e,t){if(null==e)return null;if("string"==typeof e)return Ek(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let a=0;a<s;++a){const s=e[a];hN(t,a,s)?n.push(s):n.push(mN(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],a=Ek(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof s?mN(s,n):s}return t}}/** @license See the LICENSE file. */const fN="4.16.0",gN=e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class bN extends ES{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Uk(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Vk(this.inputs).length!==this.inputs.length)throw new wk(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Vk(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;Tk(0===t,"input layer has >1 nodes"),Tk(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const t=this.inputLayers[b];if(!(t instanceof $S))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},a={},r={},i=[],o=(e,t,n,s,a,l)=>{(null==s||null==a||null==l)&&(s=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[a];if(-1!==n.indexOf(u))throw new xk(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(bN.nodeKey(s,a)),s.id in r||(r[s.id]=Object.keys(r).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let r=0;r<c;r++){const e=u.inputTensors[r],s=u.inboundLayers[r],a=u.nodeIndices[r],i=u.tensorIndices[r];o(e,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const b of this.outputs)o(b,l,u);const c=i.slice().reverse();for(const b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let e=t[b.id];const r=null==s[b.outboundLayer.id]?0:s[b.outboundLayer.id];e=Math.max(e,r),s[b.outboundLayer.id]=e,a[b.outboundLayer.id]=b.outboundLayer,t[b.id]=e;for(let s=0;s<b.inboundLayers.length;s++){const a=b.inboundLayers[s],r=b.nodeIndices[s],i=a.inboundNodes[r],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const d={};for(const b in t){const e=t[b];e in d||(d[e]=[]),d[e].push(n[b])}const h={};for(const b in s){const e=s[b];e in h||(h[e]=[]),h[e].push(a[b])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(Fk);this.layers=[];for(const b of p){const e=h[b];e.sort(((e,t)=>{const n=r[e.id],s=r[t.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof bN&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(Fk);const m=this.inputs.slice(),f=[];for(const b of p)for(const e of d[b]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===m.indexOf(n))throw new xk(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${f}`);for(const t of e.outputTensors)m.push(t);f.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const b of g){const e=g.filter((e=>e===b)).length;if(1!==e)throw new xk(`The name "${b}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new CS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new wk("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;const a=gN(e);a&&this.parseWeights(e);for(const i of this.layers)for(const[e,t]of i.weights.entries()){const r=a?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[r])throw new wk(`Duplicate weight name: ${r}`);n[r]=t,s++}const r=[];for(const i in e){let s=i;if(null==n[i]){const e=i.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])r.push([n[s],e[i]]);else if(t)throw new wk(`Provided weight data has no target variable: ${i}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new wk(`${e.length} of ${s} weights are not set: ${e}`)}IS(r)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),s=["vars","layer_checkpoint_dependencies"],a=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!s.includes(e))).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${fN}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=mN(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Oi((()=>{e=Rk(e);const n=new OS;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ZS(this.outputs,n,t)}))}computeMask(e,t){return Oi((()=>{let n;return e=Rk(e),n=null==t?Sk(null,e.length):Rk(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=fS(e);if(t.length!==this.inputLayers.length)throw new wk(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],s=t[i],a=e.name+"_0_0";n[a]=s}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Fk);if(s.length>1)for(const i of s){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const s=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],a=t.nodeIndices[o],r=t.tensorIndices[o],i=`${e.name}_${a}_${r}`,l=n[i];s.push(l)}const a=e.computeOutputShape(Ck(s)),r=fS(a),i=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){const s=`${e.name}_${i}_${t}`;n[s]=r[t]}}}const a=[],r=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],s=`${e.name}_${t}_${n}`;r.push(s)}for(let i=0;i<r.length;i++){const e=r[i];Tk(e in n),a.push(n[e])}return Ck(a)}runInternalGraph(e,t){null==t&&(t=Sk(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const s=this.inputs[o],a=e[o],r=t[o];n[s.id]=[a,r]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Fk);for(const o of s){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,a=t.outputTensors,r=new Array;for(const t of s)t.id in n&&r.push(n[t.id]);if(r.length===s.length){let s,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===r.length){const[t,n]=r[0];null==u.mask&&(u.mask=n),o=Rk(e.call(t,u)),l=Rk(e.computeMask(t,n)),s=[t],i=[n]}else s=r.map((e=>e[0])),i=r.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Rk(e.call(s,u)),l=Rk(e.computeMask(s,i));if(e.activityRegularizer)throw new vk("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],s=o[e],r=l[e];n[t.id]=[s,r]}}}}const a=[],r=[],i=[];for(const o of this.outputs){Tk(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),a.push(e),r.push(t)}return[a,r,i]}buildNodeConversionMap(e){const t={};let n;for(const s of this.layers){n=s instanceof bN?1:0;for(let e=0;e<s.inboundNodes.length;e++){const a=bN.nodeKey(s,e);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new wk("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new wk(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new wk(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Oi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=bN.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const r of this.layers){const e=r.getClassName(),s=r.getConfig(),a=[];for(let n=0;n<r.inboundNodes.length;n++){const e=r.inboundNodes[n],s=bN.nodeKey(r,n);let i={};if(this.containerNodes.has(s)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch{console.warn(`Layer ${r.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let s=0;s<e.inboundLayers.length;s++){const a=e.inboundLayers[s],r=e.nodeIndices[s],o=e.tensorIndices[s],l=bN.nodeKey(a,r);let u=t[l];null==u&&(u=0),n.push([a.name,u,o,i])}a.push(n)}}}const i={};i.name=r.name,i.className=e,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let r=0;r<this.inputLayers.length;r++){const e=this.inputLayers[r],n=this.inputLayersNodeIndices[r],a=bN.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[r];s.push([e.name,i,o])}e.inputLayers=s;const a=[];for(let r=0;r<this.outputLayers.length;r++){const e=this.outputLayers[r],n=this.outputLayersNodeIndices[r],s=bN.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[r];a.push([e.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},s=!1){const a={},r={};function i(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let s;for(const r of t){const o=r[0],l=r[1],u=r[2];if(s=null==r[3]?{}:r[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=l)return void i(e,t);const d=c.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(Ck(n),s)}function l(e){const n=e.name,r=gT(e,null!=t.customObjects?t.customObjects:{});r.setFastWeightInitDuringBuild(s),a[n]=r,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new wk(`Corrupted configuration, expected array for nodeData: ${e}`);i(r,e)}))}const u=t.name,c=t.layers;for(const f of c)l(f);for(;!Ok(r);)for(const e of c){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];Tk(e in a);const s=a[e].inboundNodes[t].outputTensors;d.push(s[n])}const m=t.outputLayers;for(const f of m){const e=f[0],t=f[1],n=f[2];Tk(e in a);const s=a[e].inboundNodes[t].outputTensors;h.push(s[n])}return new e({inputs:d,outputs:h,name:u})}get stateful(){if(this._stateful)throw new wk("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Oi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yN(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function xN(e,t){return yN(e,t,"classWeight")}async function wN(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Oi((()=>{if(1===e.shape.length)return fl(e);if(2===e.shape.length){if(e.shape[1]>1)return Vl(e,1);if(1===e.shape[1])return gu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());Ai(t);const a=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),tf(a,"float32")}return null}function vN(e,t){return Tl(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kN=32;function IN(e,t){let n,s;const a=t;n=a.xs,s=a.ys,$(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const r=SN("input",e.inputNames,n),i=SN("output",e.outputNames,s),o=r[0].shape[0];$(r.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),$(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<r.length;l++)$(r[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${r[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)$(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:r,ys:i}}function SN(e,t,n){if(n instanceof Fr)return[n];if(Array.isArray(n))return $(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const a of t){if(null==n[a])throw new wk(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);s.push(n[a])}return s}}function TN(e){if(3===e.length)throw new vk("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function NN(e,t,n){const s=null!=n.batchesPerEpoch;if($(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),$(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),$(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),$(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),$(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let r,i;if(a)if(RN(n.validationData))$(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=TN(n.validationData);r=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=a?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=pT(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=fT(c,d,n.epochs,null,null,CN(t,n),null,a,u);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){const u={};await h.onEpochBegin(m);let c=0,d=0;for(s||(f=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await f.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:s,ys:a}=IN(e,t.value),r={};r.batch=d,r.size=s[0].shape[0],await h.onBatchBegin(d,r);const i=[];if(null!=n.classWeight){const t=xN(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await wN(a[e],null,t[e]))}const u=s.concat(a).concat(i),p=o(u);Ai(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];r[t]=n,Xi(n)}await h.onBatchEnd(d,r),rT(r),d++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(a){let t;t=RN(n.validationData)?Rk(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Rk(e.evaluate(r,i,{batchSize:null==n.validationBatchSize?kN:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(m,u),m++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function CN(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function RN(e){return"function"==typeof e.iterator}function EN(e){return"function"==typeof e.next}async function GN(e,t,n){n=n||{};const s=null!=n.batches,a=e.testFunction;let r=[];if(n.verbose>0)throw new vk("Verbose mode is not implemented yet.");$(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i=EN(t)?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(r=Oi((()=>{if(t.value){const{xs:n,ys:s}=IN(e,t.value),i=n.concat(s),u=Oi((()=>a(i)));if(Ai(i),0===l)for(let e=0;e<u.length;++e)r.push(fd(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=r[e];r[e]=Oi((()=>xl(r[e],Tl(c,t)))),l>0&&Ai(n)}Ai(u),o+=c,++l}return r})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<r.length;++u){const e=r[u];r[u]=Il(r[u],o),Ai(e)}return Ck(r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MN(e){$(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function LN(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>NI(e,t,n-t))):NI(e,t,n-t)}function zN(e,t){return Oi((()=>null==e?null:Array.isArray(e)?e.map((e=>zN(e,t))):WI(e,"int32"===t.dtype?t:pl(t,"int32"))))}function WN(e,t){const n=[];let s=0,a=null;for(;s<e;)a=s+t,a>=e&&(a=e),n.push([s,a]),s=a;return n}function $N(e){const t=[];e instanceof Fr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(kI(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function FN(e,t){if(null==e)return;const n=[];if(t instanceof Fr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const a in t){const e=t[a];n.push(e.id)}const s=[];if(e instanceof Fr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const a in e){const t=e[a];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function VN(e){return e instanceof Fr}function ON(e){return Array.isArray(e)}function AN(e){return!VN(e)&&!ON(e)}function XN(e,t,n,s=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(ON(e)&&e.length>0)t=!0;else if(AN(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new wk(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let r;if(AN(e)){r=[];for(const n of t){if(null==e[n])throw new wk(`No data provided for "${n}". Need data for each key in: ${t}`);r.push(e[n])}}else if(ON(e)){if(e.length!==t.length)throw new wk(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);r=e}else{if(t.length>1)throw new wk(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);r=[e]}if(r=$N(r),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new wk(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!s)continue;const r=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&r!==o)throw new wk(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return r}function DN(e,t,n){const s=Vk(e.map((e=>e.shape[0])));s.sort();const a=Vk(t.map((e=>e.shape[0])));if(a.sort(),s.length>1)throw new wk(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new wk(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&a.length>0&&!D(s,a))throw new wk(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function ZN(e,t,n){const s=[yT,ET,NT];for(let a=0;a<e.length;++a){const r=e[a],i=t[a],o=n[a];if(null!=i){if(i===NT&&1===r.shape[r.shape.length-1])throw new wk(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=r.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],a=t[n];if(null!=a&&s!==a)throw new wk(`A target Tensor with shape ${r.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function KN(e,t,n,s=!0,a=""){let r;if(Array.isArray(e)){if(e.length!==t.length)throw new wk(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);r=e}else{if(t.length>1)throw new wk(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);r=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=r[i];if(e.shape.length!==n[i].length)throw new wk(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let r=0;r<n[i].length;++r){if(0===r&&!s)continue;const o=e.shape[r],l=n[i][r];if(null!=l&&l!==o)throw new wk(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function PN(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}const _N="layers-model";class BN extends bN{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new wk("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");iN(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=nN(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Kb))throw new wk("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new wk(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>WT(e)))}else{const n=WT(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new wk(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(WT(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let r=0;r<this.outputs.length;++r){const e=this.internalOutputShapes[r],t=this.outputNames[r];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[r])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],oI("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=PN(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};oI("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=s[e];(t=>{const n="";let s,r,i;for(const o of t){if("string"==typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===ET?-1!==["accuracy","acc"].indexOf(o)?r=$T:-1!==["crossentropy","ce"].indexOf(o)&&(r=ZT):this.lossFunctions[e]===CT?-1!==["accuracy","acc"].indexOf(o)?r=KT:-1!==["crossentropy","ce"].indexOf(o)&&(r=JT):-1!==["accuracy","acc"].indexOf(o)?r=FT:-1!==["crossentropy","ce"].indexOf(o)&&(r=jT),-1!==["accuracy","acc"].indexOf(o)?a="acc":-1!==["crossentropy","ce"].indexOf(o)&&(a="ce"),i=r,s=n+a}else i=eN(o),s=n+tN(o);let t;oI(s,(()=>{t=i})),a(e,s,t)}})(t)}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;MN(s);const a=this.standardizeUserDataXY(e,t,!0,s);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction,r=this.testLoop(t,e,s,n.verbose,n.steps);return Ck(r)}finally{FN(a[0],e),FN(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),GN(this,e,t)}checkNumSamples(e,t,n,s="steps"){let a;if(null!=n){if(a=null,null!=t)throw new wk(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new wk(`Either the input data should have a defined shape, or ${s} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new wk("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],a=this.retrieveSymbolicTensors(s),r=new OS;if(e instanceof Fr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new wk(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)r.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new wk(`No value is provided for the model's input ${o.name}`);r.add(o,t)}const i=ZS(a,r);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Sk(null,e.length);let n=e.length;for(const s of this.layers){const a=Array.isArray(s.output)?s.output:[s.output],r=a.map((e=>e.name));for(let s=0;s<e.length;++s){const i=r.indexOf(e[s]);if(-1!==i&&(t[s]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new wk(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Oi((()=>{const s=this.checkNumSamples(e);if(n)throw new vk("Verbose predictLoop() is not implemented yet.");const a=WN(s,t),r=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Oi((()=>{const n=a[t][0],s=a[t][1],r=LN(e,n,s),i=[];if(Array.isArray(r))for(let e=0;e<r.length;++e)i.push({key:this.inputs[e],value:r[e]});else i.push({key:this.inputs[0],value:r});const o=new OS(i);return ZS(this.outputs,o)})).forEach(((e,t)=>r[t].push(e)));return Ck(r.map((e=>ku(e,0))))}))}predict(e,t={}){const n=$N(e);KN(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return MN(e),this.predictLoop(n,e)}finally{FN(n,e)}}predictOnBatch(e){KN(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new xk("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===CT?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(e=XN(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=XN(t,this.feedOutputNames,a,!1,"target"),DN(e,t),ZN(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!==0)throw new wk(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,a=!0,r){const[i,o]=this.standardizeUserDataXY(e,t,a,r);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=xN(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await wN(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,a){return Oi((()=>{const r=this.checkNumSamples(t,n,a,"steps"),i=[];if(s>0)throw new vk("Verbose mode is not implemented yet.");if(null!=a)throw new vk("steps mode in testLoop() is not implemented yet");{const s=WN(r,n),a=tf(bI(0,r));for(let n=0;n<s.length;++n){const r=s[n][0],o=s[n][1],l=NI(a,r,o-r),u=zN(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(fd(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=xl(i[e],Tl(o-r,t))}}for(let e=0;e<i.length;++e)i[e]=Il(i[e],r)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let a=s;if(Nk(e,s)>1){const t=Nk(e.slice(0,n),s);a+=`_${t}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),r=[],i=()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new OS(e),o=ZS(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){const e=this.lossFunctions[n];let r=e(s[n],o[n]);null!=a[n]&&(r=vN(r,a[n]));const i=_h(r);t.push(i),l=0===n?r:xl(l,r)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],a=this.metricsTensors[n][1];e=_h(t(s[a],o[a]))}Xi(e),r.push(e)}return l=_h(l),this.calculateLosses().forEach((e=>{l=xl(l,e)})),l},o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize(i,!0,o)].concat(r)}}makeTestFunction(){this.testFunction=e=>Oi((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=[];for(let e=0;e<this.inputs.length;++e)r.push({key:this.inputs[e],value:s[e]});const i=new OS(r),o=ZS(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],r=_h(s(a[e],o[e]));n=0===e?r:xl(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],r=_h(n(a[s],o[s]));t.push(r)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,r,i,o,l,u,c,d;this.isTraining=!0;try{const h=null==n.batchSize?32:n.batchSize;MN(h);const p=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,h);s=p[0],a=p[1],d=p[2];let m,f=!1;if(null!=n.validationData&&n.validationData.length>0){if(f=!0,2!==n.validationData.length)throw 3===n.validationData.length?new vk("validationData including sample weights is not supported yet."):new wk(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=await this.standardizeUserData(o,l,null,null,!0,h);u=e[0],c=e[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){f=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];u=LN(s,e,t),r=s,s=LN(s,0,e),c=LN(a,e,t),i=a,a=LN(a,0,e),m=u.concat(c)}else null!=n.validationSteps&&(f=!0);const g=s.concat(a).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let x,w;f?(this.makeTestFunction(),x=this.testFunction,w=y.slice().concat(y.map((e=>"val_"+e)))):(x=null,m=[],w=y.slice());const v=pT(n.callbacks,n.yieldEvery);return await this.fitLoop(b,g,y,h,n.epochs,n.verbose,v,x,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,FN(s,e),FN(a,t),FN(r,e),FN(i,t),FN(u,o),FN(c,l),null!=d&&Ai(d)}}async fitLoop(e,t,n,s,a,r,i,o,l,u,c,d,h,p){null==s&&(s=32),null==a&&(a=1),null==u&&(u=!0),null==d&&(d=0);let m=!1;if(null!=o&&null!=l&&(m=!0),null!=p&&(m=!0,null==h))throw new wk("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const f=this.checkNumSamples(t,s,h,"steps_per_epoch");let g;null!=f&&(g=bI(0,f)),null==r&&(r=1);const{callbackList:b,history:y}=fT(i,r,a,d,f,h,s,m,c);b.setModel(this),this.history=y,await b.onTrainBegin(),this.stopTraining_=!1;for(let x=d;x<a;++x){await b.onEpochBegin(x);const a={};if(null!=h)throw new vk("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new vk("batch shuffling is not implemneted yet");u&&C(g);const r=tf(g),i=WN(f,s);for(let u=0;u<i.length;++u){const c={};if(await b.onBatchBegin(u,c),Oi((()=>{const d=i[u][0],h=i[u][1],p=NI(r,d,h-d);c.batch=u,c.size=h-d;const f=zN(t,p),g=e(f);for(let e=0;e<n.length;++e){const t=n[e],s=g[e];c[t]=s,Xi(s)}if(u===i.length-1&&m){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],r=e[t];Xi(r),a["val_"+s]=r}}})),await b.onBatchEnd(u,c),rT(c),this.stopTraining_)break}r.dispose()}if(await b.onEpochEnd(x,a),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return NN(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],a=n[1],r=this.makeTrainFunction()(s.concat(a)),i=[];for(const o of r){const e=await o.data();i.push(e[0])}return Ai(r),FN(n[0],e),FN(n[1],t),Ck(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let r=0;r<s.length;++r)n&&!s[r].trainable||t.push({name:s[r].originalName,tensor:a[r]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Fi().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Fi().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ek(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ek(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=Ek(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ek(tN(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ek(tN(e))));{const e={};for(const t in this.metrics)e[t]=Ek(tN(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=pN(e.optimizer_config),n=gT(t);let s,a;if("string"==typeof e.loss)s=Gk(e.loss);else if(Array.isArray(e.loss))s=e.loss.map((e=>Gk(e)));else if(null!=e.loss){s={};for(const t in e.loss)s[t]=Gk(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Gk(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Gk(e.metrics[t])}this.compile({loss:s,metrics:a,optimizer:n})}async save(e,t){if("string"==typeof e){const t=To(e);if(0===t.length)throw new wk(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new wk(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new wk("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ji(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:_N,generatedBy:`TensorFlow.js tfjs-layers v${fN}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Ji(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=co([n.data,t])}return null!=this.userDefinedMetadata&&(aN(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){aN(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}BN.className="Model",Xb(BN);class HN extends BN{}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function UN(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const s=pN(n),a=gT(s,t);if(null!=e.weightsManifest){const t=await ny(e.weightsManifest,e.pathPrefix,a.weights.map((e=>e.originalName))),n={};for(const e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),Ai(t)}return a}async function YN(e,t){if(null==t&&(t={}),"string"==typeof e){const n=No(e,t);if(0===n.length)n.push(dy(e,t));else if(n.length>1)throw new wk(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return jN(e,void 0,t)}async function jN(e,t,n){if(null==n&&(n={}),null==e.load)throw new wk("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let a=s.modelTopology;null!=a.model_config&&(a=a.model_config);const r=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&r,o=gT(pN(a),t,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new wk("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=QN(s.weightData,s.weightSpecs);o.loadWeights(e,r),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Ai(e),Ai(t.map((e=>e.tensor)))}return o}function QN(e,t){const n=qi(e,t),s={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:a}}HN.className="Functional",Xb(HN);class JN extends BN{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Uk("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new wk(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof JN||e instanceof BN;let n;if(t){if(n=e,1!==n.outputs.length)throw new wk("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new wk("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new wk("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=FS({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new wk(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new wk("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=LS(this.outputs[0])}this.inboundNodes=[],new CS({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Sk(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(bS(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new BN({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new xk("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new xk("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new xk("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new xk("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new wk("Legacy serialization format not supported yet.");a=t}else $(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,r=t;const i=new e(r);if(!(i instanceof JN))throw new vk(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const o of a){const e=gT(o,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new wk("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new wk("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}JN.className="Sequential",Xb(JN);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let qN=class extends Ob{getConfig(){return{}}};class eC extends qN{apply(e,t=1){return OI(e,t)}}eC.className="elu",Xb(eC);class tC extends qN{apply(e){return mm(e)}}tC.className="selu",Xb(tC);class nC extends qN{apply(e){return am(e)}}nC.className="relu",Xb(nC);class sC extends qN{apply(e){return Oi((()=>Yh(6,am(e))))}}sC.className="relu6",Xb(sC);class aC extends qN{apply(e){return e}}aC.className="linear",Xb(aC);class rC extends qN{apply(e){return Nu(e)}}rC.className="sigmoid",Xb(rC);class iC extends qN{apply(e){return DI(e)}}iC.className="hardSigmoid",Xb(iC);class oC extends qN{apply(e){return vh(e)}}oC.className="softplus",Xb(oC);class lC extends qN{apply(e){return AI(e)}}lC.className="softsign",Xb(lC);class uC extends qN{apply(e){return Gu(e)}}uC.className="tanh",Xb(uC);let cC=class extends qN{apply(e,t=-1){return Lm(e,t)}};cC.className="softmax",Xb(cC);class dC extends qN{apply(e,t=-1){return Ch(e,t)}}dC.className="logSoftmax",Xb(dC);class hC extends qN{apply(e,t=1){return Oi((()=>Tl(Nu(Tl(e,t)),e)))}}hC.className="swish",Xb(hC);class pC extends qN{apply(e){return Oi((()=>Tl(e,Gu(vh(e)))))}}function mC(e){return e.getClassName()}function fC(e,t={}){return Wk(e,Ab.getMap().classNameMap,t,"activation")}function gC(e){if(null==e){const e={className:"linear",config:{}};return fC(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},fC(t)}return e instanceof qN?e:fC(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bC(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}pC.className="mish",Xb(pC);class yC extends Ob{}class xC extends yC{constructor(e){super(),bC(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Oi((()=>{let t=Bh([1]);return this.hasL1&&(t=xl(t,vd(Tl(this.l1,Cl(e))))),this.hasL2&&(t=xl(t,vd(Tl(this.l2,$I(e))))),gu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}function wC(e){return bC(e),new xC({l1:null!=e?e.l1:null,l2:0})}function vC(e){return bC(e),new xC({l2:null!=e?e.l2:null,l1:0})}xC.className="L1L2",Xb(xC);const kC={l1l2:"L1L2"};function IC(e){return Lk(e)}function SC(e,t={}){return Wk(e,Ab.getMap().classNameMap,t,"regularizer")}function TC(e){if(null==e)return null;if("string"==typeof e){const t={className:e in kC?kC[e]:e,config:{}};return SC(t)}return e instanceof yC?e:SC(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class NC extends ES{constructor(e){super(e??{}),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=gS(e);let n=am(e);return null!=this.maxValue&&(n=ju(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}NC.className="ReLU",Xb(NC);class CC extends ES{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=gS(e);return eh(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}CC.className="LeakyReLU",Xb(CC);class RC extends ES{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=pS(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=TC(e.alphaRegularizer),this.alphaConstraint=sT(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new wk(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=bS(e);const t=e.slice(1);if(null!=this.sharedAxes)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new SS({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=gS(e),bp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:hS(this.alphaInitializer),alphaRegularizer:IC(this.alphaRegularizer),alphaConstraint:tT(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}RC.className="PReLU",Xb(RC);let EC=class extends ES{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new vk(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=gS(e);return Jc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};EC.className="ELU",Xb(EC);class GC extends ES{constructor(e){super(e??{}),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=gS(e);return Tl(n,pl(Zd(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}GC.className="ThresholdedReLU",Xb(GC);class MC extends ES{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new cC).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Oi((()=>{let n=gS(e);const s=t.mask;if(null!=s){const e=Tl(Th(Hh(n.shape),pl(s,n.dtype)),fd(-1e9));n=xl(n,e)}return this.axis instanceof Array?this.axis.length>1?Rd(Th(n,Eh(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function LC(e,t,n){if("number"==typeof e)return Sk(e,t);if(e.length!==t)throw new wk(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if(!pI(a))throw new wk(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function zC(e,t,n,s,a=1){if(null==e)return e;const r=t+(t-1)*(a-1);let i;return i="same"===n?e:e-r+1,Math.floor((i+s-1)/s)}function WC(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+gI([n-t,0]);else{if("same"!==s)throw new wk(`Unsupport padding mode: ${s}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $C(e,t){return Oi((()=>(tI(t),"channelsFirst"===t?kf(e,[0,2,3,1]):e)))}function FC(e,t){return Oi((()=>(tI(t),"channelsFirst"===t?kf(e,[0,2,3,4,1]):e)))}function VC(e,t,n,s=1,a="valid",r,i=1){return Oi((()=>{if(null==r&&(r=wI()),tI(r),3!==e.shape.length)throw new wk(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new wk(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new wk(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===r&&(e=kf(e,[0,2,1])),"causal"===a)throw new vk("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=lc(e,t,s,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=VI(o,n)),o}))}function OC(e,t,n,s=[1,1],a="valid",r,i,o=null){return Oi((()=>{if(null==r&&(r=wI()),tI(r),3!==e.rank&&4!==e.rank)throw new wk(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new wk(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=$C(e,r);if("causal"===a)throw new vk("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=$f({x:l,filter:t,strides:s,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===r&&(l=kf(l,[0,3,1,2])),l}))}function AC(e,t,n,s=[1,1,1],a="valid",r,i){return Oi((()=>{if(null==r&&(r=wI()),tI(r),4!==e.rank&&5!==e.rank)throw new wk(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new wk(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=FC(e,r);if("causal"===a)throw new vk("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=mc(o,t,s,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=VI(o,n)),"channelsFirst"===r&&(o=kf(o,[0,4,1,2,3])),o}))}MC.className="Softmax",Xb(MC);class XC extends ES{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",XC.verifyArgs(t),this.rank=e,Dk(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new vk(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=LC(t.kernelSize,e,"kernelSize"),this.strides=LC(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,sI(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tI(this.dataFormat),this.activation=gC(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=pS(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=sT(t.biasConstraint),this.biasRegularizer=TC(t.biasRegularizer),this.activityRegularizer=TC(t.activityRegularizer),this.dilationRate=LC(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new wk(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new wk(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new wk(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Tk("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Xk(e.kernelSize,"number",1,3))throw new wk(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:mC(this.activation),useBias:this.useBias,biasInitializer:hS(this.biasInitializer),biasRegularizer:IC(this.biasRegularizer),activityRegularizer:IC(this.activityRegularizer),biasConstraint:tT(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class DC extends XC{constructor(e,t){super(e,t),this.kernel=null,DC.verifyArgs(t),this.filters=t.filters,Dk(this.filters,"filters"),this.kernelInitializer=pS(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=sT(t.kernelConstraint),this.kernelRegularizer=TC(t.kernelRegularizer)}build(e){e=bS(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wk(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Oi((()=>{let t;e=gS(e);const n=null==this.bias?null:this.bias.read(),s=Pk(this.activation.getClassName());if(null!=s&&2===this.rank)t=OC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=VC(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=OC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new vk("convolutions greater than 3D are not implemented yet.");t=AC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=bS(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){const e=zC(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);t.push(e)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:hS(this.kernelInitializer),kernelRegularizer:IC(this.kernelRegularizer),kernelConstraint:tT(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new wk(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ZC extends DC{constructor(e){super(2,e),ZC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xk(e.kernelSize,"number",1,2))throw new wk(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ZC.className="Conv2D",Xb(ZC);class KC extends DC{constructor(e){super(3,e),KC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new wk(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}KC.className="Conv3D",Xb(KC);class PC extends ZC{constructor(e){if(super(e),this.inputSpec=[new SS({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new wk(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=bS(e),4!==e.length)throw new wk("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wk("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new SS({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Oi((()=>{let t=gS(e);if(4!==t.shape.length)throw new wk(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let a,r;"channelsFirst"===this.dataFormat?(a=2,r=3):(a=1,r=2);const i=n[a],o=n[r],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],d=this.strides[1],h=WC(i,c,l,this.padding),p=WC(o,d,u,this.padding),m=[s,h,p,this.filters];"channelsLast"!==this.dataFormat&&(t=kf(t,[0,2,3,1]));let f=hc(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=kf(f,[0,3,1,2])),null!=this.bias&&(f=VI(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){e=bS(e);const t=e.slice();let n,s,a;"channelsFirst"===this.dataFormat?(n=1,s=2,a=3):(n=3,s=1,a=2);const r=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=WC(t[s],o,r,this.padding),t[a]=WC(t[a],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}PC.className="Conv2DTranspose",Xb(PC);class _C extends KC{constructor(e){if(super(e),this.inputSpec=[new SS({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new wk(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=bS(e),5!==e.length)throw new wk("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new wk("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new SS({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Oi((()=>{let t=gS(e);if(5!==t.shape.length)throw new wk(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let a,r,i;"channelsFirst"===this.dataFormat?(i=2,a=3,r=4):(i=1,a=2,r=3);const o=n[i],l=n[a],u=n[r],c=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],m=this.strides[1],f=this.strides[2],g=WC(o,p,c,this.padding),b=WC(l,m,d,this.padding),y=WC(u,f,h,this.padding),x=[s,g,b,y,this.filters];"channelsLast"!==this.dataFormat&&(t=kf(t,[0,2,3,4,1]));let w=yc(t,this.kernel.read(),x,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(w=kf(w,[0,4,1,2,3])),null!==this.bias&&(w=VI(w,this.bias.read(),this.dataFormat)),null!==this.activation&&(w=this.activation.apply(w)),w}))}computeOutputShape(e){e=bS(e);const t=e.slice();let n,s,a,r;"channelsFirst"===this.dataFormat?(n=1,s=2,a=3,r=4):(n=4,s=1,a=2,r=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[s]=WC(t[s],u,i,this.padding),t[a]=WC(t[a],c,o,this.padding),t[r]=WC(t[r],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}_C.className="Conv3DTranspose",Xb(_C);class BC extends DC{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new wk("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new wk("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new wk(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=pS(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=TC(t.depthwiseRegularizer),this.depthwiseConstraint=sT(t.depthwiseConstraint),this.pointwiseInitializer=pS(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=TC(t.pointwiseRegularizer),this.pointwiseConstraint=sT(t.pointwiseConstraint)}build(e){if(e=bS(e),e.length<this.rank+2)throw new wk(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new wk(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);const r=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,r,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,r,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,r,this.biasConstraint):this.bias=null,this.inputSpec=[new SS({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Oi((()=>{let t;if(e=gS(e),1===this.rank)throw new vk("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=kf(e,[0,2,3,1])),t=gm(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=VI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=kf(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=hS(this.depthwiseInitializer),e.pointwiseInitializer=hS(this.pointwiseInitializer),e.depthwiseRegularizer=IC(this.depthwiseRegularizer),e.pointwiseRegularizer=IC(this.pointwiseRegularizer),e.depthwiseConstraint=tT(this.depthwiseConstraint),e.pointwiseConstraint=tT(this.pointwiseConstraint),e}}BC.className="SeparableConv";class HC extends BC{constructor(e){super(2,e)}}HC.className="SeparableConv2D",Xb(HC);class UC extends DC{constructor(e){super(1,e),UC.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xk(e.kernelSize,"number",1,1))throw new wk(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}UC.className="Conv1D",Xb(UC);class YC extends ES{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Oi((()=>{if(e=gS(e),"channelsLast"===this.dataFormat){const t=RI(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return RI(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=RI(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return RI(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}YC.className="Cropping2D",Xb(YC);class jC extends ES{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tI(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,nI(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Oi((()=>{let t=gS(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=kf(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],a="nearest"===this.interpolation?Mb.resizeNearestNeighbor(t,[e,s]):Mb.resizeBilinear(t,[e,s]);return kf(a,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Mb.resizeNearestNeighbor(t,[e,s]):Mb.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function QC(e,t,n=[1,1],s="valid",a,r){return Oi((()=>{null==a&&(a=wI()),tI(a);let i=$C(e,a);if(4!==e.rank)throw new wk(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new wk(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Lc(i,t,n,"same"===s?"same":"valid","NHWC",r),"channelsFirst"===a&&(i=kf(i,[0,3,1,2])),i}))}jC.className="UpSampling2D",Xb(jC);class JC extends XC{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=pS(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=sT(e.depthwiseConstraint),this.depthwiseRegularizer=TC(e.depthwiseRegularizer)}build(e){if(e=bS(e),e.length<4)throw new wk(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new wk(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Oi((()=>{e=gS(e);let t=QC(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=VI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=bS(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=zC(t,this.kernelSize[0],this.padding,this.strides[0]),r=zC(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,a,r]:[e[0],a,r,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=hS(this.depthwiseInitializer),e.depthwiseRegularizer=IC(this.depthwiseRegularizer),e.depthwiseConstraint=tT(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function qC(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new wk("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function eR(e,t,n,s=!1,a,r,i=!1,o=!1){return Oi((()=>{const l=t.shape.length;if(l<3)throw new wk(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(bI(2,l));if(t=kf(t,u),null!=r)throw new vk("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&(a=pl(pl(a,"bool"),"float32"),a.rank===l-1&&(a=Gd(a,-1)),a=kf(a,u)),s&&(t=lm(t,0),null!=a&&(a=lm(a,0)));const c=[];let d,h=n;const p=t.shape[0],m=yf(t);let f,g;null!=a&&(f=yf(a));for(let t=0;t<p;++t){const n=m[t],s=Oi((()=>e(n,h)));if(null==a)d=s[0],h=s[1];else{const e=Oi((()=>{const e=f[t],n=Th(op(e),e),a=xl(Tl(s[0],e),Tl(h[0],n)),r=h.map(((t,a)=>xl(Tl(s[1][a],e),Tl(t,n))));return{output:a,newStates:r}}));d=e.output,h=e.newStates}o&&c.push(d)}return o&&(g=Um(c,1)),[d,g,h]}))}JC.className="DepthwiseConv2D",Xb(JC);class tR extends ES{constructor(e){let t;if(super(e),null==e.cell)throw new wk("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new uR({cells:e.cell}):e.cell,null==t.stateSize)throw new wk("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new SS({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return bI(0,e).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){mS(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Oi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new vk("Constants support is not implemented in RNN yet.");mS(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new SS({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!D(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new wk(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new SS({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Oi((()=>{if(!this.stateful)throw new yk("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new wk("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Bh([n,e]))):this.states_=[Bh([n,this.cell.stateSize])];else if(null==e)Ai(this.states_),null!=this.keptStates&&(Ai(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Bh([n,e]))):this.states_[0]=Bh([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new wk(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Ai(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,r=[n,a];if(!D(s.shape,r))throw new wk(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>Xi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const a=qC(e,n,s,this.numConstants);e=a.inputs,n=a.initialState,s=a.constants;let r=[],i=[];if(null!=n){t.initialState=n,r=r.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new SS({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,r=r.concat(s),this.numConstants=s.length),r[0]instanceof TS){const n=[e].concat(r),s=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Oi((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let a=null==t?null:t.initialState;e=gS(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==r)throw new wk(`RNN Layer has ${r} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=eR(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const d=this.returnSequences?u:l;return this.returnState?[d].concat(c):d}))}getInitialState(e){return Oi((()=>{let t=Bh(e.shape);return t=vd(t,[1,2]),t=kI(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?MI(t,[1,e]):t)):this.cell.stateSize>1?[MI(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===tR.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=t.cell,a=gT(s,n);return new e(Object.assign(t,{cell:a}))}}tR.className="RNN",Xb(tR);class nR extends ES{}class sR extends nR{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dk(this.units,"units"),this.activation=gC(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=pS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pS(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=TC(e.kernelRegularizer),this.recurrentRegularizer=TC(e.recurrentRegularizer),this.biasRegularizer=TC(e.biasRegularizer),this.kernelConstraint=sT(e.kernelConstraint),this.recurrentConstraint=sT(e.recurrentConstraint),this.biasConstraint=sT(e.biasConstraint),this.dropout=fI([1,gI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=fI([1,gI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=bS(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Oi((()=>{if(2!==e.length)throw new wk(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cR({ones:()=>op(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cR({ones:()=>op(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;a=zI(null!=r?Tl(e,r):e,this.kernel.read()),null!=this.bias&&(a=VI(a,this.bias.read())),null!=i&&(n=Tl(n,i));let o=xl(a,zI(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:mC(this.activation),useBias:this.useBias,kernelInitializer:hS(this.kernelInitializer),recurrentInitializer:hS(this.recurrentInitializer),biasInitializer:hS(this.biasInitializer),kernelRegularizer:IC(this.kernelRegularizer),recurrentRegularizer:IC(this.recurrentRegularizer),biasRegularizer:IC(this.biasRegularizer),activityRegularizer:IC(this.activityRegularizer),kernelConstraint:tT(this.kernelConstraint),recurrentConstraint:tT(this.recurrentConstraint),biasConstraint:tT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}sR.className="SimpleRNNCell",Xb(sR);class aR extends tR{constructor(e){e.cell=new sR(e),super(e)}call(e,t){return Oi((()=>{null!=this.cell.dropoutMask&&(Ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return new e(t)}}aR.className="SimpleRNN",Xb(aR);class rR extends nR{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new wk("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Dk(this.units,"units"),this.activation=gC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=pS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pS(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=TC(e.kernelRegularizer),this.recurrentRegularizer=TC(e.recurrentRegularizer),this.biasRegularizer=TC(e.biasRegularizer),this.kernelConstraint=sT(e.kernelConstraint),this.recurrentConstraint=sT(e.recurrentConstraint),this.biasConstraint=sT(e.biasConstraint),this.dropout=fI([1,gI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=fI([1,gI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=bS(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Oi((()=>{if(2!==e.length)throw new wk(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cR({ones:()=>op(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cR({ones:()=>op(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,r=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Tl(e,a[0]));let u=zI(e,this.kernel.read());this.useBias&&(u=VI(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Tl(s,r[0]));const c=this.recurrentKernel.read(),[d,h]=Xm(c,[2*this.units,this.units],c.rank-1),p=zI(s,d),[m,f,g]=Xm(u,3,u.rank-1),[b,y]=Xm(p,2,p.rank-1);i=this.recurrentActivation.apply(xl(m,b)),o=this.recurrentActivation.apply(xl(f,y));const x=zI(Tl(o,s),h);l=this.activation.apply(xl(g,x));const w=xl(Tl(i,s),Tl(xl(1,xh(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:mC(this.activation),recurrentActivation:mC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:hS(this.kernelInitializer),recurrentInitializer:hS(this.recurrentInitializer),biasInitializer:hS(this.biasInitializer),kernelRegularizer:IC(this.kernelRegularizer),recurrentRegularizer:IC(this.recurrentRegularizer),biasRegularizer:IC(this.biasRegularizer),activityRegularizer:IC(this.activityRegularizer),kernelConstraint:tT(this.kernelConstraint),recurrentConstraint:tT(this.recurrentConstraint),biasConstraint:tT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}rR.className="GRUCell",Xb(rR);class iR extends tR{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rR(e),super(e)}call(e,t){return Oi((()=>{null!=this.cell.dropoutMask&&(Ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}iR.className="GRU",Xb(iR);class oR extends nR{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Dk(this.units,"units"),this.activation=gC(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gC(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=pS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pS(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=TC(e.kernelRegularizer),this.recurrentRegularizer=TC(e.recurrentRegularizer),this.biasRegularizer=TC(e.biasRegularizer),this.kernelConstraint=sT(e.kernelConstraint),this.recurrentConstraint=sT(e.recurrentConstraint),this.biasConstraint=sT(e.biasConstraint),this.dropout=fI([1,gI([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=fI([1,gI([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=bS(e);const n=e[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new(t=class extends HI{apply(t,s){const a=e.apply([n]),r=(new YI).apply([n]),i=e.apply([2*n]);return GI(GI(a,r),i)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Oi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new wk(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cR({ones:()=>op(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cR({ones:()=>op(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Tl(e,r[0]));let d=zI(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Tl(s,i[0])),d=xl(d,zI(s,this.recurrentKernel.read())),this.useBias&&(d=VI(d,this.bias.read()));const[h,p,m,f]=Xm(d,4,d.rank-1);o=this.recurrentActivation.apply(h),l=this.recurrentActivation.apply(p),u=xl(Tl(l,a),Tl(o,this.activation.apply(m))),c=this.recurrentActivation.apply(f);const g=Tl(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:mC(this.activation),recurrentActivation:mC(this.recurrentActivation),useBias:this.useBias,kernelInitializer:hS(this.kernelInitializer),recurrentInitializer:hS(this.recurrentInitializer),biasInitializer:hS(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:IC(this.kernelRegularizer),recurrentRegularizer:IC(this.recurrentRegularizer),biasRegularizer:IC(this.biasRegularizer),activityRegularizer:IC(this.activityRegularizer),kernelConstraint:tT(this.kernelConstraint),recurrentConstraint:tT(this.recurrentConstraint),biasConstraint:tT(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}oR.className="LSTMCell",Xb(oR);class lR extends tR{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new oR(e),super(e)}call(e,t){return Oi((()=>{null!=this.cell.dropoutMask&&(Ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}lR.className="LSTM",Xb(lR);class uR extends nR{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Oi((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const a=[];let r;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],r=0===i?[e[0]].concat(n):[r[0]].concat(n),r=o.call(r,t),a.push(r.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[r[0]].concat(n)}))}build(e){let t;mS(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{oI(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){const s=[];for(const a of t.cells)s.push(gT(a,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return kS(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,a=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}IS(t)}}function cR(e){const{ones:t,rate:n,training:s=!1,count:a=1,dropoutFunc:r}=e,i=()=>null!=r?r(t(),n):XI(t(),n),o=()=>ZI(i,t,s);return!a||a<=1?Xi(o().clone()):Array(a).fill(void 0).map(o).map((e=>Xi(e.clone())))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */uR.className="StackedRNNCells",Xb(uR);var dR=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(s=Object.getOwnPropertySymbols(e);a<s.length;a++)t.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(e,s[a])&&(n[s[a]]=e[s[a]])}return n};class hR extends tR{constructor(e){if(e.unroll)throw new vk("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new vk("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new SS({ndim:5})]}call(e,t){return Oi((()=>{if(null!=this.cell.dropoutMask&&(Ai(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ai(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new wk("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Oi((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)],r=Bh(a);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){Oi((()=>{if(!this.stateful)throw new yk("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new wk("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bh(a))):this.states_=[Bh(a)];else if(null==e)Ai(this.states_),null!=this.keptStates&&(Ai(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Bh(a))):this.states_[0]=Bh(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new wk(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ai(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!D(n.shape,s))throw new wk(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Xi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:a,strides:r,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=zC(l,s[0],a,r[0],i[0]),d=zC(u,s[1],a,r[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}hR.className="ConvRNN2D";class pR extends oR{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:a,dataFormat:r,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Dk(this.filters,"filters"),this.kernelSize=LC(n,2,"kernelSize"),this.kernelSize.forEach((e=>Dk(e,"kernelSize"))),this.strides=LC(s||1,2,"strides"),this.strides.forEach((e=>Dk(e,"strides"))),this.padding=a||"valid",sI(this.padding),this.dataFormat=r||"channelsLast",tI(this.dataFormat),this.dilationRate=LC(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Dk(e,"dilationRate")))}build(e){var t;e=bS(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new wk(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],a=4,r=this.kernelSize.concat([s,this.filters*a]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new(t=class extends HI{apply(e,t){const a=n.apply([s]),r=Hh([s]),i=n.apply([2*s]);return EI([a,r,i])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Oi((()=>{if(3!==e.length)throw new wk(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],a=e[1],r=e[2],i=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=cR({ones:()=>op(s),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?Tl(t[n],e):e;let u=l(s,o,0),c=l(s,o,1),d=l(s,o,2),h=l(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=cR({ones:()=>op(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let m=l(a,p,0),f=l(a,p,1),g=l(a,p,2),b=l(a,p,3);const y=3,[x,w,v,k]=Xm(this.kernel.read(),i,y),[I,S,T,N]=this.useBias?Xm(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,x,I,this.padding),c=this.inputConv(c,w,S,this.padding),d=this.inputConv(d,v,T,this.padding),h=this.inputConv(h,k,N,this.padding);const[C,R,E,G]=Xm(this.recurrentKernel.read(),i,y);m=this.recurrentConv(m,C),f=this.recurrentConv(f,R),g=this.recurrentConv(g,E),b=this.recurrentConv(b,G);const M=this.recurrentActivation.apply(xl(u,m)),L=this.recurrentActivation.apply(xl(c,f)),z=xl(Tl(L,r),Tl(M,this.activation.apply(xl(d,g)))),W=Tl(this.recurrentActivation.apply(xl(h,b)),this.activation.apply(z));return[W,W,z]}))}getConfig(){const e=super.getConfig(),t=dR(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,s){const a=ic(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?VI(a,n,this.dataFormat):a}recurrentConv(e,t){return ic(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}pR.className="ConvLSTM2DCell",Xb(pR);class mR extends hR{constructor(e){const t=new pR(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}mR.className="ConvLSTM2D",Xb(mR);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class fR extends ES{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(null==this.noiseShape[s]?t[s]:this.noiseShape[s]);return n}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);const n=gS(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return ZI((()=>XI(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}fR.className="Dropout",Xb(fR);class gR extends fR{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}gR.className="SpatialDropout1D",Xb(gR);class bR extends ES{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Dk(this.units,"units"),this.activation=gC(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=pS(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=pS(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=sT(e.kernelConstraint),this.biasConstraint=sT(e.biasConstraint),this.kernelRegularizer=TC(e.kernelRegularizer),this.biasRegularizer=TC(e.biasRegularizer),this.activityRegularizer=TC(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=bS(e);const t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=bS(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);const n=gS(e),s=Pk(this.activation.getClassName());let a;return null!=s?a=zI(n,this.kernel.read(),s,this.bias?this.bias.read():null):(a=zI(n,this.kernel.read()),null!=this.bias&&(a=VI(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:mC(this.activation),useBias:this.useBias,kernelInitializer:hS(this.kernelInitializer),biasInitializer:hS(this.biasInitializer),kernelRegularizer:IC(this.kernelRegularizer),biasRegularizer:IC(this.biasRegularizer),activityRegularizer:IC(this.activityRegularizer),kernelConstraint:tT(this.kernelConstraint),biasConstraint:tT(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bR.className="Dense",Xb(bR);class yR extends ES{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=bS(e);for(const t of e.slice(1))if(null==t)throw new wk(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],mI(e,1)]}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);let n=gS(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=kf(n,e)}return TI(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}yR.className="Flatten",Xb(yR);class xR extends ES{constructor(e){super(e),this.supportsMasking=!0,this.activation=gC(e.activation)}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);const n=gS(e);return this.activation.apply(n)}))}getConfig(){const e={activation:mC(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}xR.className="Activation",Xb(xR);class wR extends ES{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Oi((()=>(e=gS(e),II(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}wR.className="RepeatVector",Xb(wR);class vR extends ES{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let a=1,r=null;for(let o=0;o<s.length;++o){const e=s[o];if(this.isUnknown(e)){if(null!==r)throw new wk("Can only specifiy one unknown dimension.");r=o}else a*=e}const i=mI(e);if(null!==r){if(0===a||i%a!==0)throw new wk(n);s[r]=i/a}else if(i!==a)throw new wk(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);const n=gS(e),s=n.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return gu(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}vR.className="Reshape",Xb(vR);class kR extends ES{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=bI(1,e.dims.length+1);if(!D(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new SS({ndim:this.dims.length+1})]}computeOutputShape(e){e=bS(e);const t=e.slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return kf(gS(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}kR.className="Permute",Xb(kR);class IR extends ES{constructor(e){super(e??{}),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=gS(e);return $l(sp(n,this.maskValue),-1)}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);const n=gS(e),s=$l(sp(n,this.maskValue),-1,!0);return Tl(n,pl(s,n.dtype))}))}}IR.className="Masking",Xb(IR);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class SR extends ES{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Rk(e.inputLength))}this.inputDim=e.inputDim,Dk(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Dk(this.outputDim,"outputDim"),this.embeddingsInitializer=pS(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=TC(e.embeddingsRegularizer),this.activityRegularizer=TC(e.activityRegularizer),this.embeddingsConstraint=sT(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Oi((()=>this.maskZero?(e=gS(e),sp(e,Pc(e))):null))}computeOutputShape(e){if(e=bS(e),null==this.inputLength)return[...e,this.outputDim];const t=Rk(this.inputLength);if(t.length!==e.length-1)throw new wk(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const a=t[s],r=e[s+1];if(null!=a&&null!=r&&a!==r)throw new wk(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=r),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);let n=gS(e);"int32"!==n.dtype&&(n=vI(n,"int32"));const s=WI(this.embeddings.read(),gu(n,[n.size]));return gu(s,bS(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:hS(this.embeddingsInitializer),embeddingsRegularizer:IC(this.embeddingsRegularizer),activityRegularizer:IC(this.activityRegularizer),embeddingsConstraint:tT(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}SR.className="Embedding",Xb(SR);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class TR extends ES{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new vk}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const a=e[e.length-t.length+s],r=t[s];if(null==a||null==r||a<0||r<0)n.push(null);else if(1===a)n.push(r);else if(1===r)n.push(a);else{if(a!==r)throw new wk("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[bS(e)]),e.length<2)throw new wk(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const a of e)null!=a&&null!==a[0]&&t.push(a[0]);if(t=Vk(t),t.length>1)throw new wk(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const t=null==e[a]?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Vk(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Oi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=gI(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=kI(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=gu(r,[s].concat(mI(e.slice(1))));i=kf(i,[1,0]),i=gu(i,a),t.push(i),n=!0}else if(e>1){const s=bI(1,e).concat([0]);t.push(kf(r,s)),n=!0}else t.push(r)}let s=this.mergeFunction(t);const a=s.rank;if(n)if(null==a){const e=s.shape,t=e.length,n=e[t-1],a=[n].concat(e.slice(0,e.length-1));s=gu(kf(gu(s,[-1,n]),[1,0]),a)}else if(a>1){const e=[a-1].concat(bI(0,a-1));s=kf(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const n=null==e[s]?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const s of e)null!=s&&null!==s[0]&&n.push(s[0]);return n=Vk(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Oi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new wk("`mask` should be an Array");if(!Array.isArray(e))throw new wk("`inputs` should be an Array");if(t.length!==e.length)throw new wk(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:Gd(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=Mh(n,t[e]);return n}))}}class NR extends TR{constructor(e){super(e)}mergeFunction(e){return Oi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=xl(t,e[n]);return t}))}}NR.className="Add",Xb(NR);class CR extends TR{constructor(e){super(e)}mergeFunction(e){return Oi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Tl(t,e[n]);return t}))}}CR.className="Multiply",Xb(CR);class RR extends TR{constructor(e){super(e)}mergeFunction(e){return Oi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=xl(t,e[n]);return Tl(1/e.length,t)}))}}RR.className="Average",Xb(RR);class ER extends TR{constructor(e){super(e)}mergeFunction(e){return Oi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Kh(t,e[n]);return t}))}}ER.className="Maximum",Xb(ER);class GR extends TR{constructor(e){super(e)}mergeFunction(e){return Oi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Yh(t,e[n]);return t}))}}GR.className="Minimum",Xb(GR);class MR extends TR{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new wk("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const s of e)if(null!=s){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let a=!1;for(const e of n)if(D(e,t)){a=!0;break}a||n.push(t)}if(n.length>1)throw new wk("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Oi((()=>EI(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new wk("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[s]||null==a[s]){n[s]=null;break}n[s]+=a[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new wk("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new wk("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new wk(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Oi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let r=0;r<e.length;++r)null==t[r]?s.push(pl(op(e[r]),"bool")):t[r].rank<e[r].rank?s.push(Gd(t[r],-1)):s.push(t[r]);const a=ku(s,this.axis);return zl(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function LR(e,t){for(;e<0;)e+=t;return e}function zR(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new vk("batchDot is not implemented for tensors of 4D or higher rank yet");if($(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),$(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new vk("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const r=n;return Oi((()=>{let n,i;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=gu(t,t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=gu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=r[0]===r[1]?vd(Tl(e,t),r[0]):vd(Tl(kf(e,[1,0]),t),r[1]);else{const n=r[0]!==e.shape.length-1,s=r[1]===t.shape.length-1;i=Su(e,t,n,s)}if(n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=Bm(i,t)}return 1===i.shape.length&&(i=Gd(i,1)),i}))}MR.className="Concatenate",Xb(MR);class WR extends TR{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){$(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new vk("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new wk(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new wk(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>LR(t,e[n].shape.length))):[LR(this.axes,n.shape.length),LR(this.axes,s.shape.length)],this.normalize&&(n=bT(n,t[0]),s=bT(s,t[1])),zR(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[LR(this.axes,e.length),LR(this.axes,t.length)],n}computeOutputShape(e){$(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new vk("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}WR.className="Dot",Xb(WR);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class $R extends ES{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);const n=gS(e);return ZI((()=>xl(LI(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}$R.className="GaussianNoise",Xb($R);class FR extends ES{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Oi((()=>{this.invokeCallHook(e,t);const n=gS(e);return this.rate>0&&this.rate<1?ZI((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Tl(n,LI(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}FR.className="GaussianDropout",Xb(FR);class VR extends ES{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||gS(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Oi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ZI((()=>{const t=gS(e),s=-1.7580993408473766;let a=Pd(Qp(n),this.rate);a=vI(a,"float32");const r=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-r*s*this.rate,o=xl(Tl(t,a),Tl(xl(a,-1),s));return xl(Tl(o,r),i)}),(()=>gS(e)),t.training||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function OR(e,t,n,s,a,r=.001){let i;if(2===e.rank)i=Vu(e,t,n,s,a,r);else if(3===e.rank)i=Au(e,t,n,s,a,r);else{if(4!==e.rank)throw new vk(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Du(e,t,n,s,a,r)}return i}function AR(e,t,n,s,a=.001){return Oi((()=>{const r=tp(e,s),i=r.mean,o=r.variance;return[OR(e,i,o,n,t,a),i,o]}))}function XR(e,t,n,s,a=.001){return Oi((()=>{const r=tp(e,s),i=r.mean,o=r.variance,l=[];for(const t of bI(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=gu(i,l),c=gu(o,l),d=null==t?null:gu(t,l),h=null==n?null:gu(n,l);return[OR(e,u,c,h,d,a),i,o]}))}function DR(e,t,n,s,a=.001){return D(s.slice().sort(),bI(0,e.rank-1))?AR(e,t,n,s,a):XR(e,t,n,s,a)}VR.className="AlphaDropout",Xb(VR);class ZR extends ES{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=pS(e.betaInitializer||"zeros"),this.gammaInitializer=pS(e.gammaInitializer||"ones"),this.movingMeanInitializer=pS(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=pS(e.movingVarianceInitializer||"ones"),this.betaConstraint=sT(e.betaConstraint),this.gammaConstraint=sT(e.gammaConstraint),this.betaRegularizer=TC(e.betaRegularizer),this.gammaRegularizer=TC(e.gammaRegularizer)}build(e){e=bS(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new wk(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new SS({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Oi((()=>{const n=null!=t.training&&t.training,s=gS(e),a=s.shape,r=a.length,i=bI(0,r),o=this.axis>=0?this.axis:this.axis+r;i.splice(o,1);const l=Sk(1,r);l[o]=a[o];const u=i.slice();u.sort();const c=!D(u,bI(0,r).slice(0,r-1)),d=()=>{if(c){const e=gu(this.movingMean.read(),l),t=gu(this.movingVariance.read(),l),n=this.center?gu(this.beta.read(),l):null,a=this.scale?gu(this.gamma.read(),l):null;return OR(s,e,t,n,a,this.epsilon)}return OR(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return d();const[h,p,m]=DR(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Oi((()=>{const s=1-n,a=e.read(),r=Tl(Th(a,t),s);e.write(Th(a,r))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,m,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:hS(this.betaInitializer),gammaInitializer:hS(this.gammaInitializer),movingMeanInitializer:hS(this.movingMeanInitializer),movingVarianceInitializer:hS(this.movingVarianceInitializer),betaRegularizer:IC(this.betaRegularizer),gammaRegularizer:IC(this.gammaRegularizer),betaConstraint:tT(this.betaConstraint),gammaConstraint:tT(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ZR.className="BatchNormalization",Xb(ZR);class KR extends ES{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=pS(e.betaInitializer||"zeros"),this.gammaInitializer=pS(e.gammaInitializer||"ones"),this.betaRegularizer=TC(e.betaRegularizer),this.gammaRegularizer=TC(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=bS(e);const t=e.length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Vk(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const n=gS(e),s=n.shape,a=s.length;return Oi((()=>{let{mean:e,variance:t}=tp(n,this.axis,!0);const r=Sk(1,a);for(const n of this.axis)r[n]=s[n];const i=e=>null!=e&&e.shape.length!==a?gu(e,r):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(u.push(s[n]),c.push(1)):(u.push(1),c.push(s[n]));return e=Wd(e,u),t=Wd(t,u),null!=o&&(o=Wd(o,c)),null!=l&&(l=Wd(l,c)),OR(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:hS(this.betaInitializer),gammaInitializer:hS(this.gammaInitializer),betaRegularizer:IC(this.betaRegularizer),gammaRegularizer:IC(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function PR(e,t,n){return Oi((()=>{if(4!==e.rank)throw new wk(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new wk("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=wI()),"channelsLast"!==n&&"channelsFirst"!==n)throw new wk(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],up(e,s)}))}KR.className="LayerNormalization",Xb(KR);class _R extends ES{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?wI():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new wk(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new wk(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new wk(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new SS({ndim:4})]}computeOutputShape(e){let t,n;return e=bS(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Oi((()=>PR(gS(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function BR(e,t,n,s,a,r){return Oi((()=>{let i;tI(a),aI(r),sI(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==a&&(a=wI()),null==r&&(r="max"),e=$C(e,a);const o="same"===s?"same":"valid";return i="max"===r?Ah(e,t,n,o):yu(e,t,n,o),"channelsFirst"===a&&(i=kf(i,[0,3,1,2])),i}))}function HR(e,t,n,s,a,r){return Oi((()=>{let i;tI(a),aI(r),sI(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==a&&(a=wI()),null==r&&(r="max"),e=FC(e,a);const o="same"===s?"same":"valid";return i="max"===r?Dh(e,t,n,o):wu(e,t,n,o),"channelsFirst"===a&&(i=kf(i,[0,4,1,2,3])),i}))}_R.className="ZeroPadding2D",Xb(_R);class UR extends ES{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new wk(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Dk(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new wk(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Dk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,sI(this.padding),this.inputSpec=[new SS({ndim:3})]}computeOutputShape(e){e=bS(e);const t=zC(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Oi((()=>{this.invokeCallHook(e,t),e=kI(gS(e),2);const n=this.poolingFunction(gS(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Bm(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class YR extends UR{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return tI(a),sI(s),BR(e,t,n,s,a,"max")}}YR.className="MaxPooling1D",Xb(YR);class jR extends UR{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return tI(a),sI(s),BR(e,t,n,s,a,"avg")}}jR.className="AveragePooling1D",Xb(jR);class QR extends ES{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new wk(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Dk(this.poolSize,"poolSize"),Dk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tI(this.dataFormat),sI(this.padding),this.inputSpec=[new SS({ndim:4})]}computeOutputShape(e){e=bS(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=zC(t,this.poolSize[0],this.padding,this.strides[0]),n=zC(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Oi((()=>(this.invokeCallHook(e,t),this.poolingFunction(gS(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class JR extends QR{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return tI(a),sI(s),BR(e,t,n,s,a,"max")}}JR.className="MaxPooling2D",Xb(JR);class qR extends QR{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return tI(a),sI(s),BR(e,t,n,s,a,"avg")}}qR.className="AveragePooling2D",Xb(qR);class eE extends ES{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new wk(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Dk(this.poolSize,"poolSize"),Dk(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tI(this.dataFormat),sI(this.padding),this.inputSpec=[new SS({ndim:5})]}computeOutputShape(e){e=bS(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=zC(t,this.poolSize[0],this.padding,this.strides[0]),n=zC(n,this.poolSize[1],this.padding,this.strides[1]),s=zC(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Oi((()=>(this.invokeCallHook(e,t),this.poolingFunction(gS(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class tE extends eE{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return tI(a),sI(s),HR(e,t,n,s,a,"max")}}tE.className="MaxPooling3D",Xb(tE);class nE extends eE{constructor(e){super(e)}poolingFunction(e,t,n,s,a){return tI(a),sI(s),HR(e,t,n,s,a,"avg")}}nE.className="AveragePooling3D",Xb(nE);class sE extends ES{constructor(e){super(e),this.inputSpec=[new SS({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new vk}}class aE extends sE{constructor(e){super(e||{})}call(e,t){return Oi((()=>{const t=gS(e);return _h(t,1)}))}}aE.className="GlobalAveragePooling1D",Xb(aE);class rE extends sE{constructor(e){super(e||{})}call(e,t){return Oi((()=>{const t=gS(e);return cd(t,1)}))}}rE.className="GlobalMaxPooling1D",Xb(rE);class iE extends ES{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tI(this.dataFormat),this.inputSpec=[new SS({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new vk}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class oE extends iE{call(e,t){return Oi((()=>{const t=gS(e);return"channelsLast"===this.dataFormat?_h(t,[1,2]):_h(t,[2,3])}))}}oE.className="GlobalAveragePooling2D",Xb(oE);class lE extends iE{call(e,t){return Oi((()=>{const t=gS(e);return"channelsLast"===this.dataFormat?cd(t,[1,2]):cd(t,[2,3])}))}}lE.className="GlobalMaxPooling2D",Xb(lE);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class uE extends ES{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=t.layer,a=gT(s,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class cE extends uE{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=bS(e),e.length<3)throw new wk(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=bS(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Oi((()=>(e=gS(e),eR(((e,n)=>[gS(this.layer.call(e,t)),[]]),e,[],!1,null,null,!1,!0)[1])))}}function dE(e){Ak(qk,"BidirectionalMergeMode",e)}cE.className="TimeDistributed",Xb(cE);const hE="concat";class pE extends uE{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=gT(n),t.goBackwards=!0!==t.goBackwards;const s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=gT(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?hE:e.mergeMode,dE(this.mergeMode),e.weights)throw new vk("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(s=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Ck(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const a=qC(e,n,s,this.numConstants);if(e=a.inputs,n=a.initialState,s=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const r=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new wk("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,r.push(...n);const s=n.map((e=>new SS({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new vk("Support for constants in Bidirectional layers is not implemented yet.");const o=r[0]instanceof TS;for(const l of r)if(l instanceof TS!==o)throw new wk("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(r),s=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Oi((()=>{const n=t.initialState;let s,a,r,i;if(null==n)s=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(r=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=lm(a,1)),"concat"===this.mergeMode?i=EI([s,a]):"sum"===this.mergeMode?i=xl(s,a):"ave"===this.mergeMode?i=Tl(.5,xl(s,a)):"mul"===this.mergeMode?i=Tl(s,a):null==this.mergeMode&&(i=[s,a]),this.returnState?null==this.mergeMode?i.concat(r):[i].concat(r):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){oI(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),oI(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=gT(t.layer);if(delete t.layer,null!=t.numConstants)throw new vk("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}pE.className="Bidirectional",Xb(pE);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class mE extends ES{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Oi((()=>(e=gS(e),"float32"!==e.dtype&&(e=vI(e,"float32")),xl(Tl(e,this.scale),this.offset))))}}mE.className="Rescaling",Xb(mE);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:fE,cropAndResize:gE}=Mb;class bE extends ES{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,a,r,i,o){return Oi((()=>{let l,u=!1;const c=t/r,d=n/i,h=(s+t)/r,p=(a+n)/i,m=[c,d,h,p],f=[];3===e.rank?(u=!0,l=Um([e])):l=e;for(let e=0;e<l.shape[0];e++)f.push(m);const g=Ni(f,[f.length,4]),b=Jp(0,f.length,1,"int32"),y=gE(l,g,b,[s,a],"nearest");return vI(u?gS(yf(y)):y,o)}))}upsize(e,t,n,s){return Oi((()=>{const a=fE(e,[t,n]);return vI(a,s)}))}call(e,t){return Oi((()=>{const t=gS(e),n=t.dtype,s=t.shape,a=s[s.length-3],r=s[s.length-2];let i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return r!==this.width&&(o=Math.floor((r-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,a,r,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=bS(e);const t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function yE(e,t,n,s){let a=gS(e);if("int32"!==a.dtype&&(a=vI(a,"int32")),"int"===t)return a;const r=a.shape;if(0===a.rank&&(a=Gd(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=Gd(a,-1)),a.rank>2)throw new wk(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(t),o=a;let l;if(l=Rc(o,typeof s<"u"&&"count"===t?s:[],n,i),"tfIdf"!==t)return l;if(s)return Tl(l,s);throw new wk("When outputMode is 'tfIdf', weights must be provided.")}
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */bE.className="CenterCrop",Xb(bE);class xE extends ES{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=bS(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Oi((()=>{let n;if(e=gS(e),"int32"!==e.dtype&&(e=vI(e,"int32")),typeof t.countWeights<"u"){if("count"!==this.outputMode)throw new wk(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=gS(t.countWeights)}const s=cd(e),a=hd(e),r=Zd(this.numTokens,s).bufferSync().get(0),i=Pd(a,0).bufferSync().get(0);if(!r||!i)throw new wk(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return yE(e,this.outputMode,this.numTokens,n)}))}}xE.className="CategoryEncoding",Xb(xE);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const wE=["bilinear","nearest"],vE=new Set(wE);class kE extends ES{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!vE.has(e.interpolation))throw new wk(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=bS(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Oi((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Mb.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Mb.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...vE]} are supported`)}))}}kE.className="Resizing",Xb(kE);
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class IE{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}IE.className="RandomSeed";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class SE extends ES{constructor(e){super(e),this.randomGenerator=new IE(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}SE.className="BaseRandomLayer";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const TE=["bilinear","nearest"],NE=new Set(TE);class CE extends SE{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new wk(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new wk(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new wk(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!NE.has(n))throw new wk(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=bS(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Oi((()=>{const t=gS(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Qp([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const a=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return Mb.resizeBilinear(e,a);case"nearest":return Mb.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...NE]} are supported`)}}))}}CE.className="RandomWidth",Xb(CE);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const RE=Ne();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var EE,GE,ME;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function LE(e,t){return zE(e,t)}function zE(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(OE(e)){const a=Array.isArray(e)?[]:{};s.add(e);for(const r in e){const i=e[r],o=zE(i,t,n,s);a[r]=o}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function WE(e,t=FE){return $E(e,t)}function $E(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(OE(s)){const a=Array.isArray(s)?[]:{};n.add(s);for(const r in s){const s=e.map((e=>e[r])),i=$E(s,t,n);a[r]=i}return n.delete(s),a}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return a.value}function FE(e){return null===e?null:OE(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function VE(e,t){const n=new Map;zE(e,t,n);for(const s of Array.from(n.keys())){const e=n.get(s);if(we(e)){const t=await e;n.set(s,t)}}return zE(e,t,n)}function OE(e){let t=!1;if(Ne().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=require("string_decoder");t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Fr)&&!(e instanceof Promise)&&!t)}function AE(e){return null==e||XE(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Fr||mr(e)}function XE(e){return null===e||"object"!=typeof e&&"function"!=typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function DE(e){return LE(e,ZE)}function ZE(e){return e instanceof Fr?{value:e.clone(),recurse:!1}:OE(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */RE.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(EE||(EE={})),function(e){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(GE||(GE={}));class KE{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class PE extends KE{constructor(){super(PE.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function _E(e){return new jE(e)}function BE(e){return new QE(e)}function HE(e,t){return new lG(e,t)}function UE(e,t=ME.FAIL){return new uG(e,t)}PE.INITIAL_CAPACITY=32;class YE{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new aG(this,e)}filter(e){return new nG(this,e)}map(e){return new sG(this,e)}mapAsync(e){return new rG(this,e)}serialMapAsync(e){return new rG(this,e).serial()}flatmap(e){return new oG(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new tG(this,e,t)}columnMajorBatch(e,t=!0,n=FE){return this.rowMajorBatch(e,t).map((e=>WE(e,n)))}concatenate(e,t){return new lG(_E([this,e]),t)}take(e){return e<0||null==e?this:new eG(this,e)}skip(e){return e<0||null==e?this:new qE(this,e)}prefetch(e){return new cG(this,e)}shuffle(e,t){return new dG(this,e,t)}serial(){return new JE(this)}}class jE extends YE{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:DE(e),done:!1}}}class QE extends YE{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class JE extends YE{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class qE extends YE{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Ai(e.value)}return this.upstream.next()}}class eG extends YE{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class tG extends YE{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class nG extends YE{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Ai(e.value)}}}class sG extends YE{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Jr(e.value),n=this.transform(e.value),s=Jr(n);for(const a of t)Qr(a,s)||a.dispose();return{value:n,done:!1}}}class aG extends YE{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class rG extends YE{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Jr(e.value),n=await this.transform(e.value),s=Jr(n);for(const a of t)Qr(a,s)||a.dispose();return{value:n,done:!1}}}class iG extends YE{constructor(){super(),this.outputQueue=new PE,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class oG extends iG{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Jr(e.value),n=this.transform(e.value),s=Jr(n);this.outputQueue.pushAll(n);for(const a of t)Qr(a,s)||a.dispose();return!0}}class lG extends YE{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(ME||(ME={}));class uG extends YE{constructor(e,t=ME.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(e){return e instanceof YE?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}const a=await VE(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case ME.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case ME.SHORTEST:return{value:null,done:!0};case ME.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class cG extends YE{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new KE(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class dG extends cG{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Pp.alea(n||cr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class hG{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return $(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),pG((async()=>(await n.iterator()).columnMajorBatch(e,t,gG)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,pG((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,pG((async()=>(await t.iterator()).filter((t=>Oi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return pG((async()=>(await t.iterator()).map((t=>Oi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return pG((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return pG((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,pG((async()=>{const n=BE((async()=>({value:await t.iterator(),done:!1})));return HE(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,pG((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=Pp.alea(t||cr().toString());return pG((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,pG((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function pG(e,t=null){return new class extends hG{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function mG(e){return pG((async()=>_E(e)),e.length)}function fG(e){if(!OE(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return pG((async()=>{const t=await VE(e,(e=>{if(e instanceof hG)return{value:e.iterator(),recurse:!1};if(OE(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}));return UE(t,ME.SHORTEST)}),t)}function gG(e){if(null===e)return null;const t=e[0];return AE(t)?{value:bG(e),recurse:!1}:{value:null,recurse:!0}}function bG(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Fr?Um(e):Ni(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&$("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}hG.MAX_BUFFER_SIZE=1e4;const xG=wf;class wG extends T{nextDataId(){return wG.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new S(this,$i())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ne().get("IS_NODE")&&Js("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ae(n[0])){const a=n.map((e=>hr(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,s,a){this.data.set(e,{values:t,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return kx(e,t)}return pe(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>pr(e)));return dl(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dl(e.shape,e.dtype,t)}makeOutput(e,t,n){return $i().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=cr();return e(),{kernelMs:cr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){yG([e],"where");const t=this.readSync(e.dataId);return xG(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vG(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}wG.nextDataId=0;const kG=e=>{const{x:t}=e.inputs,n=e.backend;yG(t,"abs");let s=new Float32Array(O(t.shape));const a=n.data.get(t.dataId).values;return s=vG(a),n.makeOutput(s,t.shape,t.dtype)},IG={kernelName:ze,backendName:"cpu",kernelFunc:kG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SG(e){return(t,n,s,a,r)=>{const i=Vc(t,n),o=i.length,l=ce(i),u=O(i),c=Q(r,u),d=t.length,h=n.length,p=ce(t),m=ce(n),f=$c(t,i),g=$c(n,i);if(f.length+g.length===0)for(let b=0;b<c.length;++b)c[b]=e(s[b%s.length],a[b%a.length]);else for(let b=0;b<c.length;++b){const t=xe(b,o,l),n=t.slice(-d);f.forEach((e=>n[e]=0));const r=ye(n,d,p),i=t.slice(-h);g.forEach((e=>i[e]=0));const u=ye(i,h,m);c[b]=e(s[r],a[u])}return[c,i]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(e){const{inputs:t,backend:n}=e,{real:s,imag:a}=t,r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",r),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const NG={kernelName:it,backendName:"cpu",kernelFunc:TG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CG(e,t,n="float32"){if("complex64"===n){const n=CG(e,t,"float32"),s=CG(e,t,"float32");return TG({inputs:{real:n,imag:s},backend:e})}const s=fe(O(t),n);return e.makeTensorInfo(t,n,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RG(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const EG={kernelName:Yt,backendName:"cpu",kernelFunc:RG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(e){const{inputs:t,backend:n}=e,{input:s}=t,a=n.data.get(s.dataId).complexTensorInfos.real,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const MG={kernelName:Un,backendName:"cpu",kernelFunc:GG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(e,t,n,s){if("int32"===s){const n=Int32Array.from(e);return[t,"int32",n]}if("bool"===s){const s=ur([0],n),[a,r]=SG(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[r,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function zG(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dtype:r}=s;if("complex64"===r){if("complex64"===a.dtype)return RG({inputs:{x:a},backend:n});const e=CG(n,a.shape,a.dtype),t=zG({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=TG({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===a.dtype){const e=GG({inputs:{input:a},backend:n}),t=zG({inputs:{x:e},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(e),t}if(!te(a.dtype,r)){const e=RG({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:r}}const i=n.data.get(a.dataId).values,[o,l,u]=LG(i,a.shape,a.dtype,r);return n.makeTensorInfo(o,l,u)}const WG={kernelName:st,backendName:"cpu",kernelFunc:zG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $G(e,t,n,s){return null==n?({inputs:n,backend:a})=>{const{a:r,b:i}=n,o=a;yG([r,i],e);const l=o.data.get(r.dataId).values,u=o.data.get(i.dataId).values,c="string"===r.dtype?sw(l):l,d="string"===r.dtype?sw(u):u,h=s||r.dtype,[p,m]=t(r.shape,i.shape,c,d,h);return o.makeTensorInfo(m,h,p)}:({inputs:e,backend:a})=>{const{a:r,b:i}=e,o=a;if("complex64"===r.dtype||"complex64"===i.dtype){const e=zG({inputs:{x:r},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(a.dataId).values,c=zG({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,m=o.data.get(h.dataId).values,f=o.data.get(p.dataId).values,[g,b,y]=n(r.shape,i.shape,l,u,m,f),x=o.makeTensorInfo(y,"float32",g),w=o.makeTensorInfo(y,"float32",b),v=TG({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(r.dataId).values,n=o.data.get(i.dataId).values,a=s||r.dtype,[l,u]=t(r.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function FG(e){return(t,n,s,a,r,i)=>{const o=Vc(t,n),l=O(o),u=o.length,c=ce(o),d=Q("float32",l),h=Q("float32",l),p=$c(t,o),m=$c(n,o),f=kx(s,a),g=kx(r,i),b=t.length,y=ce(t),x=n.length,w=ce(n);if(p.length+m.length===0)for(let v=0;v<d.length;v++){const t=v%f.length,n=v%g.length,s=e(f[2*t],f[2*t+1],g[2*n],g[2*n+1]);d[v]=s.real,h[v]=s.imag}else for(let v=0;v<d.length;v++){const t=xe(v,u,c),n=t.slice(-b);p.forEach((e=>n[e]=0));const s=ye(n,b,y),a=t.slice(-x);m.forEach((e=>a[e]=0));const r=ye(a,x,w),i=e(f[2*s],f[2*s+1],g[2*r],g[2*r+1]);d[v]=i.real,h[v]=i.imag}return[d,h,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG=SG(((e,t)=>e+t)),OG=FG(((e,t,n,s)=>({real:e+n,imag:t+s}))),AG=$G(Fe,VG,OG),XG={kernelName:Fe,backendName:"cpu",kernelFunc:AG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DG(e,t,n,s,a){const r=O(s),i=fe(a,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=r>0?t[o]:1)}return i}function ZG(e,t,n,s=!1){const a=e.shape[0],r=e.shape[1],i=dl([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<r;a++){const r=e.get(o,a);if(r<0)throw new Error("Input x must be non-negative!");r>=n||(s?i.set(1,o,r):t.size>0?i.set(i.get(o,r)+t.get(o,a),o,r):i.set(i.get(o,r)+1,o,r))}return i}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=SG(((e,t)=>e&t)),PG=$G(et,KG),_G={kernelName:et,backendName:"cpu",kernelFunc:PG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(e){return(t,n,s)=>{const a=J(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HG(e,t,n){const s=BG(t);return UG(e,s,n)}function UG(e,t,n){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;yG(i,e);const o=r,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=sw(l)}else u=l;const c=n||i.dtype,d=t(u,c,a);return o.makeTensorInfo(i.shape,c,d)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG=BG((e=>Math.ceil(e))),jG=UG(at,YG),QG={kernelName:at,backendName:"cpu",kernelFunc:jG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JG(e,t,n,s){const a=J(n,O(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=O(e.shape);a.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const r="string"===n?sw(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)a[o+t]=r[i++]}s+=e.shape[1]}))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG=SG(((e,t)=>e===t?1:0)),eM=$G($t,qG,null,"bool"),tM={kernelName:$t,backendName:"cpu",kernelFunc:eM},nM=BG((e=>Math.exp(e))),sM=UG(Ft,nM,"float32"),aM={kernelName:Ft,backendName:"cpu",kernelFunc:sM},rM=BG((e=>Math.expm1(e))),iM=UG(Ot,rM),oM={kernelName:Ot,backendName:"cpu",kernelFunc:iM},lM=BG((e=>Math.floor(e))),uM=UG(Zt,lM),cM={kernelName:Zt,backendName:"cpu",kernelFunc:uM},dM=SG(((e,t)=>Math.floor(e/t))),hM=$G(Kt,dM,null,"int32"),pM={kernelName:Kt,backendName:"cpu",kernelFunc:hM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mM(e,t,n,s,a,r,i,o,l){const u=dl([s,r],n);for(let c=0;c<s;c++){const n=[];let s=0;for(let t=0;t<a;t++){const r=e[c*a+t];s+=r*i[t],n.push(r)}if(s<0||s>=l/r)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<r;e++)u.values[c*r+e]=t.get(...t.indexToLoc(s*r+e))}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(e,t,n){const s=dl(n,e.dtype);for(let a=0;a<s.size;++a){const n=s.indexToLoc(a).slice(),r=n[0],i=n[2],o=t.locToIndex([r,i]);n[2]=t.values[o];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(s.values[a]=e.values[l])}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=SG(((e,t)=>e>t?1:0)),bM=$G(Ht,gM,null,"bool"),yM={kernelName:Ht,backendName:"cpu",kernelFunc:bM},xM=SG(((e,t)=>e>=t?1:0)),wM=$G(Ut,xM,null,"bool"),vM={kernelName:Ut,backendName:"cpu",kernelFunc:wM},kM=SG(((e,t)=>e<t?1:0)),IM=$G(nn,kM,null,"bool"),SM={kernelName:nn,backendName:"cpu",kernelFunc:IM},TM=SG(((e,t)=>e<=t?1:0)),NM=$G(sn,TM,null,"bool"),CM={kernelName:sn,backendName:"cpu",kernelFunc:NM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RM(e,t,n){const s=(t-e)/(n-1),a=fe(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EM=BG((e=>Math.log(e))),GM=UG(rn,EM),MM={kernelName:rn,backendName:"cpu",kernelFunc:GM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(e,t,n,s){const a=Q(s,O(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let a=0;a<t;++a){const t=e[n+a];(Number.isNaN(t)||t>s)&&(s=t)}a[r]=s}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zM=SG(((e,t)=>Math.max(e,t))),WM=$G(yn,zM),$M={kernelName:yn,backendName:"cpu",kernelFunc:WM},FM=SG(((e,t)=>Math.min(e,t))),VM=$G(Nn,FM),OM={kernelName:Nn,backendName:"cpu",kernelFunc:VM},AM=SG(((e,t)=>e*t)),XM=FG(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),DM=$G(Gn,AM,XM),ZM={kernelName:Gn,backendName:"cpu",kernelFunc:DM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KM(e,t,n){const s=or(-1,n);return AM([],t,s,e,n)}function PM(e){const{inputs:t,backend:n}=e,{x:s}=t;yG(s,"neg");const a=n.data.get(s.dataId).values,[r,i]=KM(a,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,r)}const _M={kernelName:Mn,backendName:"cpu",kernelFunc:PM},BM=SG(((e,t)=>e!==t?1:0)),HM=$G(Ln,BM,null,"bool"),UM={kernelName:Ln,backendName:"cpu",kernelFunc:HM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YM(e,t,n,s,a){const r=t.length,i=O(t),o=ce(t),l=ce(a),u=Q(n,O(a));for(let c=0;c<i;++c){const t=xe(c,r,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];const a=ye(n,r,l);u[a]=e[c]}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(e){const{inputs:t,attrs:n,backend:s}=e,{x:a}=t,{perm:r}=n;yG(a,"transpose");const i=a.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=a.shape[r[c]];const l=s.data.get(a.dataId).values,u=YM(l,a.shape,a.dtype,r,o);return{dataId:s.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const QM={kernelName:Xs,backendName:"cpu",kernelFunc:jM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(e,t,n,s){const[a,r]=sd(e,s),i=_r(t,"int32"),o=fe(O(a),i),l=O(r);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let s=0;s<l;++s)t*=n[e+s];o[u]=t}return{outVals:o,outShape:a,outDtype:i}}function qM(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s;yG(a,"prod");const o=a.shape.length,l=Y(r,a.shape),u=id(l,o);let c=l,d=a;const h=[];null!=u&&(d=jM({inputs:{x:a},backend:n,attrs:{perm:u}}),h.push(d),c=ld(c.length,o));const p=n.data.get(d.dataId).values,{outVals:m,outShape:f,outDtype:g}=JM(d.shape,d.dtype,p,c);let b=f;return i&&(b=ad(f,l)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,m)}const eL={kernelName:Kn,backendName:"cpu",kernelFunc:qM};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const a=xe(s,t.length,ce(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}function nL(e,t){for(let n=0;n<e.length;++n){const s=e[n],a=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}function sL(e,t,n,s){const a=[];let r=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));nL(n,s);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let s=e[u],i=e[u]+1;for(let e=0;e<n.length;++e){const a=n[e],r=e+t.length-1;if(r>=0){const e=o[r],t=e[e.length-1]-a[s];for(let n=s;n<i;++n)o[r].push(a[n+1]+t)}s=a[s],i=a[i]}i!==s&&(a.push([s,i]),r+=i-s)}return{outSplits:o,valueSlices:a,numValues:r}}function aL(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,a=J("int32",s);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}function rL(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function iL(e,t,n,s,a,r){const i=rL(t,2)[1],o=rL(r,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<s;++n)a[l*o+n]=e[t*i+n];++l}}function oL(e,t,n,s,a){const r=t.slice();r[0]=a;const i=J(n,O(r)),o=e.length,l=0===o?0:o/t[0];return iL(e,t,s,l,i,r),[i,r]}function lL(e,t,n,s,a,r,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(tL(r,i,l),0===s.length)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:d,numValues:h}=sL(r,i,e,u),p=aL(c),m=oL(n,s,a,d,h);return[p,m[0],m[1]]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL=2147483647;function cL(e,t,n,s,a,r,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===a.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(a[0]),u||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===c.length?1:c[0],h=J("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const t=o?e[0]:e[g],n=l?s[0]:s[g],a=u?r[0]:r[g];if(0===a)throw new Error("Requires delta != 0");let i;if(a>0&&n<t||a<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/a)),i>uL)throw new Error(`Requires ((limit - start) / delta) <= ${uL}`);h[g+1]=h[g]+i}const p=h[d],m=J(n,p);let f=0;for(let g=0;g<d;++g){const t=h[g+1]-h[g];let n=o?e[0]:e[g];const s=u?r[0]:r[g];for(let e=0;e<t;++e)m[f++]=n,n+=s}return[h,m]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dL=tx;class hL{constructor(e,t,n,s,a,r,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=a,this.defaultValue=r,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=sx(u),this.raggedRank=ax(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===dL.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===dL.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case dL.VALUE_ROWIDS:return hL.getMaxWidthValueRowID(t);case dL.ROW_SPLITS:return hL.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${dL[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],a=0;for(let r=1;r<t;++r){const t=e[r];t!==s&&(s=t,a=Math.max(r-n,a),n=r)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return mL(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;rx(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=nx(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),a=[];let r=0;for(let i=0;i<s;++i,r+=t)a.push(r);for(let i=s;i<e;++i)a.push(-1);return $(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,s){const a=e.length,r=[];for(let i=0;i<a-1;++i){const a=e[i+1]-e[i];let o=Math.min(s,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)r.push(l),l+=n;for(let e=0;e<a-o;++e)r.push(-1)}if(a>0&&r.length!==e[a-1])throw new Error("Invalid row split size.");return r}calculateOutputIndexValueRowID(e,t,n,s){const a=e.length,r=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];r.push(l);for(let u=1;u<a;++u){const a=e[u];if(a===o)l>=0&&(++i,i<s?l+=n:l=-1);else{if(i=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}r.push(l)}if(r.length!==e.length)throw new Error("Invalid row ids.");return r}calculateOutputIndex(e,t,n,s){const a=this.getRowPartitionTensor(e),r=this.getRowPartitionTypeByDimension(e);switch(r){case dL.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,s);case dL.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,s);default:throw new Error(`Unsupported partition type: ${dL[r]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case dL.FIRST_DIM_SIZE:return e[0];case dL.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case dL.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${dL[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let r=n.length-2;r>=0;--r)n[r]=n[r+1]*t[r+1];const s=mL(t,!1),a=J(this.valuesDType,O(s));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)r=this.calculateOutputIndex(e-1,r,n[e],t[e]);this.setOutput(this.raggedRank,r,a,s)}return[s,a]}setOutput(e,t,n,s){if(0===n.length)return;const a=this.values,r=n;let i=s.slice();i=i.slice(e+1);const o=O(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;Oi((()=>{const t=gu(u,e);u=_u(t,i).dataSync()}))}let c=0,d=0,h=0;for(let p=0;p<=l;++p){let e=p<l?t[p]:-1;if(e!==h){if(d<h){const e=a.subarray(c*o),t=r.subarray(d*o),n=(h-d)*o;pL(t,e,n)}if(p>=l){const t=n.length;e=Math.floor(t/o)}if(e>h)if(1===this.defaultValue.length)r.subarray(h*o,e*o).fill(this.defaultValue[0]),h=e;else for(;e>h;){const e=r.slice(h*o);pL(e,u,o),++h}e<0?(c=p+1,d=h):(c=p,d=h,h=d+1)}else++h}}}function pL(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function mL(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function fL(e,t,n,s,a,r,i,o,l,u){return new hL(e,t,n,s,a,r,i,o,l,u).compute()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(e,t,n,s){const a=e===t,r=e<t&&n<0,i=t<e&&n>1;if(a||r||i)return fe(0,s);const o=Math.abs(Math.ceil((t-e)/n)),l=fe(o,s);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL=BG((e=>1/Math.sqrt(e))),yL=UG(rs,bL),xL={kernelName:rs,backendName:"cpu",kernelFunc:yL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(e,t,n,s,a,r,i,o,l,u){const c=[s/a,a],d=e.values,h=t.values;if(0===s)return dl(n,t.dtype);const p=l instanceof Mr?l:dl(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let m=0;m<r;m++){const e=[];let r=0;for(let t=0;t<i;t++){const n=d[m*i+t];e.push(n),r+=n*o[t]}if(r<0||r>=s/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)u?p.values[r*a+n]+=h[m*a+n]:p.values[r*a+n]=0===t.rank?h[0]:h[m*a+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vL=BG((e=>1/(1+Math.exp(-e)))),kL=HG(fs,(e=>1/(1+Math.exp(-e)))),IL={kernelName:fs,backendName:"cpu",kernelFunc:kL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(e,t,n,s,a){const r=Zy(s,t,n),i=O(n),o=ce(s);if(r){const n=Ky(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===a?sw(e):e,u=dl(s,a,l),c=dl(n,a);for(let d=0;d<c.size;++d){const e=c.indexToLoc(d),n=e.map(((e,n)=>e+t[n]));c.set(u.get(...n),...e)}return"string"===a?aw(c.values):c.values}function TL(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,size:i}=s;yG(a,"slice");const[o,l]=Py(a,r,i);Gy(a,o,l);const u=n.data.get(a.dataId).values,c=SL(u,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,c)}const NL={kernelName:ds,backendName:"cpu",kernelFunc:TL};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CL(e,t,n,s,a,r,i){const o=t[0],l=r[0],u=new Array(l),c=new Array(o),d=t[1];if(0===l){if(0!==o)throw new Error(Dx(o));const e=J(n,0),t=J(a,0);return[e,[0,d],t,u,c]}let h=!0,p=0;const m=new Array(l).fill(0);for(let g=0;g<o;++g){const t=e[g*d];if(t<0)throw new Error(Zx(g,t));if(t>=l)throw new Error(Kx(g,t,l));++m[t],h=h&&t>=p,p=t}let f=!0;for(let g=0;g<l;++g){const e=0===m[g];u[g]=e,f=f&&!e,m[g]=Math.max(m[g],1),g>0&&(m[g]+=m[g-1])}if(f&&h){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,d],n,u,c]}{const t=m[l-1],r=J(n,t*d),h=J(a,t),p=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*d],a=p[t],i=(0===t?0:m[t-1])+a;p[t]++;for(let s=0;s<d;++s)r[i*d+s]=e[n*d+s];h[i]=s[n],c[n]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:m[e-1];r[t*d+0]=e;for(let e=1;e<d;++e)r[t*d+e]=0;h[t]=i}return[r,[t,d],h,u,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(e,t,n,s,a){const r=O(s),i=t[0],o=a.length,l=[];let u=1,c=-1;for(let f=0;f<o;++f){const e=a[f];if(-1===e){if(-1!==c)throw new Error(Px(c,f));c=f,l.push(1)}else{if(e<0)throw new Error(_x(f,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error(Bx());const e=Math.trunc(r/u);if(u*e!==r)throw new Error(Hx(s,l));l[c]=e}if(O(l)!==r)throw new Error(Ux(s,l));const d=s.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*s[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const m=J(n,i*o);for(let f=0;f<i;++f){let t=0;for(let n=0;n<d;++n)t+=e[f*d+n]*h[n];for(let e=0;e<o;++e)m[f*o+e]=Math.trunc(t/p[e]),t%=p[e]}return[m,[i,o],l]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(e,t,n,s,a,r=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error(Yx());const d=t.slice();d[0]=c;const h=d.reduce(((e,t)=>e*t),1),p=J(n,h);if(0===o)return c>0&&p.fill(i),[p,d];if(c<=0)throw new Error(Yx());let m=0,f=1,g=0,b=a[m];for(;;){let t=0;if(f<o){if(t=a[f],b===t){++f;continue}if(b>=t)throw new Error(jx())}if(b<0||b>=c)throw new Error(Qx(b,c));b>g&&p.fill(i,g*u,b*u);for(let n=m;n<f;++n){const t=s[n];if(t<0||t>=l[0])throw new Error(Jx(n,s[n],l[0]));for(let n=0;n<u;n++)p[b*u+n]+=e[t*u+n]}if(r)for(let e=0;e<u;e++)p[b*u+e]/=f-m;if(m=f,++f,g=b+1,b=t,f>o)break}return g<c&&p.fill(i,g*u,c*u),[p,d]
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}const GL=BG((e=>Math.sqrt(e))),ML=HG(bs,(e=>Math.sqrt(e))),LL={kernelName:bs,backendName:"cpu",kernelFunc:ML},zL=SG(((e,t)=>{const n=e-t;return n*n})),WL=$G(Cs,zL),$L={kernelName:Cs,backendName:"cpu",kernelFunc:WL},FL=BG(((e,t)=>{const{pattern:n,replaceGlobal:s,rewrite:a}=t;return e.replace(new RegExp(n,s?"g":""),a)})),VL=UG(Es,FL),OL={kernelName:Es,backendName:"cpu",kernelFunc:VL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AL(e,t,n,s){const a=dl(e,t.dtype);for(let r=0;r<a.size;r++){const e=a.indexToLoc(r),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+s[t];a.set(t.get(...i),...e)}return a}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XL{constructor(e,t,n,s,a,r){this.separator=hr(e),this.nGramWidths=t,this.leftPad=hr(n),this.rightPad=hr(s),this.padWidth=a,this.preserveShort=r}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,a,r){for(let i=0;i<a;++i){const o=this.getPadWidth(r),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),c=r-(l+u),d=t+(l>0?0:i-o);let h=0;h+=l*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=u*this.rightPad.length;const p=l+u+c-1;h+=p*this.separator.length,n[s+i]=new Uint8Array(h);const m=n[s+i];let f=0;const g=e=>e.forEach((e=>m[f++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[d+t]),g(this.separator);if(c>0){g(e[d+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<s;++a){let s=t[a]>=e;if(s=s&&t[a]<=n,!s)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=s-1,r=J("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=a;++t)r[t]=0;return[e,r]}r[0]=0;for(let o=1;o<=a;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),r[o]=r[o-1]+n}const i=new Array(r[a]);for(let o=0;o<a;++o){const n=t[o];let s=r[o];if(this.nGramWidths.forEach((a=>{const r=t[o+1]-t[o],l=this.getNumNGrams(r,a);this.createNGrams(e,n,i,s,l,a),s+=l})),this.preserveShort&&s===r[o]){const a=t[o+1]-t[o];if(0===a)continue;const r=a+2*this.padWidth;this.createNGrams(e,n,i,s,1,r)}}return[i,r]}}function DL(e,t,n,s,a,r,i,o){return new XL(n,s,a,r,i,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let r=e.indexOf(a);for(;-1!==r;){const t=e.subarray(0,r);(!n||0!==t.length)&&s.push(t),e=e.subarray(r+1),r=e.indexOf(a)}return void((!n||0!==e.length)&&s.push(e))}let a=0;for(let r=0;r<e.length+1;r++)if(r===e.length||-1!==t.indexOf(e[r])){const t=e.subarray(a,r);(!n||0!==t.length)&&s.push(t),a=r+1}}function KL(e,t,n){const s=e.length,a=[];let r=0,i=0;const o=new Array(s);for(let h=0;h<s;++h){const s=a.length;ZL(e[h],t,n,a);const l=a.length-s;o[h]=l,r+=l,i=Math.max(i,l)}const l=J("int32",2*r),u=new Array(r),c=[s,i];let d=0;for(let h=0;h<s;++h)for(let e=0;e<o[h];++e)l[2*d]=h,l[2*d+1]=e,u[d]=a[d],++d;return[l,u,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(e,t){const n=J("int32",e.length);for(let s=0;s<e.length;++s)n[s]=ir(e[s]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _L=SG(((e,t)=>e-t)),BL=FG(((e,t,n,s)=>({real:e-n,imag:t-s}))),HL=$G(Ws,_L,BL),UL={kernelName:Ws,backendName:"cpu",kernelFunc:HL};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(e,t){const n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];const s=dl(n,e.dtype);for(let a=0;a<s.values.length;++a){const t=s.indexToLoc(a),n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=t[s]%e.shape[s];const r=e.locToIndex(n);s.values[a]=e.values[r]}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jL=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function QL(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const a=s-n+1,r=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(r-a/2),u=Math.max(n,Math.floor(t-r*o/a+l)),c=Math.min(s,Math.floor(t+(a-r)*o/a+l));QL(e,t,u,c)}const a=e[t];let r=n,i=s;for(M(e,n,t),jL(e[s],a)>0&&M(e,n,s);r<i;){for(M(e,r,i),r++,i--;jL(e[r],a)<0;)r+=1;for(;jL(e[i],a)>0;)i-=1}0===jL(e[n],a)?M(e,n,i):(i+=1,M(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function JL(e,t,n,s,a){const r=t[t.length-1],[i,o]=[e.length/r,r],l=Q(n,i*s),u=Q("int32",i*s);for(let d=0;d<i;d++){const t=d*o,n=e.subarray(t,t+o);let r=new Array(n.length);n.forEach(((e,t)=>r[t]={value:e,index:t})),s<r.length&&(QL(r,s),r=r.slice(0,s)),a&&r.sort(jL);const i=d*s,c=l.subarray(i,i+s),h=u.subarray(i,i+s);for(let e=0;e<s;e++)c[e]=r[e].value,h[e]=r[e].index}const c=t.slice();return c[c.length-1]=s,[dl(c,n,l),dl(c,"int32",u)]
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function qL(e,t,n,s){const a=Y(t,n)[0],r=[1,n[0],1];for(let m=0;m<a;m++)r[0]*=n[m];r[1]=n[a];for(let m=a+1;m<n.length;m++)r[2]*=n[m];const i=new Map,o=new Int32Array(n[a]),l=new Mr(r,s,e),u=[],c=1===r[0]&&1===r[2];for(let m=0;m<n[a];m++){let t;if(c)t=e[m].toString();else{const e=[];for(let t=0;t<r[0];t++)for(let n=0;n<r[2];n++)e.push(l.get(t,m,n));t=e.join(",")}const n=i.get(t);if(null!=n)o[m]=n;else{const e=i.size;i.set(t,e),o[m]=e,u.push(m)}}const d=r.slice();d[1]=i.size;const h=new Mr(d,s);u.forEach(((e,t)=>{for(let n=0;n<r[0];n++)for(let s=0;s<r[2];s++)h.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}const ez=Object.freeze(Object.defineProperty({__proto__:null,addImpl:VG,bincountImpl:DG,bincountReduceImpl:ZG,bitwiseAndImpl:KG,castImpl:LG,ceilImpl:YG,concatImpl:JG,equalImpl:qG,expImpl:nM,expm1Impl:rM,floorDivImpl:dM,floorImpl:lM,gatherNdImpl:mM,gatherV2Impl:fM,greaterEqualImpl:xM,greaterImpl:gM,lessEqualImpl:TM,lessImpl:kM,linSpaceImpl:RM,logImpl:EM,maxImpl:LM,maximumImpl:zM,minimumImpl:FM,multiplyImpl:AM,negImpl:KM,notEqualImpl:BM,prodImpl:JM,raggedGatherImpl:lL,raggedRangeImpl:cL,raggedTensorToTensorImpl:fL,rangeImpl:gL,rsqrtImpl:bL,scatterImpl:wL,sigmoidImpl:vL,simpleAbsImpl:vG,sliceImpl:SL,sparseFillEmptyRowsImpl:CL,sparseReshapeImpl:RL,sparseSegmentReductionImpl:EL,sqrtImpl:GL,squaredDifferenceImpl:zL,staticRegexReplaceImpl:FL,stridedSliceImpl:AL,stringNGramsImpl:DL,stringSplitImpl:KL,stringToHashBucketFastImpl:PL,subImpl:_L,tileImpl:YL,topKImpl:JL,transposeImpl:YM,uniqueImpl:qL},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Ui("cpu",(()=>new wG),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tz=HG(Lt,(e=>e>=0?e:Math.exp(e)-1)),nz={kernelName:Lt,backendName:"cpu",kernelFunc:tz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:r}=s;yG([a],"leakyRelu");const i=O(a.shape),o=n.data.get(a.dataId).values,l=Q("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?r*o[u]:o[u];return n.makeTensorInfo(a.shape,"float32",l)}const az={kernelName:tn,backendName:"cpu",kernelFunc:sz},rz=SG(((e,t)=>e<0?t*e:e));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t;yG([s,a],"prelu");const r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,[o,l]=rz(s.shape,a.shape,r,i,"float32");return n.makeTensorInfo(l,"float32",o)}const oz={kernelName:Zn,backendName:"cpu",kernelFunc:iz},lz=HG(jn,(e=>Math.max(0,e))),uz={kernelName:jn,backendName:"cpu",kernelFunc:lz},cz=HG(ns,(e=>Math.min(Math.max(0,e),6))),dz={kernelName:ns,backendName:"cpu",kernelFunc:cz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hz(e,t,n,s,a){if("linear"===n)return RG({inputs:{x:t},backend:e});if("relu"===n)return lz({inputs:{x:t},backend:e});if("elu"===n)return tz({inputs:{x:t},backend:e});if("relu6"===n)return cz({inputs:{x:t},backend:e});if("prelu"===n)return iz({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return sz({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return kL({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:r}=s,i=O(a.shape),o=U(r,i),l=O(o);$(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const mz={kernelName:Qn,backendName:"cpu",kernelFunc:pz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r}=t,{transposeA:i,transposeB:o}=s;yG([a,r],"matMul");const l=a.shape.length,u=r.shape.length,c=i?a.shape[l-2]:a.shape[l-1],d=o?r.shape[u-1]:r.shape[u-2],h=i?a.shape[l-1]:a.shape[l-2],p=o?r.shape[u-2]:r.shape[u-1],m=a.shape.slice(0,-2),f=r.shape.slice(0,-2),g=O(m),b=O(f),y=Vc(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([h,p]);$(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=i?[g,c,h]:[g,h,c],w=o?[b,p,d]:[b,d,p],v=pz({inputs:{x:a},backend:n,attrs:{shape:x}}),k=pz({inputs:{x:r},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],T=o?k.shape[1]:k.shape[2],N=Math.max(g,b),C=n.data.get(v.dataId).values,R=n.data.get(k.dataId).values,E=ce(v.shape),G=ce(k.shape),[M,L,z]=i?[E[0],1,E[1]]:[E[0],E[1],1],[W,F,V]=o?[1,G[1],G[0]]:[G[1],1,G[0]],A=S*T,X=dl([N,S,T],v.dtype),D=X.values,Z=n.blockSize;for(let $=0;$<N;$++){const e=$%g,t=$%b;for(let n=0;n<S;n+=Z){const s=Math.min(n+Z,S);for(let a=0;a<T;a+=Z){const r=Math.min(a+Z,T);for(let i=0;i<I;i+=Z){const o=Math.min(i+Z,I);for(let l=n;l<s;l++)for(let n=a;n<r;n++){let s=0;for(let a=i;a<o;a++){const r=C[e*M+l*L+a*z],i=R[a*W+n*F+t*V];s+=r*i}D[$*A+(l*T+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(y,X.dtype,X.values)}const gz={kernelName:Qe,backendName:"cpu",kernelFunc:fz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;let h,p,m;const f=[];h=fz({inputs:{a:a,b:r},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=AG({inputs:{a:h,b:i},backend:n}),f.push(h),h=p),c&&(m=hz(n,h,c,o,d),f.push(h),h=m);for(const g of f)n.disposeIntermediateTensorInfo(g);return h}const yz={kernelName:Ys,backendName:"cpu",kernelFunc:bz},xz=HG(We,(e=>Math.acos(e))),wz={kernelName:We,backendName:"cpu",kernelFunc:xz},vz=HG($e,(e=>Math.acosh(e))),kz={kernelName:$e,backendName:"cpu",kernelFunc:vz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iz(e){const{inputs:t,backend:n}=e,s=t;yG(t,"addN");const a=s.map((e=>n.data.get(e.dataId).values)),r=dl(s[0].shape,s[0].dtype),i=r.values;for(let o=0;o<s.length;o++){const e=a[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(r.shape,r.dtype,r.values)}const Sz={kernelName:Ve,backendName:"cpu",kernelFunc:Iz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s;yG(a,"all");const o=Y(r,a.shape);let l=o;const u=id(l,a.shape.length);let c=a;null!=u&&(c=jM({inputs:{x:a},backend:n,attrs:{perm:u}}),l=ld(l.length,a.shape.length)),rd("all",l,c.shape.length);const[d,h]=sd(c.shape,l),p=O(h),m=fe(O(d),c.dtype),f=n.data.get(c.dataId).values;for(let b=0;b<m.length;++b){const e=b*p;let t=f[e];for(let n=0;n<p;++n){const s=f[e+n];t=t&&s}m[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,m);if(i){const e=ad(d,o),t=pz({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}const Nz={kernelName:Oe,backendName:"cpu",kernelFunc:Tz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s;yG(a,"any");const o=Y(r,a.shape);let l=o;const u=id(l,a.shape.length);let c=a;null!=u&&(c=jM({inputs:{x:a},backend:n,attrs:{perm:u}}),l=ld(l.length,a.shape.length)),rd("any",l,c.shape.length);const[d,h]=sd(c.shape,l),p=O(h),m=fe(O(d),c.dtype),f=n.data.get(c.dataId).values;for(let b=0;b<m.length;++b){const e=b*p;let t=f[e];for(let n=0;n<p;++n){const s=f[e+n];t=t||s}m[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,m);if(i){const e=ad(d,o),t=pz({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}const Rz={kernelName:Ae,backendName:"cpu",kernelFunc:Cz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;yG(a,"argMax");let i=Y(r,a.shape);const o=id(i,a.shape.length);let l=a;const u=[];null!=o&&(l=jM({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ld(i.length,l.shape.length)),i=[i[0]],rd("argMax",i,l.shape.length);const[c,d]=sd(l.shape,i),h=O(c),p=fe(h,"int32"),m=O(d),f=n.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const e=g*m;let t=f[e],n=0;for(let s=0;s<m;++s){const a=f[e+s];a>t&&(t=a,n=s)}p[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const Gz={kernelName:Xe,backendName:"cpu",kernelFunc:Ez};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;yG(a,"argMin");let i=Y(r,a.shape);const o=id(i,a.shape.length);let l=a;const u=[];null!=o&&(l=jM({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ld(i.length,l.shape.length)),i=[i[0]],rd("argMin",i,l.shape.length);const[c,d]=sd(l.shape,i),h=O(c),p=fe(h,"int32"),m=O(d),f=n.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const e=g*m;let t=f[e],n=0;for(let s=0;s<m;++s){const a=f[e+s];a<t&&(t=a,n=s)}p[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const Lz={kernelName:De,backendName:"cpu",kernelFunc:Mz},zz=HG(Ze,(e=>Math.asin(e))),Wz={kernelName:Ze,backendName:"cpu",kernelFunc:zz},$z=HG(Ke,(e=>Math.asinh(e))),Fz={kernelName:Ke,backendName:"cpu",kernelFunc:$z},Vz=HG(Pe,(e=>Math.atan(e))),Oz={kernelName:Pe,backendName:"cpu",kernelFunc:Vz},Az=SG(((e,t)=>Math.atan2(e,t))),Xz=$G(Be,Az),Dz={kernelName:Be,backendName:"cpu",kernelFunc:Xz},Zz=HG(_e,(e=>Math.atanh(e))),Kz={kernelName:_e,backendName:"cpu",kernelFunc:Zz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pz(e,t,n,s,a,r){const i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,m="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=dl(a.outShape,n),g=f.values,b=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){const t=w*b,n=w*s[0];for(let f=0;f<a.inChannels;++f)for(let b=0;b<a.outHeight;++b){const w=b*i-h,v=Math.max(0,w),k=Math.min(a.inHeight,c+w),I=t+b*y;for(let t=0;t<a.outWidth;++t){const i=t*o-p,c=Math.max(0,i),h=Math.min(a.inWidth,d+i);let b=m,y=0,w=0;for(let t=v;t<k;t+=l){const a=n+t*s[1];for(let t=c;t<h;t+=u){const n=a+t*s[2],i=e[n+f];"max"===r&&i>b?b=i:"avg"===r&&(y+=i,w++)}if(isNaN(b))break}const S=I+t*x+f;g[S]="avg"===r?y/w:b}}}return f}function _z(e,t,n,s,a=!1,r=!1){const i=dl(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,m=s.padInfo.left,f=dl(t,n,e);for(let g=0;g<s.batchSize;++g)for(let e=0;e<s.inChannels;++e)for(let t=0;t<s.outHeight;++t){const n=t*o-p;let b=n;for(;b<0;)b+=u;const y=Math.min(s.inHeight,d+n);for(let o=0;o<s.outWidth;++o){const d=o*l-m;let p=d;for(;p<0;)p+=c;const x=Math.min(s.inWidth,h+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=b;t<y;t+=u){const i=t-n;for(let n=p;n<x;n+=c){const o=n-d,l=f.get(g,t,n,e);l>w&&(w=l,v=a?r?((g*s.inHeight+t)*s.inWidth+n)*s.inChannels+e:(t*s.inWidth+n)*s.inChannels+e:i*h+o)}}i.set(v,g,t,o,e)}}return i}function Bz(e,t,n,s,a,r){const i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,c=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,m=a.effectiveFilterWidth,f=a.padInfo.front,g=a.padInfo.top,b=a.padInfo.left,y="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=dl(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let T=0;T<a.batchSize;++T){const t=T*v,n=T*s[0];for(let x=0;x<a.inChannels;++x)for(let v=0;v<a.outDepth;++v){const T=v*i-f;let N=T;for(;N<0;)N+=u;const C=Math.min(a.inDepth,h+T),R=t+v*k;for(let t=0;t<a.outHeight;++t){const i=t*o-g;let h=i;for(;h<0;)h+=c;const f=Math.min(a.inHeight,p+i),v=R+t*I;for(let t=0;t<a.outWidth;++t){const i=t*l-b;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,m+i),g=v+t*S;let k=y,I=0,T=0;for(let t=N;t<C;t+=u){const a=n+t*s[1];for(let t=h;t<f;t+=c){const n=a+t*s[2];for(let t=o;t<p;t+=d){const a=n+t*s[3],i=e[a+x];if("max"===r&&i>k?k=i:"avg"===r&&(I+=i,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const R=g+x;w[R]="avg"===r?I/Math.max(T,1):k}}}}return x}function Hz(e,t){const n=dl(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*s-h;let x=y;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+y);for(let s=0;s<t.outHeight;++s){const u=s*a-p;let h=u;for(;h<0;)h+=o;const v=Math.min(t.inHeight,c+u);for(let a=0;a<t.outWidth;++a){const p=a*r-m;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,d+p);let S=Number.NEGATIVE_INFINITY,T=-1;for(let t=x;t<w;t+=i){const n=t-y;for(let s=h;s<v;s+=o){const a=s-u;for(let r=k;r<I;r+=l){const i=r-p,o=e.get(f,t,s,r,g);o>=S&&(S=o,T=n*c*d+a*c+i)}}}n.set(T,f,b,s,a,g)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;yG(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;$(du(i,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Ql(a.shape,r,i,u,o,l);let d;if(1===c.filterWidth&&1===c.filterHeight&&D(c.inShape,c.outShape))d=RG({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ce(a.shape),s=Pz(e,a.shape,a.dtype,t,c,"avg");d=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return d}const Yz={kernelName:He,backendName:"cpu",kernelFunc:Uz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;yG(a,"avgPool3d");const c=Jl(a.shape,r,i,1,o,l,u),d=n.data.get(a.dataId).values,h=Bz(d,a.shape,a.dtype,ce(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}const Qz={kernelName:Ye,backendName:"cpu",kernelFunc:jz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;yG([a,r],"avgPool3DGrad");const c=Jl(r.shape,i,o,1,l,u),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,m=c.filterDepth,f=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,T=v-1-c.padInfo.top,N=dl(r.shape,"float32"),C=1/(m*f*g),R=n.bufferSync(a);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const a=t-I,r=n-T,i=s-S;let o=0;for(let t=0;t<w;t+=b){const n=(a+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=y){const s=(r+t)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let t=0;t<k;t+=x){const a=(i+t)/p;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;const r=R.get(E,n,s,a,e);o+=r}}}N.set(o*C,E,t,n,s,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}const qz={kernelName:je,backendName:"cpu",kernelFunc:Jz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eW(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,i=r;yG([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Ql(i.shape,o,l,1,u),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,m=c.filterWidth,f=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,w=b-1-c.padInfo.top,v=dl(i.shape,"float32"),k=1/(p*m),I=n.data.get(a.dataId).values,S=dl(a.shape,"float32",I);for(let T=0;T<c.batchSize;++T)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const s=t-w,a=n-x;let r=0;for(let t=0;t<b;t+=f){const n=(s+t)/d;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<y;t+=g){const s=(a+t)/h;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;const i=S.get(T,n,s,e);r+=i}}v.set(r*k,T,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const tW={kernelName:Ue,backendName:"cpu",kernelFunc:eW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,scale:r,offset:i,mean:o,variance:l}=t;$(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),$(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),$(null==r||o.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),yG([a,o,l,r,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,p=r?n.data.get(r.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(c.length),g=m.length,b=p.length,y=h.length,x=d.length;let w=0,v=0,k=0,I=0;for(let S=0;S<c.length;++S)f[S]=m[w++]+(c[S]-d[v++])*p[k++]/Math.sqrt(h[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=b&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,f)}const sW={kernelName:Pt,backendName:"cpu",kernelFunc:nW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,crops:i}=s;yG([a],"batchToSpaceND");const o=r.reduce(((e,t)=>e*t)),l=ux(a.shape,r,o),u=cx(l.length,r.length),c=dx(a.shape,r,o),d=hx(i,r.length),h=px(c,i,r.length),p=pz({inputs:{x:a},backend:n,attrs:{shape:l}}),m=jM({inputs:{x:p},backend:n,attrs:{perm:u}}),f=pz({inputs:{x:m},backend:n,attrs:{shape:c}}),g=TL({inputs:{x:f},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}const rW={kernelName:Je,backendName:"cpu",kernelFunc:aW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:i}=s,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=DG(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}const oW={kernelName:qe,backendName:"cpu",kernelFunc:iW};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,r=n.data.get(s.dataId).values,i=n.data.get(a.dataId).values,o=Vc(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const uW={kernelName:nt,backendName:"cpu",kernelFunc:lW},cW=HG(rt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),dW={kernelName:rt,backendName:"cpu",kernelFunc:cW},hW=e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(O(t.shape)),a=n.data.get(t.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];s[u]=Math.hypot(e,t)}return n.makeOutput(s,t.shape,"float32")},pW={kernelName:ot,backendName:"cpu",kernelFunc:hW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mW(e){const{inputs:t,backend:n}=e,{input:s}=t,a=n.data.get(s.dataId).complexTensorInfos.imag,r=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,r)}const fW={kernelName:Qt,backendName:"cpu",kernelFunc:mW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gW(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,r=Y(a,t[0].shape)[0],i=t.map((e=>e.shape));qy(i,r);let o=ex(t.map((e=>e.shape)),r);if(0===O(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>O(e.shape)>0));if(1===l.length)return RG({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>GG({inputs:{input:e},backend:n}))),t=l.map((e=>mW({inputs:{input:e},backend:n}))),s=gW({inputs:e,backend:n,attrs:{axis:r}}),a=gW({inputs:t,backend:n,attrs:{axis:r}}),i=TG({inputs:{real:s,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}const u=l.map((e=>{const t=[-1,O(e.shape.slice(r))];return pz({inputs:{x:e},backend:n,attrs:{shape:t}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=ex(u.map((e=>e.shape)),1);const d=1===u[0].shape[0],h=JG(c,o,t[0].dtype,d),p=ex(l.map((e=>e.shape)),r),m=n.makeTensorInfo(p,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const bW={kernelName:lt,backendName:"cpu",kernelFunc:gW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;yG([a,r],"conv2d");const d=pu(l),h=ql(a.shape,r.shape,i,u,o,c,!1,d),p=h.filterHeight,m=h.filterWidth,f=h.dilationHeight,g=h.dilationWidth,b=h.padInfo.left,y=h.padInfo.top,x="channelsLast"===h.dataFormat,w=new Mr(h.outShape,a.dtype),v=ce(a.shape),k=ce(r.shape),I=v[0],S=x?v[1]:v[2],T=x?v[2]:1,N=x?1:v[1],C=w.strides[0],R=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,G=x?1:w.strides[1],M=n.data.get(a.dataId).values,L=n.data.get(r.dataId).values,z=w.values;for(let W=0;W<h.batchSize;++W){const e=W*I,t=W*C;for(let n=0;n<h.outHeight;++n){const s=t+n*R,a=n*h.strideHeight-y;for(let t=0;t<p;++t){const n=a+t*f;if(n<0||n>=h.inHeight)continue;const r=t*k[0],i=e+n*S;for(let e=0;e<h.outWidth;++e){const t=s+e*E,n=e*h.strideWidth-b;for(let e=0;e<m;++e){const s=n+e*g;if(s<0||s>=h.inWidth)continue;const a=r+e*k[1],o=i+s*T;let l=a;for(let e=0;e<h.inChannels;++e){const n=M[o+e*N];for(let e=0;e<h.outChannels;++e)z[t+e*G]+=n*L[l+e];l+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,z)}const xW={kernelName:ut,backendName:"cpu",kernelFunc:yW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;yG([a,r],"conv2dBackpropFilter");const d=pu(l),h=ql(a.shape,c,i,1,o,u,!1,d),{strideHeight:p,strideWidth:m,filterHeight:f,filterWidth:g}=h,b="channelsLast"===h.dataFormat,y=new Mr(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(r.dataId).values,I=new Mr(a.shape,a.dtype,v),S=new Mr(r.shape,r.dtype,k);for(let T=0;T<f;++T){const e=Math.max(0,Math.ceil((w-T)/p)),t=Math.min(h.outHeight,(h.inHeight+w-T)/p);for(let n=0;n<g;++n){const s=Math.max(0,Math.ceil((x-n)/m)),a=Math.min(h.outWidth,(h.inWidth+x-n)/m);for(let r=0;r<h.inChannels;++r)for(let i=0;i<h.outChannels;++i){let o=0;for(let l=0;l<h.batchSize;++l)for(let u=e;u<t;++u){const e=T+u*p-w;for(let t=s;t<a;++t){const s=n+t*m-x;o+=b?I.get(l,e,s,r)*S.get(l,u,t,i):I.get(l,r,e,s)*S.get(l,i,u,t)}}y.set(o,T,n,r,i)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const vW={kernelName:ct,backendName:"cpu",kernelFunc:wW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;yG([a,r],"conv2dBackpropInput");const d=ce(r.shape),h=ce(a.shape);let p=pu(u);const m=ql(i,r.shape,o,1,l,c,!1,p),f=new Mr(m.inShape,"float32"),g=f.values,b=n.data.get(a.dataId).values,y=n.data.get(r.dataId).values,[x,w,v]=d,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:T,inHeight:N,inWidth:C,outChannels:R,outHeight:E,outWidth:G,strideHeight:M,strideWidth:L}=m;p=m.dataFormat;const z=I-1-m.padInfo.top,W=S-1-m.padInfo.left,$="channelsLast"===p,F=f.strides[0],V=$?f.strides[1]:f.strides[2],O=$?f.strides[2]:1,A=$?1:f.strides[1],X=h[0],D=$?h[1]:h[2],Z=$?h[2]:1,K=$?1:h[1];for(let P=0;P<k;++P)for(let e=0;e<T;++e)for(let t=0;t<N;++t){const n=t-z,s=Math.max(0,Math.ceil(n/M)),a=Math.min(E,(I+n)/M);for(let r=0;r<C;++r){const i=r-W,o=Math.max(0,Math.ceil(i/L)),l=Math.min(G,(S+i)/L);let u=0;for(let t=s;t<a;++t){const s=t*M-n;for(let n=o;n<l;++n){const a=n*L-i,r=X*P+D*t+Z*n,o=x*(I-1-s)+w*(S-1-a)+v*e;for(let e=0;e<R;++e){const t=b[r+K*e],n=y[o+e];u+=t*n}}}const c=F*P+V*t+O*r+A*e;g[c]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const IW={kernelName:dt,backendName:"cpu",kernelFunc:kW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:i,pad:o,dilations:l}=s;yG([a,r],"conv3d");const u=eu(a.shape,r.shape,i,l,o),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:m,dilationWidth:f,padInfo:g}=u,b=g.front,y=g.left,x=g.top,w=new Mr(u.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(r.dataId).values,I=w.values,S=ce(a.shape),T=ce(r.shape);for(let N=0;N<u.batchSize;++N){const e=N*S[0],t=N*w.strides[0];for(let n=0;n<u.outDepth;++n){const s=t+n*w.strides[1],a=n*u.strideDepth-b;for(let t=0;t<c;++t){const n=a+t*p;if(n<0||n>=u.inDepth)continue;const r=t*T[0],i=e+n*S[1];for(let e=0;e<u.outHeight;++e){const t=s+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<d;++e){const s=n+e*m;if(s<0||s>=u.inHeight)continue;const a=r+e*T[1],o=i+s*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-y;for(let e=0;e<h;++e){const t=s+e*f;if(t<0||t>=u.inWidth)continue;const r=a+e*T[2],i=o+t*u.inChannels;let l=r;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const TW={kernelName:ht,backendName:"cpu",kernelFunc:SW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:i,pad:o,filterShape:l}=s;yG([a,r],"conv3dBackpropFilterV2");const u=ce(a.shape),c=ce(r.shape),d=eu(a.shape,l,i,1,o),h=d.strideDepth,p=d.strideHeight,m=d.strideWidth,f=d.filterDepth,g=d.filterHeight,b=d.filterWidth,y=new Mr(d.filterShape,"float32"),x=y.values,[w,v,k,I]=y.strides,S=n.data.get(r.dataId).values,[T,N,C,R]=c,E=n.data.get(a.dataId).values,[G,M,L,z]=u,W=d.padInfo.front,$=d.padInfo.left,F=d.padInfo.top;for(let V=0;V<f;++V){const e=Math.max(0,Math.ceil((W-V)/h)),t=Math.min(d.outDepth,(d.inDepth+W-V)/h),n=V*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((F-s)/p)),r=Math.min(d.outHeight,(d.inHeight+F-s)/p),i=s*v+n;for(let n=0;n<b;++n){const o=Math.max(0,Math.ceil(($-n)/m)),l=Math.min(d.outWidth,(d.inWidth+$-n)/m),u=n*k+i;for(let i=0;i<d.inChannels;++i){const c=i*I+u;for(let u=0;u<d.outChannels;++u){let f=0;for(let c=0;c<d.batchSize;++c){const d=c*G,g=c*T;for(let c=e;c<t;++c){const e=(V+c*h-W)*M+d,t=c*N+g;for(let c=a;c<r;++c){const a=(s+c*p-F)*L+e,r=c*C+t;for(let e=o;e<l;++e){const t=(n+e*m-$)*z+a,s=e*R+r;f+=E[t+i]*S[s+u]}}}}x[c+u]=f}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const CW={kernelName:pt,backendName:"cpu",kernelFunc:NW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RW(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{pad:i,strides:o,inputShape:l}=s;yG([a],"conv3dBackpropInputV2");const u=ce(a.shape),c=ce(r.shape),d=eu(l,r.shape,o,1,i),h=new Mr(d.inShape,"float32"),p=h.values,[m,f,g,b]=h.strides,y=n.data.get(a.dataId).values,[x,w,v,k]=u,I=n.data.get(r.dataId).values,[S,T,N,C]=c,{batchSize:R,filterDepth:E,filterHeight:G,filterWidth:M,inChannels:L,inDepth:z,inHeight:W,inWidth:$,outChannels:F,outDepth:V,outHeight:O,outWidth:A,strideDepth:X,strideHeight:D,strideWidth:Z}=d,K=E-1-d.padInfo.front,P=G-1-d.padInfo.top,_=M-1-d.padInfo.left;for(let B=0;B<R;++B)for(let e=0;e<L;++e)for(let t=0;t<z;++t){const n=t-K,s=Math.max(0,Math.ceil(n/X)),a=Math.min(V,(E+n)/X);for(let r=0;r<W;++r){const i=r-P,o=Math.max(0,Math.ceil(i/D)),l=Math.min(O,(G+i)/D);for(let u=0;u<$;++u){const c=u-_,d=Math.max(0,Math.ceil(c/Z)),h=Math.min(A,(M+c)/Z);let R=0;for(let t=s;t<a;++t){const s=t*X-n;for(let n=o;n<l;++n){const a=n*D-i;for(let r=d;r<h;++r){const i=r*Z-c,o=x*B+w*t+v*n+k*r,l=S*(E-1-s)+T*(G-1-a)+N*(M-1-i)+C*e;for(let e=0;e<F;++e){const t=y[o+e],n=I[l+e];R+=t*n}}}}p[m*B+f*t+g*r+b*u+e]=R}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}const EW={kernelName:mt,backendName:"cpu",kernelFunc:RW},GW=HG(ft,(e=>Math.cos(e))),MW={kernelName:ft,backendName:"cpu",kernelFunc:GW},LW=HG(gt,(e=>Math.cosh(e))),zW={kernelName:gt,backendName:"cpu",kernelFunc:LW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WW(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:r,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,d,h,p]=a.shape,m=r.shape[0],[f,g]=o,b=dl([m,f,g,p],"float32"),y=n.data.get(r.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=ce(a.shape),k=ce(b.shape);for(let I=0;I<m;I++){const e=4*I,t=y[e],n=y[e+1],s=y[e+2],a=y[e+3],r=x[I];if(r>=c)continue;const i=f>1?(s-t)*(d-1)/(f-1):0,o=g>1?(a-n)*(h-1)/(g-1):0;for(let c=0;c<f;c++){const e=f>1?t*(d-1)+c*i:.5*(t+s)*(d-1);if(e<0||e>d-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),s=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const l=g>1?n*(h-1)+e*o:.5*(n+a)*(h-1);if(l<0||l>h-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const d=Math.floor(l),m=Math.ceil(l),f=l-d;for(let n=0;n<p;n++){let a=n+d*v[2]+t*v[1]+r*v[0];const o=w[a];a=n+m*v[2]+t*v[1]+r*v[0];const l=w[a];a=n+d*v[2]+s*v[1]+r*v[0];const u=w[a];a=n+m*v[2]+s*v[1]+r*v[0];const h=w[a],p=o+(l-o)*f,g=u+(h-u)*f;a=n+e*k[2]+c*k[1]+I*k[0],b.values[a]=p+(g-p)*i}}}else for(let t=0;t<g;++t){const s=g>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(s<0||s>h-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const i=Math.round(s),l=Math.round(e);for(let e=0;e<p;e++){const n=e+i*v[2]+l*v[1]+r*v[0],s=e+t*k[2]+c*k[1]+I*k[0];b.values[s]=w[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const $W={kernelName:xt,backendName:"cpu",kernelFunc:WW};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:i,reverse:o}=s;yG(a,"cumprod");const l=id([r],a.shape.length);let u=a;null!=l&&(u=jM({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=ld(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=_r(u.dtype,"int32"),h=me(O(u.shape),d),p=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=m)for(let e=0;e<m;e++){const t=f(b,e);if(0===e)h[t]=i?1:p[t];else{const n=f(b,e-1);h[t]=i?p[n]*h[n]:p[t]*h[n]}}const g=n.makeTensorInfo(u.shape,d,h);if(null!=l){const e=od(l),t=jM({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}const VW={kernelName:bt,backendName:"cpu",kernelFunc:FW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:i,reverse:o}=s;yG(a,"cumsum");const l=id([r],a.shape.length);let u=a;null!=l&&(u=jM({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=ld(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=_r(u.dtype,"int32"),h=fe(O(u.shape),d),p=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=m)for(let e=0;e<m;e++){const t=f(b,e);if(0===e)h[t]=i?0:p[t];else{const n=f(b,e-1);h[t]=i?p[n]+h[n]:p[t]+h[n]}}const g=n.makeTensorInfo(u.shape,d,h);if(null!=l){const e=od(l),t=jM({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),t}return g}const AW={kernelName:yt,backendName:"cpu",kernelFunc:OW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:i,binaryOutput:o}=s;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(r.dataId).values,s=DG(e,t,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,s)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(r),s=ZG(e,t,i,o);return n.makeTensorInfo(s.shape,r.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const DW={kernelName:wt,backendName:"cpu",kernelFunc:XW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:r,dataFormat:i}=s;$("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],l=a.shape[1],u=a.shape[2],c=a.shape[3],d=l*r,h=u*r,p=c/(r*r),m=n.data.get(a.dataId).values,f=new Float32Array(o*d*h*p);let g=0;for(let b=0;b<o;++b)for(let e=0;e<d;++e){const t=Math.floor(e/r),n=e%r;for(let e=0;e<h;++e){const s=Math.floor(e/r),a=e%r,i=(n*r+a)*p;for(let e=0;e<p;++e){const n=e+i+c*(s+u*(t+l*b));f[g++]=m[n]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,f)}const KW={kernelName:vt,backendName:"cpu",kernelFunc:ZW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;yG([a,r],"depthwiseConv2DNative");const c=ce(a.shape),d=ce(r.shape);let h=l;null==h&&(h=[1,1]),$(du(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const p=ql(a.shape,r.shape,i,h,o,u,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:b,padInfo:y}=p,x=y.left,w=y.top,v=p.outChannels/p.inChannels,k=new Mr(p.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(r.dataId).values,T=k.values;for(let N=0;N<p.batchSize;++N){const e=N*c[0],t=N*k.strides[0];for(let n=0;n<p.outHeight;++n){const s=t+n*k.strides[1],a=n*p.strideHeight-w;for(let t=0;t<m;++t){const n=a+t*g;if(n<0||n>=p.inHeight)continue;const r=t*d[0],i=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<f;++e){const s=n+e*b;if(s<0||s>=p.inWidth)continue;const a=r+e*d[1],o=i+s*p.inChannels;let l=t,u=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)T[l+e]+=t*S[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const _W={kernelName:kt,backendName:"cpu",kernelFunc:PW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BW(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;yG([a,r],"depthwiseConv2dNativeBackpropFilter");const d=ql(a.shape,c,i,o,l,u,!0),{strideHeight:h,strideWidth:p,filterHeight:m,filterWidth:f}=d,g=new Mr(d.filterShape,"float32"),b=d.padInfo.left,y=d.padInfo.top,x=d.outChannels/d.inChannels,w=n.data.get(a.dataId).values,v=new Mr(a.shape,a.dtype,w),k=n.data.get(r.dataId).values,I=new Mr(r.shape,r.dtype,k);for(let S=0;S<m;++S){const e=Math.max(0,Math.ceil((y-S)/h)),t=Math.min(d.outHeight,(d.inHeight+y-S)/h);for(let n=0;n<f;++n){const s=Math.max(0,Math.ceil((b-n)/p)),a=Math.min(d.outWidth,(d.inWidth+b-n)/p);for(let r=0;r<d.outChannels;++r){const i=Math.trunc(r/x),o=r%x;let l=0;for(let u=0;u<d.batchSize;++u)for(let o=e;o<t;++o){const e=S+o*h-y;for(let t=s;t<a;++t){const s=n+t*p-b;l+=v.get(u,e,s,i)*I.get(u,o,t,r)}}g.set(l,S,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const HW={kernelName:It,backendName:"cpu",kernelFunc:BW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UW(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;yG([a,r],"depthwiseConv2DNativeBackpropInput");const d=ce(a.shape),h=ce(r.shape),p=ql(c,r.shape,i,o,l,u,!0),m=new Mr(p.inShape,"float32"),f=m.values,[g,b,y]=m.strides,x=n.data.get(a.dataId).values,[w,v,k]=d,I=n.data.get(r.dataId).values,[S,T,N]=h,{batchSize:C,filterHeight:R,filterWidth:E,inChannels:G,inHeight:M,inWidth:L,outChannels:z,outHeight:W,outWidth:$,strideHeight:F,strideWidth:V}=p,O=R-1-p.padInfo.top,A=E-1-p.padInfo.left,X=z/G;for(let D=0;D<C;++D)for(let e=0;e<G;++e)for(let t=0;t<M;++t){const n=t-O,s=Math.max(0,Math.ceil(n/F)),a=Math.min(W,(R+n)/F);for(let r=0;r<L;++r){const i=r-A,o=Math.max(0,Math.ceil(i/V)),l=Math.min($,(E+i)/V);let u=0;for(let t=s;t<a;++t){const s=t*F-n;for(let n=o;n<l;++n){const a=n*V-i,r=w*D+v*t+k*n,o=S*(R-1-s)+T*(E-1-a)+N*e;for(let t=0;t<X;++t){const n=e*X+t,s=x[r+n],a=I[o+t];u+=s*a}}}f[g*D+b*t+y*r+e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const YW={kernelName:St,backendName:"cpu",kernelFunc:UW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(e){const{inputs:t,backend:n}=e,{x:s}=t,a=O(s.shape),r=n.data.get(s.dataId).values,i=dl([a,a],s.dtype),o=i.values;for(let u=0;u<r.length;u++)o[u*a+u]=r[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}const QW={kernelName:Tt,backendName:"cpu",kernelFunc:jW},JW={kernelName:Nt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a}=e,{strides:r,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,d=l.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:m,inWidth:f,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:T,outShape:N}=jl(s.shape,a.shape,r,i,"NHWC",o),C=O(N),R=N.length,E=J(s.dtype,C);for(let G=0;G<p;++G)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<y;++n){const r=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<m)for(let t=0;t<I;++t){const l=r+t*T;if(l>=0&&l<f){const r=ye([G,n,l,i],c,ce(s.shape)),p=ye([e,t,i],h,ce(a.shape)),m=u[r]+d[p];m>o&&(o=m)}}}const l=ye([G,e,n,i],R,ce(N));E[l]=o}}}return{dataId:l.write(ur(E,s.dtype),N,s.dtype),shape:N,dtype:s.dtype}}},qW={kernelName:Rt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:r}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=he(s.shape,u.data.get(s.dataId).values),d=he(a.shape,u.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:m,inChannels:f,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:T}=jl(s.shape,a.shape,i,o,"NHWC",l);$(r.rank===T.length,(()=>`Error in ${Rt}, dy must have the same rank as output ${T.length}, but got ${r.rank}`));const N=he(T,u.data.get(r.dataId).values),C=ge(a.shape,a.dtype);for(let R=0;R<h;++R)for(let e=0;e<g;++e){const t=e*x-y.top;for(let n=0;n<b;++n){const s=n*w-y.left;for(let a=0;a<f;++a){let r=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<p)for(let t=0;t<k;++t){const l=s+t*S;if(l>=0&&l<m){const s=c[R][n][l][a]+d[e][t][a];s>r&&(r=s,i=e,o=t)}}}C[i][o][a]+=N[R][e][n][a]}}}return{dataId:u.write(ur(C,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},e$={kernelName:Ct,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:a,dy:r}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=he(s.shape,u.data.get(s.dataId).values),d=he(a.shape,u.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:m,inChannels:f,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:T}=jl(s.shape,a.shape,i,o,"NHWC",l);$(r.rank===T.length,(()=>`Error in ${Ct}, dy must have the same rank as output ${T.length}, but got ${r.rank}`));const N=he(T,u.data.get(r.dataId).values),C=ge(s.shape,s.dtype);for(let R=0;R<h;++R)for(let e=0;e<g;++e){const t=e*x-y.top;for(let n=0;n<b;++n){const s=n*w-y.left;for(let a=0;a<f;++a){let r=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=s<0?0:s;for(let e=0;e<v;++e){const n=t+e*I;if(n>=0&&n<p)for(let t=0;t<k;++t){const l=s+t*S;if(l>=0&&l<m){const s=c[R][n][l][a]+d[e][t][a];s>r&&(r=s,i=n,o=l)}}}C[R][i][o][a]+=N[R][e][n][a]}}}return{dataId:u.write(ur(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function t$(e){const{inputs:t,backend:n,attrs:s}=e,{image:a}=t,{canvas:r,options:i}=s,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const d=r.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${c} type.`);const[h,p]=a.shape.slice(0,2),m=2===a.shape.length?1:a.shape[2],f=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,b=new Uint8ClampedArray(p*h*4);for(let x=0;x<h*p;++x){const e=[0,0,0,255*u];for(let n=0;n<m;n++){const t=f[x*m+n];if("float32"===a.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===a.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===m?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;b[t+0]=Math.round(e[0]),b[t+1]=Math.round(e[1]),b[t+2]=Math.round(e[2]),b[t+3]=Math.round(e[3])}r.width=p,r.height=h;const y=new ImageData(b,p,h);return d.putImageData(y,0,0),a}const n$={kernelName:Et,backendName:"cpu",kernelFunc:t$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s;let o;yG(a,"sum"),o="bool"===a.dtype?zG({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):RG({inputs:{x:a},backend:n});const l=o.shape.length,u=Y(r,o.shape),c=id(u,l);let d=u,h=o;null!=c&&(h=jM({inputs:{x:o},backend:n,attrs:{perm:c}}),d=ld(d.length,l)),rd("sum",d,h.shape.length);const[p,m]=sd(h.shape,d),f=_r(h.dtype,"int32");let g=CG(n,p,f);const b=O(m),y=n.data.get(g.dataId).values,x=n.data.get(h.dataId).values;for(let w=0;w<y.length;++w){const e=w*b;let t=0;for(let n=0;n<b;++n)t+=x[e+n];y[w]=t}if(i){const e=ad(g.shape,u),t=g;g=pz({inputs:{x:g},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(h),g}const a$={kernelName:ys,backendName:"cpu",kernelFunc:s$};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,r=t,{allDims:i,summedDims:o,idDims:l}=Wx(a,r.length);Fx(i.length,l,r);const{path:u,steps:c}=Vx(o,l),d=c.length;let h=null,p=i.length;const m=[];for(let f=0;f<d;++f){for(const e of c[f]){const{permutationIndices:t,expandDims:s}=$x(p,l[e]);let a;Ox(t)?a=r[e]:(a=jM({inputs:{x:r[e]},backend:n,attrs:{perm:t}}),m.push(a));const i=a.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);D(a.shape,i)||(a=pz({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===h?h=a:(h=DM({inputs:{a:a,b:h},backend:n}),m.push(h))}f<d-1&&(u[f]>=0&&(h=s$({inputs:{x:h},backend:n,attrs:{axis:u[f]-(i.length-p),keepDims:!1}}),m.push(h)),p--)}for(const f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}const i$={kernelName:Mt,backendName:"cpu",kernelFunc:r$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(e){const{inputs:t,backend:n}=e,{dy:s,y:a}=t;yG([s,a],"eluGrad");const r=new Float32Array(O(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const e=i[l];r[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(a.shape,"float32",r)}const l$={kernelName:zt,backendName:"cpu",kernelFunc:o$},u$=gx,c$=bx,d$=yx,h$=xx,p$=wx,m$=vx,f$=HG(Wt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+u$*n);return t*(1-((((m$*s+p$)*s+h$)*s+d$)*s+c$)*s*Math.exp(-n*n))})),g$={kernelName:Wt,backendName:"cpu",kernelFunc:f$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b$(e){const{inputs:t,backend:n,attrs:s}=e,{input:a}=t,{dim:r}=s,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&($(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),pz({inputs:{x:a},backend:n,attrs:{shape:o}})}const y$={kernelName:Vt,backendName:"cpu",kernelFunc:b$},x$=SG(((e,t)=>e/t)),w$=$G(Gt,x$),v$={kernelName:Gt,backendName:"cpu",kernelFunc:w$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function k$(e,t,n){const s=e.shape,a=s[0],r=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,r],c=O(u),d=Q("float32",c),h=Q("float32",c);for(let g=0;g<a;g++){const e=TL({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,r]}}),s=TL({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,r]}}),a=TG({inputs:{real:e,imag:s},backend:n}),{real:i,imag:u}=I$(a,t,n),c=kx(i,u);for(let t=0;t<r;t++){const e=Nx(c,t);d[g*r+t]=e.real,h[g*r+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(u,"float32",d),m=n.makeTensorInfo(u,"float32",h),f=TG({inputs:{real:p,imag:m},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),f}function I$(e,t,n){const s=O(e.shape),a=n.data.get(e.dataId),r=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(S$(s)){const a=T$(r,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),r=n.makeTensorInfo([],"float32",or(s,"float32")),i=RG({inputs:{x:r},backend:n}),l=v$.kernelFunc({inputs:{a:e,b:r},backend:n}),u=v$.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:d}}return a}{const e=kx(r,i),n=N$(e,s,t);return Ix(n)}}function S$(e){return 0===(e&e-1)}function T$(e,t,n,s,a){if(1===n)return{real:e,imag:t};const r=kx(e,t),i=n/2,o=Sx(r),l=o.real,u=o.imag,c=[l.length],d=a.makeTensorInfo(c,"float32",l),h=a.makeTensorInfo(c,"float32",u),p=TG({inputs:{real:d,imag:h},backend:a}),m=Tx(r),f=m.real,g=m.imag,b=[f.length],y=a.makeTensorInfo(b,"float32",f),x=a.makeTensorInfo(b,"float32",g),w=TG({inputs:{real:y,imag:x},backend:a}),v=T$(l,u,i,s,a),k=v.real,I=v.imag,S=[k.length],T=a.makeTensorInfo(S,"float32",k),N=a.makeTensorInfo(S,"float32",I),C=TG({inputs:{real:T,imag:N},backend:a}),R=T$(f,g,i,s,a),E=R.real,G=R.imag,M=[E.length],L=a.makeTensorInfo(M,"float32",E),z=a.makeTensorInfo(M,"float32",G),W=TG({inputs:{real:L,imag:z},backend:a}),$=Rx(n,s),F=[$.real.length],V=a.makeTensorInfo(F,"float32",$.real),O=a.makeTensorInfo(F,"float32",$.imag),A=TG({inputs:{real:V,imag:O},backend:a}),X=DM({inputs:{a:A,b:W},backend:a}),D=AG({inputs:{a:C,b:X},backend:a}),Z=HL({inputs:{a:C,b:X},backend:a}),K=GG({inputs:{input:D},backend:a}),P=GG({inputs:{input:Z},backend:a}),_=mW({inputs:{input:D},backend:a}),B=mW({inputs:{input:Z},backend:a}),H=gW({inputs:[K,P],backend:a,attrs:{axis:0}}),U=gW({inputs:[_,B],backend:a,attrs:{axis:0}}),Y=a.data.get(H.dataId).values,j=a.data.get(U.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(Z),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(U),{real:Y,imag:j}}function N$(e,t,n){const s=new Float32Array(2*t);for(let a=0;a<t;a++){let r=0,i=0;for(let s=0;s<t;s++){const o=Ex(a*s,t,n),l=Nx(e,s);r+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(r/=t,i/=t),Cx(s,r,i,a)}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(e){const{inputs:t,backend:n}=e,{input:s}=t,a=O(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=pz({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=k$(o,!1,n),u=pz({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const R$={kernelName:At,backendName:"cpu",kernelFunc:C$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(e){const{backend:t,attrs:n}=e,{shape:s,value:a,dtype:r}=n,i=r||oe(a),o=J(i,O(s));return M$(o,a,i),t.makeTensorInfo(s,i,o)}const G$={kernelName:Xt,backendName:"cpu",kernelFunc:E$};function M$(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L$={kernelName:Dt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,a=n,r=Q(s.dtype,O(s.shape)),[i,o,l,u]=s.shape,c=a.data.get(s.dataId).values;for(let d=0;d<i;d++){const e=d*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const s=t*u;for(let a=0;a<u;a++){const i=Math.round(l-t-1),o=e+n+s+a;let d=c[o];if(i>=0&&i<l){const t=i*u,s=e+n+t+a;d=c[s]}r[o]=d}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:m}=s;let f=yW({inputs:{x:a,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=f;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=pz({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=AG({inputs:{a:f,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else f=AG({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=f;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=pz({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=hz(n,f,p,e,m),n.disposeIntermediateTensorInfo(e)}else f=hz(n,f,p,o,m);n.disposeIntermediateTensorInfo(e)}return f}const W$={kernelName:js,backendName:"cpu",kernelFunc:z$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:m}=s;let f=PW({inputs:{x:a,filter:r},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=f;f=AG({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=f;f=hz(n,f,p,o,m),n.disposeIntermediateTensorInfo(e)}return f}const F$={kernelName:Qs,backendName:"cpu",kernelFunc:$$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,r=O(s.shape),i=a.shape,o=i[i.length-1],[l,u,c,d]=Ny(s,a);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const h=n.data.get(a.dataId).values,p=n.bufferSync(s),m=mM(h,p,s.dtype,u,o,c,d,s.shape,r);return n.makeTensorInfo(l,s.dtype,m.values)}const O$={kernelName:Bt,backendName:"cpu",kernelFunc:V$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:r}=t,{axis:i,batchDims:o}=s;yG([a,r],"gatherV2");const l=Y(i,a.shape)[0],u=n.data.get(r.dataId).values,c=a.shape[l];for(let w=0;w<u.length;++w){const e=u[w];$(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let d=o;null==o&&(d=0);const h=O(r.shape),p=tw(a,r,l,d),m=pz({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=pz({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],b=n.bufferSync(f),y=n.bufferSync(m),x=fM(y,b,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,x.dtype,x.values)}const X$={kernelName:_t,backendName:"cpu",kernelFunc:A$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(e){const{inputs:t,backend:n}=e,{input:s}=t,a=O(s.shape),r=s.shape[s.shape.length-1],i=a/r,o=pz({inputs:{x:s},backend:n,attrs:{shape:[i,r]}}),l=k$(o,!0,n),u=pz({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const Z$={kernelName:jt,backendName:"cpu",kernelFunc:D$},K$=HG(Jt,(e=>Number.isFinite(e)?1:0),"bool"),P$={kernelName:Jt,backendName:"cpu",kernelFunc:K$},_$=HG(qt,(e=>Math.abs(e)===1/0?1:0),"bool"),B$={kernelName:qt,backendName:"cpu",kernelFunc:_$},H$=HG(en,(e=>Number.isNaN(e)?1:0),"bool"),U$={kernelName:en,backendName:"cpu",kernelFunc:H$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Y$(e){const{backend:t,attrs:n}=e,{start:s,stop:a,num:r}=n,i=RM(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const j$={kernelName:an,backendName:"cpu",kernelFunc:Y$},Q$=HG(on,(e=>Math.log1p(e))),J$={kernelName:on,backendName:"cpu",kernelFunc:Q$},q$=SG(((e,t)=>e&&t)),eF=$G(ln,q$,null,"bool"),tF={kernelName:ln,backendName:"cpu",kernelFunc:eF},nF=HG(un,(e=>e?0:1),"bool"),sF={kernelName:un,backendName:"cpu",kernelFunc:nF},aF=SG(((e,t)=>e||t)),rF=$G(cn,aF,null,"bool"),iF={kernelName:cn,backendName:"cpu",kernelFunc:rF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:r,bias:i,alpha:o,beta:l}=s;yG(a,"LRN");const u=a.shape[3],c=u-1,d=n.data.get(a.dataId).values,h=O(a.shape),p=new Float32Array(h);function m(e){const t=e%u;let n=e-t+Math.max(0,t-r);const s=e-t+Math.min(t+r,c);let a=0;for(;n<=s;n++){const e=d[n];a+=e*e}return a}for(let f=0;f<h;f++){const e=m(f),t=d[f]*Math.pow(i+o*e,-l);p[f]=t}return n.makeTensorInfo(a.shape,a.dtype,p)}const lF={kernelName:mn,backendName:"cpu",kernelFunc:oF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,y:r,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;yG(i,"LRNGrad");const d=O(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values,g=new Float32Array(d),b=d;for(let y=0;y<b;y++){const e=y%h,t=y-e+Math.max(0,e-o),n=y-e+Math.min(h,e+o+1);let s=0;for(let a=t;a<n;a++)s+=Math.pow(m[a],2);s=u*s+l;for(let a=t;a<n;a++){let e=-2*u*c*m[a]*f[y]/s;y===a&&(e+=Math.pow(s,-c)),e*=p[y],g[a]+=e}}return n.makeTensorInfo(i.shape,a.dtype,g)}const cF={kernelName:fn,backendName:"cpu",kernelFunc:uF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:r,keepDims:i}=s,o=n;let l=a.shape;const u=l.length,c=Y(r,l);let d=c;const h=id(d,u);let p=o.data.get(a.dataId).values;if(null!=h){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[h[t]];p=YM(p,l,a.dtype,h,e),d=ld(d.length,u),l=e}yG(a,"max"),rd("max",d,u);const[m,f]=sd(l,d),g=O(f),b=LM(p,g,m,a.dtype),y=o.write(b,m,a.dtype);let x=m;return i&&(x=ad(m,c)),{dataId:y,shape:x,dtype:a.dtype}}const hF={kernelName:bn,backendName:"cpu",kernelFunc:dF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;yG(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;$(du(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Ql(a.shape,r,i,u,o,l);let d;if(1===c.filterWidth&&1===c.filterHeight&&D(c.inShape,c.outShape))d=RG({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ce(a.shape),s=Pz(e,a.shape,a.dtype,t,c,"max");d=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return d}const mF={kernelName:xn,backendName:"cpu",kernelFunc:pF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;yG(a,"maxPool3d");const c=Jl(a.shape,r,i,1,o,l,u),d=n.data.get(a.dataId).values,h=Bz(d,a.shape,a.dtype,ce(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}const gF={kernelName:vn,backendName:"cpu",kernelFunc:fF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;yG([a,r],"maxPool3DGrad");const c=Jl(r.shape,i,o,1,l,u),d=n.bufferSync(r),h=Hz(d,c),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,b=c.dilationHeight,y=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=x-1-c.padInfo.front,I=v-1-c.padInfo.left,S=w-1-c.padInfo.top,T=dl(r.shape,"float32"),N=n.bufferSync(a);for(let C=0;C<c.batchSize;++C)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const a=t-k,r=n-S,i=s-I;let o=0;for(let t=0;t<x;t+=g){const n=(a+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let s=0;s<w;s+=b){const a=(r+s)/m;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let r=0;r<v;r+=y){const l=(i+r)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=x*w*v-1-h.get(C,n,a,l,e),d=t*w*v+s*v+r,p=u===d?1:0;if(0===p)continue;const m=N.get(C,n,a,l,e);o+=m*p}}}T.set(o,C,t,n,s,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const yF={kernelName:kn,backendName:"cpu",kernelFunc:bF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xF(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r,output:i}=t,o=r;yG([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=Ql(o.shape,l,u,1,c,d),p=n.data.get(o.dataId).values,m=dl(h.outShape,o.dtype,_z(p,o.shape,o.dtype,h).values),f=h.strideHeight,g=h.strideWidth,b=h.dilationHeight,y=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,k=x-1-h.padInfo.top,I=dl(o.shape,"float32"),S=n.data.get(a.dataId).values,T=dl(a.shape,"float32",S);for(let N=0;N<h.batchSize;++N)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const s=t-k,a=n-v;let r=0;for(let t=0;t<x;t+=b){const n=(s+t)/f;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let s=0;s<w;s+=y){const i=(a+s)/g;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const o=x*w-1-m.get(N,n,i,e),l=t*w+s,u=o===l?1:0;if(0===u)continue;const c=T.get(N,n,i,e);r+=c*u}}I.set(r,N,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const wF={kernelName:wn,backendName:"cpu",kernelFunc:xF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(e,t,n,s,a){const r=ce(t),i=Pz(e,t,n,r,a,"max"),o=_z(e,t,n,a,!0,s);return[i.values,o.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF={kernelName:In,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=t,l=n;yG(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Ql(s.shape,a,r,[1,1],i),[d,h]=vF(u,s.shape,s.dtype,o,c),p=l.write(d,c.outShape,s.dtype),m=l.write(h,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:m,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s,o=Y(r,a.shape),l=sd(a.shape,o)[1],u=O(l),c=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(d);const h=zG({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(h);const p=w$({inputs:{a:h,b:d},backend:n});c.push(p);const m=s$({inputs:{x:p},backend:n,attrs:{axis:r,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const SF={kernelName:Sn,backendName:"cpu",kernelFunc:IF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s;yG(a,"min");const o=Y(r,a.shape);let l=o;const u=id(l,a.shape.length);let c=a;null!=u&&(c=jM({inputs:{x:a},backend:n,attrs:{perm:u}}),l=ld(l.length,a.shape.length)),rd("min",l,c.shape.length);const[d,h]=sd(c.shape,l),p=O(h),m=fe(O(d),c.dtype),f=n.data.get(c.dataId).values;for(let b=0;b<m.length;++b){const e=b*p;let t=f[e];for(let n=0;n<p;++n){const s=f[e+n];(Number.isNaN(s)||s<t)&&(t=s)}m[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,m);if(i){const e=ad(d,o),t=pz({inputs:{x:g},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(g),t}return g}const NF={kernelName:Tn,backendName:"cpu",kernelFunc:TF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:r,mode:i}=s;yG(a,"mirrorPad");const o=r.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=r.map((e=>e[0])),u=r.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=ce(a.shape),m=O(o),f=o.length,g=ce(o),b=Q(a.dtype,m);for(let y=0;y<m;y++){let e=xe(y,f,g);for(let n=0;n<f;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=ye(e,h,p);b[y]=d[t]}return{dataId:n.write(b,o,a.dtype),shape:o,dtype:a.dtype}}const RF={kernelName:Cn,backendName:"cpu",kernelFunc:CF},EF=SG(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),GF=$G(Rn,EF),MF={kernelName:Rn,backendName:"cpu",kernelFunc:GF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LF(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:r}=s,i=a.shape.length;let o=r;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=Y([o],a.shape),u=dF({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=ad(u.shape,l),d=pz({inputs:{x:u},backend:n,attrs:{shape:c}}),h=HL({inputs:{a:a,b:d},backend:n}),p=sM({inputs:{x:h},backend:n}),m=s$({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),f=pz({inputs:{x:m},backend:n,attrs:{shape:c}}),g=w$({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}const zF={kernelName:vs,backendName:"cpu",kernelFunc:LF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:r,seed:i,normalized:o}=s;yG(a,"multinomial");const l=o?a:LF({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=n.data.get(l.dataId).values,h=[u,r],p=fe(O(h),"int32");for(let m=0;m<u;++m){const e=m*c,t=new Float32Array(c-1);t[0]=d[e];for(let a=1;a<t.length;++a)t[a]=t[a-1]+d[e+a];const n=Pp.alea(i.toString()),s=m*r;for(let a=0;a<r;++a){const e=n();p[s+a]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[s+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",p)}const $F={kernelName:En,backendName:"cpu",kernelFunc:WF},FF=pg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;yG(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,{selectedIndices:d}=FF(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const OF={kernelName:zn,backendName:"cpu",kernelFunc:VF},AF=mg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;yG(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(r.dataId).values,{selectedIndices:h,validOutputs:p}=AF(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const DF={kernelName:Wn,backendName:"cpu",kernelFunc:XF},ZF=fg;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;yG(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(r.dataId).values,h=i,p=o,m=l,f=u,{selectedIndices:g,selectedScores:b}=ZF(c,d,h,p,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const PF={kernelName:$n,backendName:"cpu",kernelFunc:KF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{dtype:r,depth:i,onValue:o,offValue:l}=s;yG(a,"oneHot");const u=O(a.shape),c=new Float32Array(u*i);c.fill(l);const d=n.data.get(a.dataId).values;for(let h=0;h<u;++h)d[h]>=0&&d[h]<i&&(c[h*i+d[h]]=o);return n.makeTensorInfo([...a.shape,i],r,c)}const BF={kernelName:Vn,backendName:"cpu",kernelFunc:_F};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=GG({inputs:{input:s},backend:n}),t=HF({inputs:{x:e},backend:n}),a=mW({inputs:{input:s},backend:n}),r=HF({inputs:{x:a},backend:n}),i=TG({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}return E$({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const UF={kernelName:_s,backendName:"cpu",kernelFunc:HF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=GG({inputs:{input:s},backend:n}),t=YF({inputs:{x:e},backend:n}),a=mW({inputs:{input:s},backend:n}),r=HF({inputs:{x:a},backend:n}),i=TG({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}return E$({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const jF={kernelName:Fn,backendName:"cpu",kernelFunc:YF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return b$({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach((e=>{F(r,e.shape,"All tensors passed to stack must have matching shapes"),$(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=b$({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),u=gW({inputs:l,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const JF={kernelName:On,backendName:"cpu",kernelFunc:QF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:r,constantValue:i}=s;yG(a,"pad");const o=r.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=r.map((e=>e[0])),u=n.data.get(a.dataId).values,c=O(a.shape),d=a.shape.length,h=ce(a.shape),p=O(o),m=o.length,f=ce(o),g=Q(a.dtype,p);0!==i&&g.fill(i);for(let b=0;b<c;b++){const e=xe(b,d,h).map(((e,t)=>e+l[t])),t=ye(e,m,f);g[t]=u[b]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}const eV={kernelName:An,backendName:"cpu",kernelFunc:qF},tV=SG(((e,t)=>Math.pow(e,t))),nV=$G(Dn,tV),sV={kernelName:Dn,backendName:"cpu",kernelFunc:nV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aV(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,o=a.map((e=>n.data.get(e.dataId).values)),l=a.map((e=>e.shape)),u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,[d,h,p]=lL(o,l,u,r.shape,r.dtype,c,i.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),f=n.makeTensorInfo(p,r.dtype,h);return m.concat([f])}const rV={kernelName:Pn,backendName:"cpu",kernelFunc:aV};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(e){const{inputs:t,backend:n}=e,{starts:s,limits:a,deltas:r}=t,i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=cL(i,s.shape,s.dtype,o,a.shape,l,r.shape),d=n.makeTensorInfo([u.length],"int32",u),h=n.makeTensorInfo([c.length],s.dtype,c);return[d,h]}const oV={kernelName:_n,backendName:"cpu",kernelFunc:iV};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(e){const{inputs:t,backend:n,attrs:s}=e,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,h=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[m,f]=fL(u,a.shape,c,r.shape,r.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(m,r.dtype,f)}const uV={kernelName:Bn,backendName:"cpu",kernelFunc:lV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(e){const{backend:t,attrs:n}=e,{start:s,stop:a,dtype:r,step:i}=n,o=gL(s,a,i,r);return t.makeTensorInfo([o.length],r,o)}const dV={kernelName:Hn,backendName:"cpu",kernelFunc:cV},hV=HG(Yn,(e=>1/e)),pV={kernelName:Yn,backendName:"cpu",kernelFunc:hV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mV(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:o}=s;yG(a,"resizeBilinear");const l=ce(a.shape),[u,c]=o,[d,h,p,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(O([d,u,c,m])),b=[r&&u>1?h-1:h,r&&c>1?p-1:p],y=[r&&u>1?u-1:u,r&&c>1?c-1:c];let x=0;const w=b[0]/y[0],v=b[1]/y[1];for(let k=0;k<d;k++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(h-1,Math.ceil(t)),r=k*l[0]+n*l[1],o=k*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,u=Math.min(p-1,Math.ceil(t)),c=r+n*l[2],d=o+n*l[2],h=r+u*l[2],b=o+u*l[2];for(let e=0;e<m;e++){const t=f[c+e],n=f[d+e],r=f[h+e],i=f[b+e],o=t+(r-t)*a,l=n+(i-n)*a,u=o+(l-o)*s;g[x++]=u}}}return n.makeTensorInfo([d,u,c,m],"float32",g)}const fV={kernelName:es,backendName:"cpu",kernelFunc:mV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:i}=s;yG([r,a],"resizeBilinearGrad");const o=ce(a.shape),[l,u,c,d]=a.shape,[,h,p]=r.shape,m=new Float32Array(l*u*c*d),f=[i&&h>1?u-1:u,i&&p>1?c-1:c],g=[i&&h>1?h-1:h,i&&p>1?p-1:p],b=f[0]/g[0],y=f[1]/g[1],x=n.data.get(r.dataId).values;let w=0;for(let v=0;v<l;v++){const e=v*o[0];for(let t=0;t<h;t++){const n=t*b,s=Math.floor(n),a=Math.min(Math.ceil(n),u-1),r=e+s*o[1],i=e+a*o[1],l=n-s,h=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),a=t-n,u=1-a,p=r+n*o[2],f=r+s*o[2],g=i+n*o[2],b=i+s*o[2],v=h*u,k=h*a,I=l*u,S=l*a;for(let e=0;e<d;e++){const t=x[w++];m[p+e]+=t*v,m[f+e]+=t*k,m[g+e]+=t*I,m[b+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,d],"float32",m)}const bV={kernelName:ts,backendName:"cpu",kernelFunc:gV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:o}=s;yG(a,"resizeNearestNeighbor");const l=ce(a.shape),[u,c]=o,[d,h,p,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(d*u*c*m),b=[r&&u>1?h-1:h,r&&c>1?p-1:p],y=[r&&u>1?u-1:u,r&&c>1?c-1:c],x=b[0]/y[0],w=b[1]/y[1];let v=0;for(let k=0;k<d;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let s=Math.min(h-1,r?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const a=e+s*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,r?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=a+n*l[2];for(let e=0;e<m;e++){const t=f[s+e];g[v++]=t}}}}return n.makeTensorInfo([d,u,c,m],a.dtype,g)}const xV={kernelName:Jn,backendName:"cpu",kernelFunc:yV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:i}=s;yG([r,a],"resizeNearestNeighborGrad");const o=ce(a.shape),l=ce(r.shape),[u,c,d,h]=a.shape,[,p,m]=r.shape,f=new Float32Array(u*c*d*h),g=n.data.get(r.dataId).values,b=[i&&p>1?c-1:c,i&&m>1?d-1:d],y=[i&&p>1?p-1:p,i&&m>1?m-1:m],x=b[0]/y[0],w=b[1]/y[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let T=0;T<u;T++){const e=T*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*v),a=Math.floor(s-I/2);for(let r=0;r<d;r++){const s=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-S/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){const u=s+a;if(u<0||u>=p)continue;const h=e+u*l[1],f=u*x,y=Math.min(c-1,i?Math.round(f):Math.floor(f));if(t===y)for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=m)continue;const s=h+t*l[2],a=t*w,u=Math.min(d-1,i?Math.round(a):Math.floor(a));r===u&&(o+=g[s+n])}}f[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,f)}const vV={kernelName:qn,backendName:"cpu",kernelFunc:wV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:r}=s;yG(a,"reverse");const i=a.shape.length,o=Y(r,a.shape);if(0===i)return RG({inputs:{x:a},backend:n});const l=new Mr(a.shape,a.dtype),u=n.bufferSync(a);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=a.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const IV={kernelName:ss,backendName:"cpu",kernelFunc:kV},SV={kernelName:Us,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:r,center:i}=t,o=n,l=Q(s.dtype,O(s.shape)),[u,c,d,h]=s.shape,[p,m]=lx(i,c,d),f=255,g=Math.sin(a),b=Math.cos(a),y=o.data.get(s.dataId).values;for(let x=0;x<u;x++){const e=x*d*c*h;for(let t=0;t<c;t++){const n=t*(d*h);for(let s=0;s<d;s++){const a=s*h;for(let i=0;i<h;i++){const o=[u,t,s,i],x=o[2],w=o[1];let v=(x-p)*b-(w-m)*g,k=(x-p)*g+(w-m)*b;v=Math.round(v+p),k=Math.round(k+m);let I=r;if("number"!=typeof r&&(I=3===i?f:r[i]),v>=0&&v<d&&k>=0&&k<c){const t=k*(d*h),n=v*h,s=e+t+n+i;I=y[s]}const S=e+n+a+i;l[S]=I}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},TV=HG(as,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),NV={kernelName:as,backendName:"cpu",kernelFunc:TV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CV(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=of(r,a,i),h=!0,p=n.bufferSync(a),m=n.bufferSync(r),f=wL(p,m,i,d,u,l,o,c,0,h);return n.makeTensorInfo(i,f.dtype,f.values)}const RV={kernelName:is,backendName:"cpu",kernelFunc:CV};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(e,t){let n=0,s=e.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),e[a]<t?n=a+1:s=a;return s}function GV(e,t){let n=0,s=e.length,a=0;for(;n<s;)a=Math.floor((n+s)/2),e[a]<=t?n=a+1:s=a;return s}function MV(e,t,n,s,a,r){const i=J("int32",n*a);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===r?EV(n,t[e+l]):GV(n,t[e+l])}return i}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:a,values:r}=t,{side:i}=s,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=MV(o,l,a.shape[0],a.shape[1],r.shape[1],i);return n.makeTensorInfo(r.shape,"int32",u)}const zV={kernelName:ls,backendName:"cpu",kernelFunc:LV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:r}=t;yG([s,a,r],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=_r(a.dtype,r.dtype),d=fe(O(a.shape),c);let h=0;const p=0===i||i>1||1===a.shape.length?1:O(a.shape.slice(1));for(let m=0;m<o.length;m++)for(let e=0;e<p;e++)1===o[m]?d[h++]=l[m]:d[h++]=u[m];return n.makeTensorInfo(a.shape,c,d)}const $V={kernelName:us,backendName:"cpu",kernelFunc:WV},FV=mx,VV=fx,OV=HG(cs,(e=>e>=0?VV*e:FV*(Math.exp(e)-1))),AV={kernelName:cs,backendName:"cpu",kernelFunc:OV},XV=HG(ms,(e=>e<0?-1:e>0?1:0)),DV={kernelName:ms,backendName:"cpu",kernelFunc:XV},ZV=HG(hs,(e=>Math.sin(e))),KV={kernelName:hs,backendName:"cpu",kernelFunc:ZV},PV=HG(ps,(e=>Math.sinh(e))),_V={kernelName:ps,backendName:"cpu",kernelFunc:PV},BV=1.1920928955078125e-7,HV=Math.log(BV)+2,UV=HG(gs,(e=>{const t=e>-HV,n=e<HV,s=Math.exp(e);let a;return a=n?s:t?e:Math.log(1+s),a})),YV={kernelName:gs,backendName:"cpu",kernelFunc:UV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jV(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,paddings:i}=s;yG([a],"spaceToBatchND");const o=O(r),l=[[0,0]];l.push(...i);for(let g=1+r.length;g<a.shape.length;++g)l.push([0,0]);const u=eV.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),c=ux(u.shape,r,o,!1),d=cx(c.length,r.length,!1),h=dx(u.shape,r,o,!1),p=pz({inputs:{x:u},backend:n,attrs:{shape:c}}),m=jM({inputs:{x:p},backend:n,attrs:{perm:d}}),f=pz({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),f}const QV={kernelName:xs,backendName:"cpu",kernelFunc:jV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(e){const{inputs:t,backend:n}=e,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(1!==r.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${r.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,m,f]=CL(o,s.shape,s.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map((e=>Number(e))))),n.makeTensorInfo([f.length],s.dtype,new Int32Array(f))]}const qV={kernelName:ks,backendName:"cpu",kernelFunc:JV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:a,newShape:r}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(r.dataId).values),[u,c,d]=RL(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([d.length],r.dtype,new Int32Array(d))]}const tO={kernelName:Is,backendName:"cpu",kernelFunc:eO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=EL(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const sO={kernelName:Ss,backendName:"cpu",kernelFunc:nO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,[u,c]=EL(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const rO={kernelName:Ts,backendName:"cpu",kernelFunc:aO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=of(r,a,o),p=!1,m=n.bufferSync(a);let f;switch(r.dtype){case"bool":{const e=n.bufferSync(r),t=!!n.data.get(i.dataId).values[0];f=wL(m,e,o,h,c,u,l,d,t,p);break}case"float32":{const e=n.bufferSync(r),t=n.data.get(i.dataId).values[0];f=wL(m,e,o,h,c,u,l,d,t,p);break}case"int32":{const e=n.bufferSync(r),t=n.data.get(i.dataId).values[0];f=wL(m,e,o,h,c,u,l,d,t,p);break}case"string":{const e=n.bufferSync(r),t=pr(n.data.get(i.dataId).values[0]);f=wL(m,e,o,h,c,u,l,d,t,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}const oO={kernelName:Ns,backendName:"cpu",kernelFunc:iO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lO(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,o=Y(i,a.shape)[0],l=Xx(a,r,o),u=new Array(a.shape.length).fill(0),c=a.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=TL({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}const uO={kernelName:ws,backendName:"cpu",kernelFunc:lO},cO={kernelName:Rs,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;yG(n,"square");const a=s.data.get(n.dataId).values,r=new Float32Array(a.length);for(let i=0;i<a.length;++i){const e=a[i];r[i]=e*e}return{dataId:s.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},dO=HG(Bs,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),hO={kernelName:Bs,backendName:"cpu",kernelFunc:dO};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pO(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s;yG(a,"stridedSlice");const{finalShapeSparse:p,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:b,begin:y,end:x,strides:w}=_y(a.shape,r,i,o,l,u,c,d,h);let v;if(f)v=pz({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||b){$(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Ly(y,x,w),t=TL({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});v=pz({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(a),t=AL(p,e,w,y);v=n.makeTensorInfo(m,t.dtype,t.values)}return v}const mO={kernelName:Gs,backendName:"cpu",kernelFunc:pO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(e){const{inputs:t,backend:n,attrs:s}=e,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[m,f]=DL(h,p,a,r,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",f)]}const gO={kernelName:Ms,backendName:"cpu",kernelFunc:fO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,d]=KL(o,l,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const yO={kernelName:Ls,backendName:"cpu",kernelFunc:bO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:a}=s,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(r.dataId).values,o=PL(i,a);return n.makeTensorInfo(r.shape,"int32",o)}const wO={kernelName:zs,backendName:"cpu",kernelFunc:xO},vO=HG($s,(e=>Math.tan(e))),kO={kernelName:$s,backendName:"cpu",kernelFunc:vO},IO=HG(Fs,(e=>Math.tanh(e))),SO={kernelName:Fs,backendName:"cpu",kernelFunc:IO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TO(e){const{inputs:t,backend:n}=e,{tensor:s,indices:a,updates:r}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=of(r,a,s.shape),d=!1,h=n.bufferSync(a),p=n.bufferSync(r),m=n.bufferSync(s),f=wL(h,p,s.shape,c,l,o,i,u,m,d);return n.makeTensorInfo(s.shape,f.dtype,f.values)}const NO={kernelName:os,backendName:"cpu",kernelFunc:TO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:r}=s;yG(a,"tile");const i=YL(n.bufferSync(a),r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const RO={kernelName:Vs,backendName:"cpu",kernelFunc:CO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:r,sorted:i}=s;yG(a,"topk");const o=n.data.get(a.dataId).values,[l,u]=JL(o,a.shape,a.dtype,r,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const GO={kernelName:Os,backendName:"cpu",kernelFunc:EO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(e){const{inputs:t,attrs:n,backend:s}=e,{image:a,transforms:r}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,d,h,p]=a.shape,[m,f]=u??[d,h],g=[c,m,f,p],b=ce(a.shape),y=b[0],x=b[1],w=b[2],v=ce(g),k=v[0],I=v[1],S=v[2],T=Q(a.dtype,O(g));T.fill(l);const N=s.data.get(a.dataId).values,C=s.data.get(r.dataId).values;for(let R=0;R<c;++R){const e=1===r.shape[0]?C:C.subarray(8*R,8*R+8);for(let t=0;t<m;++t)for(let n=0;n<f;++n)for(let s=0;s<p;++s){let a;const r=e[6]*n+e[7]*t+1;if(0===r)continue;const u=(e[0]*n+e[1]*t+e[2])/r,c=(e[3]*n+e[4]*t+e[5])/r,p=zO(u,h,o),m=zO(c,d,o);switch(i){case"nearest":a=AO(N,d,h,y,x,w,R,m,p,s,l);break;case"bilinear":a=XO(N,d,h,y,x,w,R,m,p,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const f=R*k+t*I+n*S+s;T[f]=a}return s.makeTensorInfo(g,a.dtype,T)}return{dataId:s.write(T,g,a.dtype),shape:a.shape,dtype:a.dtype}}const LO={kernelName:As,backendName:"cpu",kernelFunc:MO};function zO(e,t,n){switch(n){case"reflect":return WO(e,t);case"wrap":return $O(e,t);case"nearest":return VO(e,t);case"constant":default:return FO(e)}}function WO(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return E(0,n,t-1)}function $O(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return E(0,n,t-1)}function FO(e,t){return e}function VO(e,t){return E(0,e,t-1)}function OO(e,t,n,s,a,r,i,o,l,u,c){const d=i*s+o*a+l*r+u;return 0<=o&&o<t&&0<=l&&l<n?e[d]:c}function AO(e,t,n,s,a,r,i,o,l,u,c){const d=Math.round(o),h=Math.round(l);return OO(e,t,n,s,a,r,i,d,h,u,c)}function XO(e,t,n,s,a,r,i,o,l,u,c){const d=Math.floor(o),h=Math.floor(l),p=d+1,m=h+1,f=(m-l)*OO(e,t,n,s,a,r,i,d,h,u,c)+(l-h)*OO(e,t,n,s,a,r,i,d,m,u,c),g=(m-l)*OO(e,t,n,s,a,r,i,p,h,u,c)+(l-h)*OO(e,t,n,s,a,r,i,p,m,u,c);return(p-o)*f+(o-d)*g}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(e){const{inputs:t,attrs:n,backend:s}=e,{axis:a}=n,{x:r}=t;yG(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:o,outputShape:l,indices:u}=qL(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const ZO={kernelName:Ds,backendName:"cpu",kernelFunc:DO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(e){const{inputs:t,backend:n,attrs:s}=e,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,o=a.shape[r],l=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==r&&(l[u++]=a.shape[p]);const c=new Array(i).fill(0),d=a.shape.slice();d[r]=1;const h=new Array(o);for(let p=0;p<h.length;p++){c[r]=p;const e=TL({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});h[p]=pz({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return h}const PO={kernelName:Zs,backendName:"cpu",kernelFunc:KO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:r}=t,{numSegments:i}=s;yG(a,"unsortedSegmentSum");const o=a.shape.length,l=r.shape.length,u=[],c=[],d=o-l;let h=r;for(let m=0;m<d;++m){const e=b$({inputs:{input:h},backend:n,attrs:{dim:m+1}});h=e,c.push(e)}for(let m=0;m<i;++m){const e=or(m,"int32"),t=n.makeTensorInfo([],"int32",e),s=eM({inputs:{a:t,b:h},backend:n}),r=zG({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),i=DM({inputs:{a:r,b:a},backend:n}),o=s$({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});u.push(o),c.push(t),c.push(s),c.push(r),c.push(i),c.push(o)}const p=QF({inputs:u,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const BO={kernelName:Ks,backendName:"cpu",kernelFunc:_O},HO=[yz,IG,wz,kz,XG,Sz,Nz,Rz,Gz,Lz,Wz,Fz,Oz,Dz,Kz,Yz,Qz,qz,tW,gz,sW,rW,oW,_G,uW,WG,QG,dW,NG,pW,bW,xW,vW,IW,TW,CW,EW,MW,zW,$W,VW,AW,DW,KW,_W,HW,YW,QW,JW,qW,e$,n$,i$,nz,l$,tM,g$,aM,y$,oM,R$,G$,L$,cM,pM,W$,F$,O$,X$,yM,vM,EG,Z$,fW,P$,B$,U$,az,SM,CM,j$,MM,J$,tF,sF,iF,lF,cF,hF,$M,mF,gF,yF,wF,kF,SF,NF,OM,RF,MF,$F,ZM,_M,OF,DF,PF,UM,BF,jF,JF,eV,sV,oz,eL,rV,oV,uV,dV,MG,v$,pV,uz,dz,mz,fV,bV,xV,vV,IV,SV,NV,xL,RV,zV,$V,AV,IL,DV,KV,_V,NL,zF,YV,QV,qV,tO,sO,rO,oO,uO,LL,cO,$L,OL,hO,mO,gO,yO,wO,UL,a$,kO,SO,NO,RO,GO,LO,QM,ZO,PO,BO,UF];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const _ee of HO)ra(_ee);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO={},YO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function jO(e,t){UO[e]=t}function QO(e,t){if(!(e in UO)||null!=t){const n=qO(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;UO[e]=n}const n=UO[e];return null==n||n.isContextLost()?(delete UO[e],QO(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),UO[e])}function JO(e){if(!Ne().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&2===e)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function qO(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=t??JO(e);return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete UO[e]}),!1),Ne().getBool("SOFTWARE_WEBGL_ENABLED")&&(YO.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",YO)||n.getContext("experimental-webgl",YO):n.getContext("webgl2",YO)
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}var eA,tA,nA;function sA(e,t){return[t,e]}function aA(e,t){return e*t}function rA(e){const t=O(e),n=Math.ceil(t/4);return P(n)}function iA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function oA(e,t){const[n,s]=iA(e,t);return n*s*4}function lA(e,t){const n=e;let s,a,r,i,o,l,u,c,d,h;return 2===Ne().getNumber("WEBGL_VERSION")?(s=n.R32F,a=n.R16F,r=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT,l=n.RGBA8):(s=e.RGBA,a=e.RGBA,r=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function uA(e,t){const n=t();return Ne().getBool("DEBUG")&&cA(e),n}function cA(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+mA(e,t))}(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(eA||(eA={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(tA||(tA={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(nA||(nA={}));const dA=5.96e-8,hA=65504;function pA(e){return!!(Ne().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||dA<Math.abs(e)&&Math.abs(e)<hA)}function mA(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function fA(e,t){return XA(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function gA(e,t){const n=XA(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(uA(e,(()=>e.shaderSource(n,t))),uA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function bA(e,t){const n=XA(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(uA(e,(()=>e.shaderSource(n,t))),uA(e,(()=>e.compileShader(n))),Ne().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw xA(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const yA=/ERROR: [0-9]+:([0-9]+):/g;function xA(e,t){const n=yA.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),r=a.length.toString().length+2,i=a.map(((e,t)=>B((t+1).toString(),r)+e));let o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${B(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function wA(e){return XA(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function vA(e,t){if(uA(e,(()=>e.linkProgram(t))),!Ne().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function kA(e,t){if(uA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function IA(e,t){const n=XA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return uA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),uA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function SA(e,t){const n=XA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return uA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),uA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function TA(){return 2===Ne().getNumber("WEBGL_VERSION")?1:4}function NA(e){return XA(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function CA(e,t){const n=Ne().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const s=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function RA(e){return XA(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function EA(e,t,n,s,a,r,i){const o=e.getAttribLocation(t,n);return-1!==o&&(uA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),uA(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,r,i))),uA(e,(()=>e.enableVertexAttribArray(o))),!0)}function GA(e,t,n){DA(e,n),uA(e,(()=>e.activeTexture(e.TEXTURE0+n))),uA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function MA(e,t){DA(e,t),uA(e,(()=>e.activeTexture(e.TEXTURE0+t))),uA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function LA(e,t,n){return XA(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function zA(e,t,n){return e.getUniformLocation(t,n)}function WA(e,t,n,s){uA(e,(()=>GA(e,t,s))),uA(e,(()=>e.uniform1i(n,s)))}function $A(e){uA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),uA(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),uA(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function FA(e,t,n){uA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),uA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function VA(e,t){uA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),uA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function OA(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+AA(e,t))}function AA(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function XA(e,t,n){const s=uA(e,(()=>t()));if(null==s)throw new Error(n);return s}function DA(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function ZA(e,t=2){return O(e.slice(0,e.length-t))}function KA(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function PA(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ZA(e),...KA(e)]),t}function _A(e,t=!1){let n=Ne().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=Ne().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&Ne().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,e=e.map(((t,n)=>n>=e.length-2?G(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length&&(e=j(e).newShape);let a=O(e),r=null;e.length<=1&&a<=n?r=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?r=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?r=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?r=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?r=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(r=[e[0],e[1]*e[2]*e[3]]);const i=null!=r&&Math.max(...r)>s&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(null==r||i)if(t){const t=ZA(e);let n=2,s=2;e.length&&([n,s]=KA(e)),a=t*(n/2)*(s/2),r=P(a).map((e=>2*e))}else r=P(a);return r}function BA(e){return e%2===0}function HA(e,t){if(e=e.slice(-2),t=t.slice(-2),D(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],s=t[t.length-1];if(n===s||BA(n)&&BA(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&BA(e[0])&&BA(t[0])}let UA,YA;function jA(e){if(null==UA){const t=QO(e);UA=t.getParameter(t.MAX_TEXTURE_SIZE)}return UA}function QA(){UA=null}function JA(){YA=null}function qA(e){if(null==YA){const t=QO(e);YA=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,YA)}function eX(e){if(0===e)return 0;let t;const n=QO(e);return t=tX(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:tX(n,"EXT_disjoint_timer_query")?1:0,t}function tX(e,t){return null!=e.getExtension(t)}function nX(e){try{if(null!=QO(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function sX(e){if(0===e)return!1;const t=QO(e);if(1===e){if(!tX(t,"OES_texture_float"))return!1}else if(!tX(t,"EXT_color_buffer_float"))return!1;return rX(t)}function aX(e){if(0===e)return!1;const t=QO(e);if(1!==e){if(tX(t,"EXT_color_buffer_float"))return rX(t);const e="EXT_color_buffer_half_float";if(tX(t,e)){const n=t.getExtension(e);return iX(t,n)}return!1}return!(!tX(t,"OES_texture_float")||!tX(t,"WEBGL_color_buffer_float"))&&rX(t)}function rX(e){const t=lA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),a}function iX(e,t){const n=lA(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(a),r}function oX(e){return 2===e&&null!=QO(e).fenceSync}function lX(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&$("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const uX=Object.freeze(Object.defineProperty({__proto__:null,assertNotComplex:lX,bindCanvasToFramebuffer:$A,bindColorTextureToFramebuffer:FA,bindTextureToProgramUniformSampler:WA,bindTextureUnit:GA,bindVertexBufferToProgramAttribute:EA,callAndCheck:uA,canBeRepresented:pA,createFragmentShader:bA,createFramebuffer:RA,createProgram:wA,createStaticIndexBuffer:SA,createStaticVertexBuffer:IA,createTexture:NA,createVertexShader:gA,getBatchDim:ZA,getExtensionOrThrow:fA,getFramebufferErrorMessage:AA,getMaxTexturesInShader:qA,getNumChannels:TA,getProgramUniformLocation:zA,getProgramUniformLocationOrThrow:LA,getRowsCols:KA,getShapeAs3D:PA,getTextureShapeFromLogicalShape:_A,getWebGLDisjointQueryTimerVersion:eX,getWebGLErrorMessage:mA,getWebGLMaxTextureSize:jA,hasExtension:tX,isCapableOfRenderingToFloatTexture:sX,isDownloadFloatTextureEnabled:aX,isReshapeFree:HA,isWebGLFenceEnabled:oX,isWebGLVersionEnabled:nX,linkProgram:vA,logShaderSourceAndInfoLog:xA,resetMaxTextureSize:QA,resetMaxTexturesInShader:JA,unbindColorTextureFromFramebuffer:VA,unbindTextureUnit:MA,validateFramebuffer:OA,validateProgram:kA,validateTextureSize:CA},Symbol.toStringTag,{value:"Module"})),cX=Ne();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dX(){let e,t,n,s,a,r,i,o,l,u;return 2===Ne().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",o=Ne().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",r="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function hX(e,t,n="index"){const s=ce(t);return s.map(((t,a)=>{const r=`int ${e[a]} = ${n} / ${t}`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${r}; ${i};`})).join("")}function pX(e,t,n="index"){const s=ce(t);return s.map(((t,a)=>{const r=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,i=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${r}; ${i};`})).join("")}function mX(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=s[n-1];for(let r=n-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function fX(e,t,n="index"){const s=e.map(((e,t)=>t)),a=mX(s,t);return a.map(((t,s)=>{const r=`int ${e[s]} = ${n} / ${a[s]}`,i=s===a.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a[s]}`:`index -= ${e[s]} * ${a[s]}`;return`${r}; ${i};`})).join("")}function gX(e){const t=ce(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function bX(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}cX.registerFlag("HAS_WEBGL",(()=>cX.getNumber("WEBGL_VERSION")>0)),cX.registerFlag("WEBGL_VERSION",(()=>nX(2)?2:nX(1)?1:0)),cX.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),cX.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===cX.get("WEBGL_VERSION"))),cX.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),cX.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),cX.registerFlag("WEBGL_PACK",(()=>cX.getBool("HAS_WEBGL"))),cX.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_CLIP",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_REDUCE",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_LAZILY_UNPACK",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_CONV_IM2COL",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>cX.getBool("WEBGL_PACK"))),cX.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>jA(cX.getNumber("WEBGL_VERSION")))),cX.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>qA(cX.getNumber("WEBGL_VERSION")))),cX.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=cX.getNumber("WEBGL_VERSION");return 0===e?0:eX(e)})),cX.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>cX.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!hi())),cX.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>sX(cX.getNumber("WEBGL_VERSION")))),cX.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!cX.getBool("WEBGL_FORCE_F16_TEXTURES")&&cX.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),cX.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>aX(cX.getNumber("WEBGL_VERSION")))),cX.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>oX(cX.getNumber("WEBGL_VERSION")))),cX.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>cX.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),cX.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),cX.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>hi()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),cX.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),cX.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),cX.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),cX.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),cX.registerFlag("WEBGL_EXP_CONV",(()=>!1)),cX.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>cX.getBool("IS_TEST"))),cX.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),cX.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),cX.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),cX.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const yX="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:xX}=rw;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wX(e,t,n){const s=[];if(e.forEach((e=>{const t=O(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=lD(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`);break}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=s.join("\n"),r=e.map((e=>IX(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=dX(),l=NX(o);let u,c,d=EX(o);return t.isPacked?(u=SX(t.logicalShape,i,n.enableShapeUniforms),c=RX(o)):(u=TX(t.logicalShape,i,n.enableShapeUniforms),c=CX(o)),n.packedInputs&&(d+=zX),[d,l,c,a,u,r,n.userCode].join("\n")}function vX(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return HX(e,t);case 1:return YX(e,t);case 2:return QX(e,t);case 3:return qX(e,t);case 4:return tD(e,t);case 5:return nD(e);case 6:return sD(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function kX(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return BX(e);case 1:return UX(e,t);case 2:return jX(e,t);case 3:return JX(e,t);default:return eD(e,t)}}function IX(e,t,n=!1,s){let a="";a+=n?kX(e,s):vX(e,s);const r=e.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(a+=n?rD(e,t):iD(e,t)),a}function SX(e,t,n){switch(e.length){case 0:return WX();case 1:return $X(e,t,n);case 2:return KX(e,t,n);case 3:return VX(e,t,n);default:return AX(e,t,n)}}function TX(e,t,n){switch(e.length){case 0:return WX();case 1:return FX(e,t,n);case 2:return PX(e,t,n);case 3:return OX(e,t,n);case 4:return XX(e,t,n);case 5:return DX(e,t);case 6:return ZX(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function NX(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function CX(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function RX(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function EX(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${GX}\n    ${MX}\n    ${LX}\n  `}const GX="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",MX="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",LX="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zX="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function WX(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function $X(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}function FX(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function VX(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),r=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function OX(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${pX(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=hX(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}function AX(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),r=a*Math.ceil(e[e.length-2]/2);let i=r,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function XX(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${pX(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=hX(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}function DX(e,t){const n=hX(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function ZX(e,t){const n=hX(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function KX(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(D(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function PX(e,t,n){return D(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function _X(e){return`offset${e}`}function BX(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=dX();return`\n    vec4 ${n}() {\n      return ${s.texture2D}(${t}, halfCR);\n    }\n  `}function HX(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[a,r]=e.shapeInfo.texShape;if(1===a&&1===r)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=_X(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function UX(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,r=dX();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}function YX(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${aD(e)}\n      }\n    `;const a=e.shapeInfo.texShape,r=a[0],i=a[1];if(1===i&&1===r)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=_X(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${r}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===r?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function jX(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e.shapeInfo.texShape,i=r[0],o=r[1],l=dX();if(null!=r&&D(n,r))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}function QX(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e.shapeInfo.texShape;if(null!=r&&D(n,r)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=r[0],n=r[1];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=j(n),l=i;if(l.length<n.length){const n=uD(e,l),s=["row","col"];return`\n      ${vX(n,t)}\n      float ${a}(int row, int col) {\n        return ${a}(${cD(s,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${aD(e)}\n      }\n    `;const u=r[0],c=r[1],d=_X(s);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}function JX(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===n[0]){const s=n.slice(1),r=[1,2],i=uD(e,s),o=["b","row","col"];return`\n        ${kX(i,t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${cD(o,r)});\n        }\n      `}const o=dX();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}function qX(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=j(n),u=o;if(u.length<n.length){const n=uD(e,u),s=["row","col","depth"];return`\n        ${vX(n,t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${cD(s,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${i}, 1)));\n        ${aD(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],h=c[1],p=e.shapeInfo.flatOffset;if(h===r&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(h===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const m=_X(s);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${i} + depth + ${m};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}function eD(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=dX();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const r=e.shapeInfo.logicalShape,i=r.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(r[i-1]/2);let h=d*Math.ceil(r[i-2]/2),p="int b, int row, int col",m=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let f=2;f<i-1;f++)p=`int b${f}, `+p,h*=r[i-f-1],m=`b${f} * ${h} + `+m;return`\n    vec4 ${s}(${p}) {\n      int index = ${m};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}function tD(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n[3],i=n[2]*r,o=n[1]*i,{newShape:l,keptDims:u}=j(n);if(l.length<n.length){const n=uD(e,l),s=["row","col","depth","depth2"];return`\n      ${vX(n,t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${cD(s,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${r}, 1)));\n        ${aD(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],m=`int stride2 = ${s}Shape[3];`,f=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${f}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===r&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=_X(s);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${f}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}function nD(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],r=t[3]*a,i=t[2]*r,o=t[1]*i,{newShape:l,keptDims:u}=j(t);if(l.length<t.length){const t=uD(e,l),n=["row","col","depth","depth2","depth3"];return`\n      ${vX(t)}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${cD(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${r}, ${a})) +\n          depth3;\n        ${aD(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${r}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=_X(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${r} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function sD(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:r}=j(t);if(a.length<t.length){const t=uD(e,a),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${vX(t)}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${cD(n,r)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${aD(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],m=h[1];if(m===c&&null==d)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==d)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=_X(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function aD(e){const t=e.name,n=O(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function rD(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=xX(e.shapeInfo.logicalShape,t.logicalShape),l=oD(i),u=i-r;let c;const d=["x","y","z","w","u","v"];c=0===r?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+u]} = 0;`)).join("\n");let h="";h=i<2&&r>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+u]}`)).join(", ");let p="return outputValue;";const m=1===O(e.shapeInfo.logicalShape),f=1===O(t.logicalShape);if(1!==r||m||f){if(m&&!f)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=r-2,t=r-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${h});\n      ${p}\n    }\n  `}function iD(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",r=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&D(i,r))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=oD(l),c=xX(e.shapeInfo.logicalShape,t.logicalShape),d=l-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let m="";return m=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      return get${s}(${m});\n    }\n  `}function oD(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function lD(e,t,n){const{newShape:s,keptDims:a}=j(t),r=t.length,i=e&&3===r&&1===t[0],o=i?t.slice(1):s,l=!e&&r>1&&!D(t,n)&&s.length<r||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function uD(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function cD(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(e,t,n,s){const a=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),r=a.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=wX(a,i,t),l=bA(e.gl,o),u=e.createProgram(l);return Ne().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:r,outShapeInfo:i},hD(e,t,u)))}function hD(e,t,n){const s=[],a=[];let r,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Ne().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const d of t.variableNames){const a={name:d,uniform:e.getUniformLocation(n,d,c),offset:e.getUniformLocation(n,`offset${d}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${d}Shape`,c),a.texShape=e.getUniformLocation(n,`${d}TexShape`,c)),s.push(a)}if(t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const d of t.customUniforms)a.push(e.getUniformLocation(n,d.name,c));return{variablesLocations:s,customUniformLocations:a,infLoc:l,nanLoc:u,outShapeLocation:r,outShapeStridesLocation:o,outTexShapeLocation:i}}function pD(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,a=t[n],r=a.shape;if(!D(s,r))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${r} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!D(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function mD(e,t,n,s,a){t.program.enableShapeUniforms||(pD(t.inShapeInfos,n),pD([t.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):e.setOutputMatrixTexture(r.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ne().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const s=n[l],{uniform:a,offset:r,shape:i,texShape:o}=t.variablesLocations[l];if(i){const{uniformShape:n}=lD(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n));break}}if(o&&e.gl.uniform2i(o,s.texData.texShape[0],s.texData.texShape[1]),null!=a){if(s.isUniform){if(O(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}continue}null!=s.texData.slice&&null!=r&&e.gl.uniform1i(r,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,l)}}const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const n=ce(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a)for(let l=0;l<t.program.customUniforms.length;++l){const n=t.program.customUniforms[l],s=t.customUniformLocations[l],r=a[l];if("float"===n.type)e.gl.uniform1fv(s,r);else if("vec2"===n.type)e.gl.uniform2fv(s,r);else if("vec3"===n.type)e.gl.uniform3fv(s,r);else if("vec4"===n.type)e.gl.uniform4fv(s,r);else if("int"===n.type)e.gl.uniform1iv(s,r);else if("ivec2"===n.type)e.gl.uniform2iv(s,r);else if("ivec3"===n.type)e.gl.uniform3iv(s,r);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,r)}}e.executeProgram()}function fD(e,t,n){let s="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const r=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=lD(e.packedInputs,t.shape,r);let u="",c="",d="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ce(o);d=`${e[0]===r[1]}_${e[e.length-1]===r[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const h=t.shape.length,p=2===o.length&&D(t.shape,r),m=1===O(t.shape),f=$c(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&D(r,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${r[0]>1}_${r[1]>1}`;s+=`${h}_${g}_${i?l:""}_${o.length}_${m}_${f}_${p}_${u}_${c}_${d}_${b}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let r=e.constructor.name;return r+="_"+s+"_"+a+`${Ne().getNumber("WEBGL_VERSION")}`,r}function gD(e){return Ne().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=eA.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=dX();this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?pX(["r","c","d"],e):hX(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=eA.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=dX();this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?pX(["r","c","d"],e):hX(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xD{constructor(e){this.variableNames=["A"],this.outTexUsage=tA.DOWNLOAD;const t=dX();this.outputShape=e,this.userCode=`\n      ${yX}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=tA.DOWNLOAD;const t=dX();this.outputShape=e,this.userCode=`\n      ${yX}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vD={R:0,G:1,B:2,A:3};class kD{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=dX();this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let r="";for(let i=0;i<n.length;i++){const e=n[i];r+=`\n          if(offset == ${i}) {\n            result = values[${vD[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?bX():gX(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${r}\n        }\n        ${s.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ID{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=dX();this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length);let s="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let r=0;r<=1;r++)for(let t=0;t<=1;t++){const a=2*r+t;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${r} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${r};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?bX():gX(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${a};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SD(e){const t=dX(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return gA(e,n)}function TD(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return IA(e,t)}function ND(e){const t=new Uint16Array([0,1,2,2,1,3]);return SA(e,t)}function CD(e,t,n,s,a,r){CA(t,n);const i=NA(e),o=e.TEXTURE_2D;return uA(e,(()=>e.bindTexture(o,i))),uA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),uA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),uA(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),uA(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ne().getNumber("WEBGL_VERSION")?uA(e,(()=>e.texImage2D(o,0,s,t,n,0,a,r,null))):uA(e,(()=>e.texStorage2D(o,1,s,t,n))),uA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function RD(e){return e.internalFormatFloat}function ED(e,t,n,s){const[a,r]=sA(t,n);return CD(e,a,r,RD(s),s.textureFormatFloat,e.FLOAT)}function GD(e){return e.internalFormatHalfFloat}function MD(e,t,n,s){const[a,r]=sA(t,n);return CD(e,a,r,GD(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function LD(e){return e.downloadTextureFormat}function zD(e,t,n,s){const[a,r]=sA(t,n);return CD(e,a,r,LD(s),e.RGBA,e.UNSIGNED_BYTE)}function WD(e){return e.internalFormatPackedFloat}function $D(e,t,n,s){const[a,r]=iA(t,n);return CD(e,a,r,WD(s),e.RGBA,e.FLOAT)}function FD(e){return e.internalFormatPackedHalfFloat}function VD(e,t,n,s){const[a,r]=iA(t,n);return CD(e,a,r,FD(s),e.RGBA,s.textureTypeHalfFloat)}function OD(e,t,n){return uA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),EA(e,t,"clipSpacePos",n,3,20,0)&&EA(e,t,"uv",n,2,20,12)}function AD(e,t,n,s,a,r){let i,o,l;uA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=r.internalFormatPackedFloat),i.set(a),2===Ne().getNumber("WEBGL_VERSION")?uA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):uA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),uA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function XD(e,t,n){uA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ne().getNumber("WEBGL_VERSION")?uA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):uA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ne().getNumber("WEBGL_VERSION")?uA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):uA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),uA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function DD(e,t,n,s){const a=e.createBuffer();uA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return uA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),uA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),uA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function ZD(e,t,n){const s=e,a=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function KD(e,t,n,s){const[a,r]=sA(t,n),i=4,o=new Uint8Array(aA(t*n,i));return uA(e,(()=>e.readPixels(0,0,a,r,s.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function PD(e,t,n,s,a,r,i,o){const l=e,u=new Float32Array(oA(r,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function _D(e,t,n){const s=new Float32Array(t*n*4);return uA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}const BD=Object.freeze(Object.defineProperty({__proto__:null,bindVertexProgramAttributeStreams:OD,createBufferFromOutputTexture:DD,createFloat16MatrixTexture:MD,createFloat16PackedMatrixTexture:VD,createFloat32MatrixTexture:ED,createIndexBuffer:ND,createPackedMatrixTexture:$D,createUnsignedBytesMatrixTexture:zD,createVertexBuffer:TD,createVertexShader:SD,downloadByteEncodedFloatMatrixFromOutputTexture:KD,downloadFloat32MatrixFromBuffer:ZD,downloadMatrixFromPackedOutputTexture:_D,downloadPackedMatrixFromBuffer:PD,getInternalFormatForFloat16MatrixTexture:GD,getInternalFormatForFloat16PackedMatrixTexture:FD,getInternalFormatForFloat32MatrixTexture:RD,getInternalFormatForPackedMatrixTexture:WD,getInternalFormatForUnsignedBytesMatrixTexture:LD,uploadDenseMatrixToTexture:AD,uploadPixelDataToTexture:XD},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HD{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Ne().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,jO(t,e)):this.gl=QO(t),e=this.gl,2===Ne().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>uA(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>uA(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>uA(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>uA(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>uA(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>uA(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>uA(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>uA(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ne().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=fA(this.gl,e),tX(this.gl,t))this.textureHalfFloatExtension=fA(this.gl,t);else if(Ne().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),tX(this.gl,s))this.colorBufferHalfFloatExtension=fA(this.gl,s);else if(Ne().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",tX(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!tX(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=TD(this.gl),this.indexBuffer=ND(this.gl),this.framebuffer=RA(this.gl),this.textureConfig=lA(this.gl,this.textureHalfFloatExtension)}get debug(){return Ne().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;uA(e,(()=>e.finish())),uA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),uA(e,(()=>e.deleteFramebuffer(this.framebuffer))),uA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),uA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),uA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),ED(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),MD(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),zD(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),XD(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),AD(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),VD(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),$D(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(VA(this.gl,this.framebuffer),this.outputTexture=null),uA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>KD(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,a,r){return PD(this.gl,e,t,n,s,a,r,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return ZD(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=DD(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ne().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,a=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(a,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=a}else Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>_D(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=SD(t));const n=wA(t);uA(t,(()=>t.attachShader(n,this.vertexShader))),uA(t,(()=>t.attachShader(n,e))),vA(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&kA(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;uA(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),OD(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(uA(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&kA(this.gl,this.program),uA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?LA(this.gl,e,t):zA(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),uA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),WA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,a]=iA(t,n);this.setOutputMatrixTextureDriver(e,s,a)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&kA(this.gl,this.program),OA(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}uA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),uA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fA(this.gl,2===Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await H((()=>this.disposed||this.isQueryAvailable(e,Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=UD(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ne().platform&&(n=Ne().platform.setTimeoutCustom.bind(Ne().platform)),H((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),FA(this.gl,e,this.framebuffer),this.debug&&OA(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(FA(this.gl,this.outputTexture,this.framebuffer),this.debug&&OA(this.gl)):VA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;FA(s,e,this.framebuffer),this.debug&&OA(s),this.outputTexture=e,uA(s,(()=>s.viewport(0,0,t,n))),uA(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),uA(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function UD(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:YD,bincountImpl:jD,bincountReduceImpl:QD,bitwiseAndImpl:JD,castImpl:qD,ceilImpl:eZ,concatImpl:tZ,equalImpl:nZ,expImpl:sZ,expm1Impl:aZ,floorImpl:rZ,gatherNdImpl:iZ,gatherV2Impl:oZ,greaterImpl:lZ,greaterEqualImpl:uZ,lessImpl:cZ,lessEqualImpl:dZ,linSpaceImpl:hZ,logImpl:pZ,maxImpl:mZ,maximumImpl:fZ,minimumImpl:gZ,multiplyImpl:bZ,negImpl:yZ,notEqualImpl:xZ,prodImpl:wZ,raggedGatherImpl:vZ,raggedRangeImpl:kZ,raggedTensorToTensorImpl:IZ,rangeImpl:SZ,rsqrtImpl:TZ,scatterImpl:NZ,sigmoidImpl:CZ,simpleAbsImpl:RZ,sliceImpl:EZ,sparseFillEmptyRowsImpl:GZ,sparseReshapeImpl:MZ,sparseSegmentReductionImpl:LZ,sqrtImpl:zZ,staticRegexReplaceImpl:WZ,stridedSliceImpl:$Z,stringNGramsImpl:FZ,stringSplitImpl:VZ,stringToHashBucketFastImpl:OZ,subImpl:AZ,tileImpl:XZ,topKImpl:DZ,transposeImpl:ZZ,uniqueImpl:KZ}=ez;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PZ(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function _Z(e,t){return 1===t?[e]:PZ(e,t)}function BZ(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HZ{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=gD(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=_Z("rc",this.rank),t=oD(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let a=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UZ{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}this.userCode=`\n      ${YZ(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?bX():gX(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function YZ(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?fX(["r","c","d"],"inputShape"):hX(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jZ{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const s=tK(t,n),a=nK(e,s,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const r=JZ(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=r,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let i;return s===nA.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===nA.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===nA.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===nA.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===nA.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=r,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const a=tK(n,s),r=nK(t,a,s);r in this.freeTextures||(this.freeTextures[r]=[]);const i=JZ(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=Ne().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[r].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[r],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function QZ(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function JZ(e,t,n,s,a){const r=qZ(t,s);let i;if(a){const[t,n]=iA(e[0],e[1]);i=t*n}else{const[t,n]=sA(e[0],e[1]);i=t*n}const o=QZ(n,r);return i*o}function qZ(e,t){switch(e){case nA.PACKED_2X2_FLOAT32:return WD(t);case nA.PACKED_2X2_FLOAT16:return FD(t);case nA.UNPACKED_FLOAT32:return RD(t);case nA.UNPACKED_FLOAT16:return GD(t);case nA.PACKED_4X1_UNSIGNED_BYTE:return LD(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function eK(e){return Ne().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?nA.PACKED_2X2_FLOAT32:nA.UNPACKED_FLOAT32:e?nA.PACKED_2X2_FLOAT16:nA.UNPACKED_FLOAT16}function tK(e,t){if(e===tA.UPLOAD)return nA.PACKED_2X2_FLOAT32;if(e===tA.RENDER||null==e)return eK(t);if(e===tA.DOWNLOAD||e===tA.PIXELS)return nA.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function nK(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sK{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const aK="if (isnan(x)) return x;",rK="return x;",iK="return abs(x);",oK="return (x >= 0.0) ? x : (exp(x) - 1.0);",lK=aK+"\n  return (x < 0.0) ? 0.0 : x;\n",uK=aK+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",cK="return x;",dK="return 1.0 / (1.0 + exp(-1.0 * x));",hK="return x;",pK="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",mK="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",fK="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",gK="return 1.0 / (1.0 + exp(-1.0 * x));";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bK{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yK{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length);const t=e.length,n=_Z("rc",t),s=oD(t),a=BZ(t,n),r=n.slice(-2),i=t<=1?"rc":`vec2(${r.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK=wf,wK=1e-7,vK=1e-4,kK={};function IK(e){return e in kK||(kK[e]={}),kK[e]}const SK=Ne().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),TK=600;function NK(){return null==Ne().global.screen?1024:Ne().global.screen.height*Ne().global.screen.width*window.devicePixelRatio*TK/1024/1024}class CK extends T{nextDataId(){return CK.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ne().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof HD)t=e;else{const n=QO(Ne().getNumber("WEBGL_VERSION"),e);t=new HD(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=QO(Ne().getNumber("WEBGL_VERSION"));t=new HD(e),this.binaryCache=IK(Ne().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new jZ(this.gpgpu),this.numMBBeforeWarning=NK(),this.texData=new S(this,$i())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,a,r){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,a]},o.texShape=[s,a];const l=PA(t),u=new kD(l,!1,r),c=this.runWebGLProgram(u,[i],n,[[s,a]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Ne().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ne().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:tA.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,s,a){if(Ne().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:tA.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:r,shape:i,isPacked:o}=t;if(null!=r){let t;t=o?new bK(i,cK):new sK(i,cK);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=cr()),"complex64"===s){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);c=kx(e,t)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=cr()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:r,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new bK(s,cK):new sK(s,cK);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ne().getBool("DEBUG")&&!Ne().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ne().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==r&&Ne().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...rA(s))}if(this.pendingRead.set(e,[]),"complex64"!==r&&await this.gpgpu.createAndWaitForFence(),"complex64"===r){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=kx(t,n)}else if(null==c)u=this.getValuesFromTexture(e);else{const e=O(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;uA(e,(()=>e.deleteBuffer(c)))}const d=this.convertAndCacheOnCPU(e,u),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&$i().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:a,slice:r,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=r){let n;n=o?new bK(a,cK):new sK(a,cK);const s=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),r=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),r}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=$i().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:c},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>pr(e)));return dl(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return dl(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!pA(n))throw Ne().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=O(t);if(Ne().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...rA(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),r}const r=Ne().getBool("WEBGL_PACK")&&!0===s,i=r?PA(t):t,o=r?new wD(i):new xD(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=fr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),r=fr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=L(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:r[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:cr(),endMs:null}}endTimer(e){return Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=cr(),e)}async getQueryTime(e){if(Ne().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:a,isPacked:r,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,a,r)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=SK){return Ne().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&O(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Js("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return xK(e.shape,t)}packedUnaryOp(e,t,n){const s=new bK(e.shape,t),a=this.compileAndRun(s,[e],n);return $i().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=RZ(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ne().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,iK,e.dtype);const t=new sK(e.shape,iK),n=this.compileAndRun(t,[e]);return $i().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&ae(n[0])){const a=n.map((e=>hr(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return $i().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new yK(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new HZ(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[ZA(e.shape),...KA(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},a=[ZA(t),...KA(t)],r=new UZ(a,n),i=!0,o=[n],l=this.runWebGLProgram(r,[s],e.dtype,o,i);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:a,dtype:r}=n;if(null!=t){const e=O(a),n=t[0]*t[1]*4;$(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=PA(a);let o;o=s?new yD(i):new bD(i);const l=!0,u=[t??rA(i)],c=this.runWebGLProgram(o,[{shape:i,dtype:r,dataId:e}],r,u,l,t);return{dtype:r,shape:a,dataId:c.dataId}}runWebGLProgram(e,t,n,s,a=!1,r){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===eA.DENSE){const t=r??rA(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===O(i.shape))return o.values=Q(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&O(t.shape)<=Ne().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!HA(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},d=fD(e,u,c),h=this.getAndSaveBinary(d,(()=>dD(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let m;p&&(m=this.startTimer()),Ne().get("ENGINE_COMPILE_ONLY")||mD(this.gpgpu,h,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const f=Ne().getNumber("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=cr();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ne().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ne().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Oi((()=>{if(!Ne().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ne().getBool("DEBUG");Ne().set("DEBUG",!1);const t=this.abs(fd(1e-8)).dataSync()[0];if(Ne().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?wK:vK}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:r,usage:i,isPacked:o}=t;if(null!=r)return;const l=null!=this.activeTimers;let u;l&&(u=cr());let c=t.texShape;if(null==c&&(c=_A(n,o),t.texShape=c),null!=a){const e=PA(n);let r,i=c[1],d=c[0];const h=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!h)&&([i,d]=iA(c[0],c[1])),r=o?new ID(e,h):new kD(e,h);const p=h?[d,i]:c,m=this.makeTensorInfo(p,s),f=this.texData.get(m.dataId);f.usage=h?tA.PIXELS:tA.UPLOAD,f.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,d,a);const g=[[d,i]],b=this.runWebGLProgram(r,[m],s,g,!0),y=this.texData.get(b.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,Ne().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=cr()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=RK(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*ne(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Jy(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(xA(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:s,nanLoc:a,outShapeLocation:r,outShapeStridesLocation:i,outTexShapeLocation:o}=hD(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=a,e.outShapeLocation=r,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:a,width:r,channels:i}=e,o=$i().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,a,r,i);return $i().makeTensorFromDataId(l,t,n,o)}}function RK(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(){Ne().set("WEBGL_FORCE_F16_TEXTURES",!0)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */CK.nextDataId=0,pi()&&Ui("webgl",(()=>new CK),2);const GK={forceHalfFloat:EK},MK="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LK{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Vc(t,n),this.enableShapeUniforms=gD(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class WK{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Vc(t,n);const a=this.outputShape.length;this.enableShapeUniforms=gD(a);let r="";if(s)if(0===a||1===O(this.outputShape))r="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(r=`\n          ${oD(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?r+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":r+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=_Z("coords",a);this.enableShapeUniforms?r+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:r+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${r}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const FK={kernelName:Yt,backendName:"webgl",kernelFunc:$K};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(e){const{inputs:t,backend:n}=e,{real:s,imag:a}=t,r=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(r.dataId),o=$K({inputs:{x:s},backend:n}),l=$K({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},r}const OK={kernelName:it,backendName:"webgl",kernelFunc:VK},AK="return (a < 0.) ? b * a : a;",XK="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:r}=s,i=n.makeTensorInfo([],"float32",or(r,"float32")),o=Ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WK(XK,a.shape,i.shape):new LK(AK,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}const ZK={kernelName:tn,backendName:"webgl",kernelFunc:DK},KK="return (a < 0.) ? b * a : a;",PK="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t,r=Ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WK(PK,s.shape,a.shape):new LK(KK,s.shape,a.shape);return n.runWebGLProgram(r,[s,a],"float32")}const BK={kernelName:Zn,backendName:"webgl",kernelFunc:_K},HK="if (isnan(x)) return x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,o=r,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}const u=Ne().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let c;return c=u?new bK(i.shape,t):new sK(i.shape,e),o.runWebGLProgram(c,[i],l)}}function YK({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},r={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new LK(e,l.shape,u.shape);return c.runWebGLProgram(i,[a,r],_r(n.dtype,s.dtype))})),r=VK({inputs:{real:s,imag:a},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(a),r}const d=r||_r(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=a){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?sw(e):e,s="string"===l.dtype?sw(t):t,[r,i]=a(l.shape,u.shape,n,s,d),o=c.makeTensorInfo(i,d),h=c.texData.get(o.dataId);return h.values=r,o}const h=Ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let p;return p=h?new WK(t,l.shape,u.shape,n):new LK(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],d)}}function jK(e,t=!1){if("linear"===e)return t?hK:rK;if("relu"===e)return t?mK:lK;if("elu"===e)return t?pK:oK;if("relu6"===e)return t?fK:uK;if("prelu"===e)return t?PK:KK;if("leakyrelu"===e)return t?XK:AK;if("sigmoid"===e)return t?gK:dK;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QK{constructor(e,t,n,s=!1,a=!1,r=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=gD(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),d=s?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",g="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=r?"result += getBiasAtOutCoords();":"";r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${m[0]});\n          result += (${p[1]} * ${m[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class qK{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Vc(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eP="return a * b;";function tP(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,r=_r(s.dtype,a.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),r=new qK(JK.REAL,s.shape,a.shape),i=new qK(JK.IMAG,s.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(r,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=VK({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,a])){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),[i,o]=bZ(s.shape,a.shape,e.values,t.values,r),l=n.makeTensorInfo(o,r),u=n.texData.get(l.dataId);return u.values=i,l}let i;return i=Ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WK(eP,s.shape,a.shape):new LK(eP,s.shape,a.shape),n.runWebGLProgram(i,[s,a],r)}const nP={kernelName:Gn,backendName:"webgl",kernelFunc:tP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(e,t,n){const s=[ZA(e.shape),...KA(e.shape)],a={dtype:e.dtype,shape:s,dataId:e.dataId},r=[ZA(t),...KA(t)],i=new UZ(r,s),o=!0,l=[s],u=n.runWebGLProgram(i,[a],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:r}=s,i=n,o=O(a.shape),l=U(r,o),u=O(l);$(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||HA(a.shape,l)||null!==c.texture&&HA(c.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):sP(a,l,i)}const rP={kernelName:Qn,backendName:"webgl",kernelFunc:aP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iP{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:r}=e;this.outputShape=[s,r];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${Z(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oP{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:r}=e;this.outputShape=[s,r];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=ox(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function uP(e,t,n,s){const a=lP(e.shape);let r=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:l,outSize:u}=a[i];let c,d;c="mean"===n?0===i?new iP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new iP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new oP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),d=r,r=s.runWebGLProgram(c,[r],t),d.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(d)}return r}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const s=oD(this.rank),a=dP(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}function dP(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let a=0;a<e.length;a++)s[e[a]]=n[a];return s.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=oD(this.rank),a=PZ("rc",this.rank),r=new Array(this.rank);for(let u=0;u<t.length;u++)r[t[u]]=a[u];const i=`vec2(${r.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${r.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(e,t,n){const s=Ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hP(e.shape,t):new cP(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(e,t,n,s){const a=t,r=e.shape.length,i=Y(a,e.shape);let o=i;const l=id(o,r),u=null!=l;let c=e;u&&(c=pP(e,l,s),o=ld(o.length,r)),rd("sum",o,r);const[d,h]=sd(c.shape,o);let p=d;n&&(p=ad(d,i));const m=O(h),f=O(e.shape)/m,g=aP({inputs:{x:c},attrs:{shape:[f,m]},backend:s}),b=Br(e.dtype),y=uP(g,b,"sum",s),x=aP({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(c),x
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function fP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s;return mP(a,r,i,n)}const gP={kernelName:ys,backendName:"webgl",kernelFunc:fP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{perm:r}=s,i=n,o=a.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=a.shape[r[c]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=ZZ(e,a.shape,a.dtype,r,l);u=i.makeTensorInfo(l,a.dtype);const n=i.texData.get(u.dataId);n.values=t}else u=pP(a,r,i);return u}const yP={kernelName:Xs,backendName:"webgl",kernelFunc:bP},xP=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],h=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],m=s?t.shape[c-2]:t.shape[c-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=O(f),y=O(g),x=Vc(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,m]);$(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=n?[b,d,p]:[b,p,d],v=s?[y,m,h]:[y,h,m],k=aP({inputs:{x:e},backend:a,attrs:{shape:w}}),I=aP({inputs:{x:t},backend:a,attrs:{shape:v}}),S=[k,I],T=Math.max(b,y),N=n?k.shape[1]:k.shape[2],C=null!=r,R=null!=i,E="leakyrelu"===l,G=null!=l?jK(l,!0):null,M=C||R||E||null!=G;let L;if((1===p||1===m)&&N>xP&&!1===M){let e=k,t=I;n&&(e=bP({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),s&&(t=bP({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const r=1!==m,i=1===m;let o=e;r&&(o=aP({inputs:{x:e},backend:a,attrs:{shape:[T,N,1]}}),S.push(o));const l=1===m?2:1;let u=t;i&&(u=aP({inputs:{x:t},backend:a,attrs:{shape:[T,1,N]}}),S.push(u));const c=tP({inputs:{a:o,b:u},backend:a});L=fP({inputs:{x:c},backend:a,attrs:{axis:l,keepDims:!0}}),S.push(c)}else{const l=_r(e.dtype,t.dtype),u=new QK(w,v,[T,p,m],n,s,C,G,R,E),c=[k,I];if(null!=r&&c.push(r),R&&c.push(i),E){const e=a.makeTensorInfo([],"float32",or(o,"float32"));c.push(e),S.push(e)}L=a.runWebGLProgram(u,c,l)}const z=aP({inputs:{x:L},backend:a,attrs:{shape:x}});S.push(L);for(const W of S)a.disposeIntermediateTensorInfo(W);return z}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=s;return wP({a:a,b:r,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}const kP={kernelName:Ys,backendName:"webgl",kernelFunc:vP},IP="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=RZ(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let a;return a=Ne().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bK(s.shape,IP):new sK(s.shape,IP),n.runWebGLProgram(a,[s],s.dtype)}const TP={kernelName:ze,backendName:"webgl",kernelFunc:SP},NP=aK+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",CP=UK({opSnippet:NP}),RP={kernelName:We,backendName:"webgl",kernelFunc:CP},EP=aK+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",GP=UK({opSnippet:EP}),MP={kernelName:$e,backendName:"webgl",kernelFunc:GP},LP="return a + b;",zP=YK({opSnippet:LP,packedOpSnippet:LP,supportsComplex:!0,cpuKernelImpl:YD}),WP={kernelName:Fe,backendName:"webgl",kernelFunc:zP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $P{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FP{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(e){const{inputs:t,backend:n}=e,s=t;if(1===s.length)return $K({inputs:{x:s[0]},backend:n});if(s.length>Ne().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),t=VP({inputs:s.slice(0,e),backend:n}),a=VP({inputs:s.slice(e),backend:n});return VP({inputs:[t,a],backend:n})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>_r(e,t))),r=s.map((e=>e.shape)),i=Ne().getBool("WEBGL_PACK")?new FP(s[0].shape,r):new $P(s[0].shape,r);return n.runWebGLProgram(i,s,a)}const OP={kernelName:Ve,backendName:"webgl",kernelFunc:VP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s,o=a.shape.length,l=Y(r,a.shape);let u=l;const c=id(u,o);let d=a;null!=c&&(d=bP({inputs:{x:a},backend:n,attrs:{perm:c}}),u=ld(u.length,o)),rd("all",u,o);const[h,p]=sd(d.shape,u),m=O(p),f=aP({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=uP(f,f.dtype,"all",n);let b;if(i){const e=ad(h,l);b=aP({inputs:{x:g},backend:n,attrs:{shape:e}})}else b=aP({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),b}const XP={kernelName:Oe,backendName:"webgl",kernelFunc:AP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s,o=a.shape.length,l=Y(r,a.shape);let u=l;const c=id(u,o);let d=a;null!=c&&(d=bP({inputs:{x:a},backend:n,attrs:{perm:c}}),u=ld(u.length,o)),rd("any",u,o);const[h,p]=sd(d.shape,u),m=O(p),f=aP({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=uP(f,f.dtype,"any",n);let b;if(i){const e=ad(h,l);b=aP({inputs:{x:g},backend:n,attrs:{shape:e}})}else b=aP({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),b}const ZP={kernelName:Ae,backendName:"webgl",kernelFunc:DP};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KP{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:a,outSize:r}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,r];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PP{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,$(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],r=Math.ceil(a/t);this.outputShape=e.slice(0,-1),r>1&&this.outputShape.push(r),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=oD(o),u=_Z("coords",o);let c,d;if(1===r){d=o+1;const e=oD(d);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else d=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],m=h.map((e=>"int "+e)),f=_Z("sourceLocR",d-1).concat("inIdx.r"),g=_Z("sourceLocG",d-1).concat("inIdx.g"),b=_Z("sourceLocB",d-1).concat("inIdx.b"),y=_Z("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(\n            getAChannel(${f.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(e,t,n,s=null){let a=t.shape[0],r=t.shape[1];null!=s&&(a=s.shape[0],r=s.shape[1]);const i=ox(r),o={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},l=new KP(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const d=_P(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function BP(e,t,n,s=null){const a=null!=s?s.shape:t.shape,r=a[a.length-1],i=ox(r),o=new PP(a,i,n,null==s),l=null==s?[t]:[t,s],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){const s=BP(e,t,n,u);return e.disposeIntermediateTensorInfo(u),s}return u}function HP(e,t,n,s){const a=[n];if(rd("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!Ne().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],r=e.texData.get(t.dataId),i=null!==r&&r.isPacked;let o=t;i&&(o=e.unpackTensor(t),n.push(o));const[l,u]=sd(o.shape,a),c=O(u),d=aP({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(d);const h=_P(e,d,s);n.push(h);const p=aP({inputs:{x:h},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return BP(e,t,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;let i=Y(r,a.shape);const o=id(i,a.shape.length);let l=a;const u=[];null!=o&&(l=bP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ld(i.length,l.shape.length)),rd("argMax",[i[0]],l.shape.length);const c=HP(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const YP={kernelName:Xe,backendName:"webgl",kernelFunc:UP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r}=s;let i=Y(r,a.shape);const o=id(i,a.shape.length);let l=a;const u=[];null!=o&&(l=bP({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=ld(i.length,l.shape.length)),rd("argMin",[i[0]],l.shape.length);const c=HP(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const QP={kernelName:De,backendName:"webgl",kernelFunc:jP},JP=aK+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",qP=UK({opSnippet:JP}),e_={kernelName:Ze,backendName:"webgl",kernelFunc:qP},t_=aK+"return log(x + sqrt(x * x + 1.0));",n_=UK({opSnippet:t_}),s_={kernelName:Ke,backendName:"webgl",kernelFunc:n_},a_=aK+"\n  return atan(x);\n",r_=UK({opSnippet:a_}),i_={kernelName:Pe,backendName:"webgl",kernelFunc:r_},o_=MK+"\n  return atan(a, b);\n",l_="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+zK+"\n  return result;\n",u_=YK({opSnippet:o_,packedOpSnippet:l_}),c_={kernelName:Be,backendName:"webgl",kernelFunc:u_},d_=aK+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",h_=UK({opSnippet:d_}),p_={kernelName:_e,backendName:"webgl",kernelFunc:h_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class m_{constructor(e,t,n,s=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const m="avg"===t,f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?a?f:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const y="max";let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(r/4),v=r%4,k=`\n      if (${m}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${y}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class f_{constructor(e,t,n,s=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const r=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${f}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${m};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${m} +\n                      wR * ${m} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const w="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const k=4*Math.floor(r/4),I=r%4,S=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${w}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${f}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;lX(a,"avgPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;$(du(i,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Ql(a.shape,r,i,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&D(c.inShape,c.outShape))return $K({inputs:{x:a},backend:n});const d=new m_(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}const b_={kernelName:He,backendName:"webgl",kernelFunc:g_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],d=Jl(a.shape,r,i,c,o,l,u),h=new f_(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}const x_={kernelName:Ye,backendName:"webgl",kernelFunc:y_};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w_{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,a=e.strideWidth,r=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class v_{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,a=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,m=d-1-e.padInfo.top,f=h-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${m}, ${f});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Jl(i.shape,o,l,d,u,c),p=new v_(h);return n.runWebGLProgram(p,[a],i.dtype)}const I_={kernelName:je,backendName:"webgl",kernelFunc:k_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,i=r;lX([a,r],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Ql(i.shape,o,l,1,u),d=new w_(c);return n.runWebGLProgram(d,[a],i.dtype)}const T_={kernelName:Ue,backendName:"webgl",kernelFunc:S_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(e){const{inputs:t,backend:n,attrs:s}=e,{a:a,b:r}=t,{transposeA:i,transposeB:o}=s;return wP({a:a,b:r,transposeA:i,transposeB:o,backend:n})}const C_={kernelName:Qe,backendName:"webgl",kernelFunc:N_};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R_{constructor(e,t,n,s,a,r){this.outputShape=[],this.variableNames=["x","mean","variance"],Vc(e,t),Vc(e,n);let i="0.0";null!=s&&(Vc(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Vc(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${r}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E_{constructor(e,t,n,s,a,r){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Vc(e,t),Vc(e,n);let i="vec4(0.0)";null!=s&&(Vc(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Vc(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${r}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_=({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:r,offset:i,scale:o}=e;$(a.shape.length===r.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),$(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),$(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,a,r];let c=null;null!=i&&(c=i.shape,u.push(i));let d=null;null!=o&&(d=o.shape,u.push(o));const h=Ne().getBool("WEBGL_PACK_NORMALIZATION")?new E_(s.shape,a.shape,r.shape,c,d,l):new R_(s.shape,a.shape,r.shape,c,d,l);return t.runWebGLProgram(h,u,u[0].dtype)},M_={kernelName:Pt,backendName:"webgl",kernelFunc:G_};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L_{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=oD(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=W_(this.rank);let s;const a=e.map(((e,t)=>`sourceLoc.${z_[t]} = start[${t}] + coords.${z_[t]};`));s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const z_=["x","y","z","w","u","v"];function W_(e){if(1===e)return"sourceLoc";if(e<=6)return z_.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $_{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=oD(this.rank),n=_Z("coords",this.rank),s=_Z("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,r=`getChannel(getSource(${s.join()}), ${a})`,i=`\n      result.x = ${r};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${r};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${r};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${r};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(e,t,n,s){const a=s.texData.get(e.dataId),r=s.makeTensorInfo(n,e.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Ky(t,ce(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),r}function V_(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,size:i}=s,[o,l]=Py(a,r,i);if(Gy(a,o,l),0===O(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=EZ(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:u}=n.texData.get(a.dataId),c=Zy(a.shape,o,l);if(u||!c){const e=Ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $_(l):new L_(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),F_(a,o,l,n)}const O_={kernelName:ds,backendName:"webgl",kernelFunc:V_},A_=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,crops:i}=s;$(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),l=ux(a.shape,r,o),u=cx(l.length,r.length),c=dx(a.shape,r,o),d=hx(i,r.length),h=px(c,i,r.length),p=[],m=aP({inputs:{x:a},backend:n,attrs:{shape:l}}),f=bP({inputs:{x:m},backend:n,attrs:{perm:u}}),g=aP({inputs:{x:f},backend:n,attrs:{shape:c}}),b=V_({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(m),p.push(f),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b},X_={kernelName:Je,backendName:"webgl",kernelFunc:A_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function D_(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:i}=s,o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=jD(o,l,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,u)}const Z_={kernelName:qe,backendName:"webgl",kernelFunc:D_},K_="\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",P_="\n  return float(int(a.r) & int(b.r));\n";
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,r=Ne().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Ne().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,a])||1===i){const e=n.texData.get(s.dataId).values,t=n.texData.get(a.dataId).values,[r,i]=JD(s.shape,a.shape,e,t,s.dtype),o=n.makeTensorInfo(i,s.dtype),l=n.texData.get(o.dataId);return l.values=r,o}let o;return o=r?new WK(K_,s.shape,a.shape,!1):new LK(P_,s.shape,a.shape),n.runWebGLProgram(o,[s,a],s.dtype)}const B_={kernelName:et,backendName:"webgl",kernelFunc:__};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,r=n.readSync(s.dataId),i=n.readSync(a.dataId),o=Vc(Array.from(r),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const U_={kernelName:nt,backendName:"webgl",kernelFunc:H_},Y_="return float(a != b);",j_=YK({opSnippet:Y_,cpuKernelImpl:xZ,dtype:"bool"}),Q_={kernelName:Ln,backendName:"webgl",kernelFunc:j_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function J_(e){const{inputs:t,backend:n}=e,{input:s}=t,a=n.texData.get(s.dataId);return $K({inputs:{x:a.complexTensorInfos.real},backend:n})}const q_={kernelName:Un,backendName:"webgl",kernelFunc:J_},eB="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(e,t){const n=new sK(e.shape,eB),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dtype:r}=s;if("complex64"===r){if("complex64"===a.dtype)return $K({inputs:{x:a},backend:n});const e=Bh(a.shape),t=nB({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=VK({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),s}if("complex64"===a.dtype){const e=J_({inputs:{input:a},backend:n}),t=nB({inputs:{x:e},backend:n,attrs:{dtype:r}});return n.disposeIntermediateTensorInfo(e),t}if(!te(a.dtype,r)){const e=$K({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:r}}if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId).values,[t,s,i]=qD(e,a.shape,a.dtype,r);return n.makeTensorInfo(t,s,i)}if("int32"===r)return tB(a,n);if("bool"===r){const e=n.makeTensorInfo([],"bool",Q("bool",1)),t=j_({inputs:{a:a,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const sB={kernelName:st,backendName:"webgl",kernelFunc:nB},aB="return ceil(x);",rB=UK({opSnippet:aB,packedOpSnippet:aB,cpuKernelImpl:eZ}),iB={kernelName:at,backendName:"webgl",kernelFunc:rB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oB{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lB{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{clipValueMin:r,clipValueMax:i}=s;let o;o=Ne().getBool("WEBGL_PACK_CLIP")?new lB(a.shape):new oB(a.shape);const l=[[r],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}const cB={kernelName:rt,backendName:"webgl",kernelFunc:uB};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dB{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function pB(e){const{inputs:t,backend:n}=e,{x:s}=t,a=n.texData.get(s.dataId),r=new dB(s.shape),i=[hB(s,a.complexTensorInfos.real),hB(s,a.complexTensorInfos.imag)];return n.runWebGLProgram(r,i,i[0].dtype)}const mB={kernelName:ot,backendName:"webgl",kernelFunc:pB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fB{constructor(e){this.outputShape=[],this.outputShape=ex(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++){const e=t[r-1];n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${e}));`)}const s=t.length,a=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gB{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ex(e,t);const n=this.outputShape,s=n.length,a=oD(s),r=_Z("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];const l=i[t],u=i.slice(-2),c=i.join();let d=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let m=1;m<o.length;m++){const e=o[m-1];d+=`\n        if (${l} < ${o[m]}  && ${l} >= ${o[m-1]}) {\n          return getChannel(\n            getT${m}(${bB(i,l,e)}),\n            vec2(${bB(u,l,e)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${bB(i,l,p)}),\n          vec2(${bB(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${r}), 0., 0., 0.);\n\n        ${r[s-1]} = ${r[s-1]} + 1;\n        if (${r[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${r});\n        }\n\n        ${r[s-2]} = ${r[s-2]} + 1;\n        if (${r[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${r});\n        }\n\n        ${r[s-1]} = ${r[s-1]} - 1;\n        if (${r[s-2]} < ${n[s-2]} &&\n            ${r[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${r});\n        }\n        setOutput(result);\n      }\n    `}}function bB(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(e){const{inputs:t,backend:n}=e,{input:s}=t,a=n.texData.get(s.dataId);return $K({inputs:{x:a.complexTensorInfos.imag},backend:n})}const xB={kernelName:Qt,backendName:"webgl",kernelFunc:yB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>J_({inputs:{input:e},backend:n}))),a=e.map((e=>yB({inputs:{input:e},backend:n}))),r=wB(s,t,n),i=wB(a,t,n),o=VK({inputs:{real:r,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===s&&(a=!0),a){const a=e.map((e=>{const s=[-1,O(e.shape.slice(t))];return aP({inputs:{x:e},backend:n,attrs:{shape:s}})})),r=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=ex(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=tZ(r,i,s,o),u=ex(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const r=e.filter((e=>O(e.shape)>0)),i=Ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(1===r.length){const t=i?new sK(e[0].shape,cK):new bK(e[0].shape,cK);return n.runWebGLProgram(t,e,s)}const o=Ne().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>o){const e=[];for(let a=0;a<r.length;a+=o){const s=r.slice(a,a+o);e.push(wB(s,t,n))}const s=wB(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(i){const e=new gB(r.map((e=>e.shape)),t);return n.runWebGLProgram(e,r,s)}const{tensors2D:l,outShape:u}=vB(r,t,n),c=new fB(l.map((e=>e.shape))),d=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const h=aP({inputs:{x:d},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(d),h}function vB(e,t,n){const s=ex(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>aP({inputs:{x:e},attrs:{shape:[-1,O(e.shape.slice(t))]},backend:n}))),outShape:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,r=Y(a,t[0].shape)[0],i=t.map((e=>e.shape));qy(i,r);const o=ex(t.map((e=>e.shape)),r);if(0===O(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>O(e.shape)>0));return 1===l.length?$K({inputs:{x:l[0]},backend:n}):wB(l,r,n)}const IB={kernelName:lt,backendName:"webgl",kernelFunc:kB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SB{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const r=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),m=e.inChannels%4,f="channelsLast"===e.dataFormat,g=f?1:2,b=f?2:3,y=f?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===m}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===m}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===m}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class TB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,a=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),m=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${r}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===m}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NB{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gD(this.outputShape.length);const r=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let f=0;f<u;f++)d+=`\n           vec4 xTexelC${2*f};\n           int xTexelC${2*f}Ready;\n           vec4 xTexelC${2*f+1};\n           int xTexelC${2*f+1}Ready;\n           vec4 xC${f};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let f=0;f<u;f++)d+=`\n           xTexelC${2*f} = vec4(0.0);\n           xTexelC${2*f}Ready = 0;\n           xTexelC${2*f+1} = vec4(0.0);\n           xTexelC${2*f+1}Ready = 0;\n           xC${f} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let f=0;f<(c+1)/2;f++){const t=2*f;if(d+=`\n           xC = xCCorner + ${t*o};\n           `,1===i){if(t<u&&(r%2===1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,d+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=r%2===0?G(o):o;o%2===0&&r%2===1||o%2!==0&&r%2!==1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,d+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):d+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(r%2===1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(d+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(d+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(d+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let h="",p="";n&&(h=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gD(this.outputShape.length);const{dataFormat:n}=t,s=dX(),a="channelsLast"===n,r=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${r}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function EB({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,d=l[0]*l[1]*l[2],h=n.outChannels,p="channelsLast"===n.dataFormat,m=!1,f=!1;let g;const b=[];if(null!=r){const e=RB(r.shape,p);null!=e&&(r=aP({inputs:{x:r},backend:s,attrs:{shape:e}}),b.push(r))}if(null!=a){const e=RB(a.shape,p);null!=e&&(a=aP({inputs:{x:a},backend:s,attrs:{shape:e}}),b.push(a))}if((1!==d&&1!==h||!(c>xP))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!==0&&D(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),d={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},h=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,$(HA(u.shape,d.shape),(()=>`packed reshape ${u.shape} to ${d.shape} isn't free`));const p=aP({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(p);const y=wP({a:d,b:p,backend:s,transposeA:m,transposeB:f,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i}),x=s.texData.get(y.dataId);$(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=h,x.shape=n.outShape,g=$K({inputs:{x:y},backend:s}),g.shape=n.outShape,b.push(y)}else{const l=n.outHeight*n.outWidth,u=aP({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=aP({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=wP({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:f,backend:s,bias:a,activation:o,preluActivationWeights:r,leakyreluAlpha:i});g=aP({inputs:{x:d},backend:s,attrs:{shape:n.outShape}}),b.push(u),b.push(c),b.push(d)}for(const y of b)s.disposeIntermediateTensorInfo(y);return g}function GB({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=n,m="channelsLast"===p,f=l*u*c,g=h*d,b=[n.batchSize,f,g],y=!0,x=!1,w=[];if(null!=r){const e=RB(r.shape,m);null!=e&&(r=aP({inputs:{x:r},backend:s,attrs:{shape:e}}),w.push(r))}if(null!=a){const e=RB(a.shape,m);null!=e&&(a=aP({inputs:{x:a},backend:s,attrs:{shape:e}}),w.push(a))}const v=aP({inputs:{x:t},backend:s,attrs:{shape:[1,f,O(t.shape)/f]}});w.push(v);const k=new CB(b,n),I=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=s.runWebGLProgram(k,[e],"float32",I),T=aP({inputs:{x:S},backend:s,attrs:{shape:b}});w.push(S),w.push(T);const N=null!=a,C=null!=r,R="leakyrelu"===o,E=o?jK(o,!0):null,G=new QK(m?T.shape:v.shape,m?v.shape:T.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],y,x,N,E,C,R),M=m?[T,v]:[v,T];if(a&&M.push(a),C&&M.push(r),R){const e=s.makeTensorInfo([],"float32",or(i,"float32"));M.push(e),w.push(e)}const L=s.runWebGLProgram(G,M,"float32"),z=aP({inputs:{x:L},backend:s,attrs:{shape:n.outShape}});w.push(L);for(const W of w)s.disposeIntermediateTensorInfo(W);return z}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,d=pu(l),h=ql(a.shape,r.shape,i,u,o,c,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(h.strideWidth<=2&&"channelsLast"===d&&Ne().getBool("WEBGL_EXP_CONV")){const e=new NB(h),t=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=n.runWebGLProgram(e,[a,r],"float32",t)}else if(Ne().getBool("WEBGL_CONV_IM2COL"))p=GB({x:a,filter:r,convInfo:h,backend:n});else{const e=new SB(h);p=n.runWebGLProgram(e,[a,r],"float32")}else p=EB({x:a,filter:r,convInfo:h,backend:n});const m=aP({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),m}const LB={kernelName:ut,backendName:"webgl",kernelFunc:MB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,a=e.padInfo.left,r="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${r?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,a=e.strideWidth,r="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=r?1:2,u=r?2:3,c=r?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $B{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,a=e.padInfo.front,r=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${r};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,a=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${r}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,d=pu(l),h=ql(a.shape,c,i,1,o,u,!1,d),p=new zB(h);return n.runWebGLProgram(p,[a,r],"float32")}const OB={kernelName:ct,backendName:"webgl",kernelFunc:VB};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=gD(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,s=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,d=pu(u),h=ql(i,r.shape,o,1,l,c,!1,d);if(Ne().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const e=[[h.strideHeight,h.strideWidth]],t=new AB(h);return n.runWebGLProgram(t,[a,r],"float32",e)}{const e=new WB(h);return n.runWebGLProgram(e,[a,r],"float32")}}const DB={kernelName:dt,backendName:"webgl",kernelFunc:XB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:i,pad:o,dilations:l}=s,u=eu(a.shape,r.shape,i,l,o),c=new TB(u);return n.runWebGLProgram(c,[a,r],"float32")}const KB={kernelName:ht,backendName:"webgl",kernelFunc:ZB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:i,pad:o,filterShape:l}=s,u=eu(a.shape,l,i,1,o),c=new $B(u);return n.runWebGLProgram(c,[a,r],"float32")}const _B={kernelName:pt,backendName:"webgl",kernelFunc:PB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{pad:i,strides:o,inputShape:l}=s,u=eu(l,r.shape,o,1,i),c=new FB(u);return n.runWebGLProgram(c,[a,r],"float32")}const HB={kernelName:mt,backendName:"webgl",kernelFunc:BB},UB=HK+"\n  return cos(x);\n",YB=`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${zK}\n  return result;\n`,jB=UK({opSnippet:UB,packedOpSnippet:YB}),QB={kernelName:ft,backendName:"webgl",kernelFunc:jB},JB="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",qB=UK({opSnippet:JB}),eH={kernelName:gt,backendName:"webgl",kernelFunc:qB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tH{constructor(e,t,n,s,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[r,i,o,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const h="bilinear"===s?1:0,[p,m]=[i-1+".0",o-1+".0"],[f,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,w]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`\n      const float height_ratio = float(${f});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${r}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${m} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=e=>{const{inputs:t,backend:n,attrs:s}=e,{image:a,boxes:r,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new tH(a.shape,r.shape,o,l,u);return n.runWebGLProgram(c,[a,r,i],"float32")},sH={kernelName:xt,backendName:"webgl",kernelFunc:nH};var aH;(function(e){e.Prod="*",e.Sum="+"})(aH||(aH={}));class rH{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,r=this.op===aH.Prod?"1.0":"0.0",i=n?r:`getX(${iH(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${oD(a)} coords = getOutputCoords();\n        int end = ${oH(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${oH(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${iH(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function iH(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function oH(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(e,t,n,s,a,r){const i=t.shape.length,o=id([s],i);let l=t;null!=o&&(l=bP({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=ld(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let d=$K({inputs:{x:l},backend:n});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const t=new rH(e,l.shape,!1,r),s=[[h]],a=d;d=n.runWebGLProgram(t,[d],d.dtype,s),n.disposeIntermediateTensorInfo(a)}if(a){const t=new rH(e,l.shape,a,r),s=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=od(o),t=bP({inputs:{x:d},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(l),t}return d}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:i,reverse:o}=s;return lH(aH.Prod,a,n,r,i,o)}const cH={kernelName:bt,backendName:"webgl",kernelFunc:uH};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,exclusive:i,reverse:o}=s;return lH(aH.Sum,a,n,r,i,o)}const hH={kernelName:yt,backendName:"webgl",kernelFunc:dH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,weights:r}=t,{size:i,binaryOutput:o}=s;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(r.dataId),s=jD(e,t,r.dtype,r.shape,i);return n.makeTensorInfo([i],r.dtype,s)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(r),s=QD(e,t,i,o);return n.makeTensorInfo(s.shape,r.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const mH={kernelName:wt,backendName:"webgl",kernelFunc:pH};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fH{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:r,dataFormat:i}=s,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],d=l*r,h=u*r,p=c/(r*r),m="NHWC"===i?[o,d,h,p]:[o,p,d,h],f=new fH(m,r,i);return n.runWebGLProgram(f,[a],a.dtype)}const bH={kernelName:vt,backendName:"webgl",kernelFunc:gH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yH{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gD(this.outputShape.length);const r=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${r}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xH{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gD(this.outputShape.length);const r=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)h+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;h+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)h+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(d+1)/2;g++){const e=2*g;if(h+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(i%2===1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,h+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=i%2===0?G(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,h+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):h+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(i%2===1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(h+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(h+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(h+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let p="",m="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${r};\n        int q = d2 - d1 * ${r};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${f}\n        ${m}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),$(du(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=ql(a.shape,r.shape,i,c,o,u,!0);let h;h=Ne().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new xH(d):new yH(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,r],"float32",p)}const vH={kernelName:kt,backendName:"webgl",kernelFunc:wH};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,a=e.padInfo.left,r=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${r} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class IH{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,a=e.strideWidth,r=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,d=ql(a.shape,c,i,o,l,u,!0),h=new kH(d);return n.runWebGLProgram(h,[a,r],"float32")}const TH={kernelName:It,backendName:"webgl",kernelFunc:SH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:r}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,d=ql(c,r.shape,i,o,l,u,!0),h=new IH(d);return n.runWebGLProgram(h,[a,r],"float32")}const CH={kernelName:St,backendName:"webgl",kernelFunc:NH};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RH{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],r=O(s.shape),i=aP({inputs:{x:s},backend:n,attrs:{shape:[r]}}),o=new RH(r),l=n.runWebGLProgram(o,[i],i.dtype),u=aP({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}const GH={kernelName:Tt,backendName:"webgl",kernelFunc:EH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MH{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:a,strideWidth:r,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=s;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${r});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r}=t,{strides:i,pad:o,dilations:l}=s,u=jl(a.shape,r.shape,i,o,"NHWC",l);let c;const d=new MH(u);c=n.runWebGLProgram(d,[a,r],"float32");const h=aP({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),h}const zH={kernelName:Nt,backendName:"webgl",kernelFunc:LH};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,r=t,{allDims:i,summedDims:o,idDims:l}=Wx(a,r.length);Fx(i.length,l,r);const{path:u,steps:c}=Vx(o,l),d=c.length;let h=null,p=i.length;const m=[];for(let f=0;f<d;++f){for(const e of c[f]){const{permutationIndices:t,expandDims:s}=$x(p,l[e]);let a;Ox(t)?a=r[e]:(a=bP({inputs:{x:r[e]},backend:n,attrs:{perm:t}}),m.push(a));const i=a.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);D(a.shape,i)||(a=aP({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===h?h=a:(h=tP({inputs:{a:a,b:h},backend:n}),m.push(h))}f<d-1&&(u[f]>=0&&(h=fP({inputs:{x:h},backend:n,attrs:{axis:u[f]-(i.length-p),keepDims:!1}}),m.push(h)),p--)}for(const f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}const $H={kernelName:Mt,backendName:"webgl",kernelFunc:WH},FH="return (x >= 0.0) ? x : (exp(x) - 1.0);",VH="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",OH=UK({opSnippet:FH,packedOpSnippet:VH}),AH={kernelName:Lt,backendName:"webgl",kernelFunc:OH},XH="return (b >= 0.0) ? a : a * (b + 1.0);",DH="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",ZH=e=>{const{inputs:t,backend:n}=e,{dy:s,y:a}=t,r=Ne().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new WK(DH,s.shape,a.shape):new LK(XH,s.shape,a.shape);return n.runWebGLProgram(r,[s,a],s.dtype)},KH={kernelName:zt,backendName:"webgl",kernelFunc:ZH},PH="\n  return vec4(equal(a, b));\n",_H="return float(a == b);",BH=YK({opSnippet:_H,packedOpSnippet:PH,dtype:"bool",cpuKernelImpl:nZ}),HH={kernelName:$t,backendName:"webgl",kernelFunc:BH},UH=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${gx};\n  float a1 = ${bx};\n  float a2 = ${yx};\n  float a3 = ${xx};\n  float a4 = ${wx};\n  float a5 = ${vx};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,YH=UK({opSnippet:UH}),jH={kernelName:Wt,backendName:"webgl",kernelFunc:YH},QH=HK+"\n  return exp(x);\n",JH="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",qH=UK({opSnippet:QH,packedOpSnippet:JH,cpuKernelImpl:sZ,dtype:"float32"}),eU={kernelName:Ft,backendName:"webgl",kernelFunc:qH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tU(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:r}=t,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&($(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),aP({inputs:{x:r},backend:s,attrs:{shape:o}})}const nU={kernelName:Vt,backendName:"webgl",kernelFunc:tU},sU="return exp(x) - 1.0;",aU=UK({opSnippet:sU,packedOpSnippet:sU,cpuKernelImpl:aZ}),rU={kernelName:Ot,backendName:"webgl",kernelFunc:aU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class iU{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,r=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${r};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(e,t,n){const s=n.texData.get(e.dataId),a=O(e.shape),r=e.shape[e.shape.length-1],i=a/r,o=aP({inputs:{x:e},backend:n,attrs:{shape:[i,r]}}),l=o.shape,u=new iU("real",l,t),c=new iU("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],h=n.runWebGLProgram(u,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),m=VK({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=aP({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function lU(e){const{inputs:t,backend:n}=e,{input:s}=t;return oU(s,!1,n)}const uU={kernelName:At,backendName:"webgl",kernelFunc:lU};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cU{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:r}=n;if(r=r||oe(a),"string"===r){const e=J(r,O(s));return e.fill(a),t.makeTensorInfo(s,r,e)}{const e=new cU(s,a),n=[[a]];return t.runWebGLProgram(e,[],r,n)}}const hU={kernelName:Xt,backendName:"webgl",kernelFunc:dU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pU{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU={kernelName:Dt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,a=new pU(n.shape);return s.runWebGLProgram(a,[n],n.dtype)}},fU="return floor(x);",gU=UK({opSnippet:fU,packedOpSnippet:fU,cpuKernelImpl:rZ}),bU={kernelName:Zt,backendName:"webgl",kernelFunc:gU},yU="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",xU="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",wU=YK({opSnippet:yU,packedOpSnippet:xU,dtype:"int32"}),vU={kernelName:Kt,backendName:"webgl",kernelFunc:wU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kU{constructor(e){this.variableNames=["A"];const t=dX(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IU{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=dX(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SU={kernelName:Hs,backendName:"webgl",kernelFunc:CU};let TU,NU=Ne().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function CU(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:a}=t;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[u,l],d=[u,l,r];if(o||i){const e=Ne().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==TU||e!==NU)&&(NU=e,TU=document.createElement("canvas").getContext("2d",{willReadFrequently:NU})),TU.canvas.width=l,TU.canvas.height=u,TU.drawImage(a,0,0,l,u),a=TU.canvas}const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=tA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=Ne().getBool("WEBGL_PACK")?new IU(d):new kU(d),m=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),m
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function RU(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:m}=s,f=pu(c),g=ql(a.shape,r.shape,l,d,u,h,!1,f);let b;const y=[],x=null!=i,w=null!=o,v="leakyrelu"===p,k=()=>{const e=[a,r],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=aP({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",or(m,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===f&&Ne().getBool("WEBGL_EXP_CONV")){const e=p?jK(p,!0):null,t=new NB(g,x,e,w,v),s=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],a=k();b=n.runWebGLProgram(t,a,"float32",s)}else if(Ne().getBool("WEBGL_CONV_IM2COL"))b=GB({x:a,filter:r,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:m});else{const e=p?jK(p,!1):null,t=new SB(g,x,e,w,v),s=k();b=n.runWebGLProgram(t,s,"float32")}else b=EB({x:a,filter:r,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:m});const I=aP({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}const EU={kernelName:js,backendName:"webgl",kernelFunc:RU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:r,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,m=[];let f=c;null==f&&(f=[1,1]),$(du(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));const g=ql(a.shape,r.shape,l,f,u,d,!0),b=Ne().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=h?jK(h,b):null,x=[a,r],w=null!=i,v=null!=o,k="leakyrelu"===h;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",or(p,"float32"));x.push(e),m.push(e)}let I;I=b?new xH(g,w,y,v,k):new yH(g,w,y,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=n.runWebGLProgram(I,x,"float32",S);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}const MU={kernelName:Qs,backendName:"webgl",kernelFunc:GU};class LU{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const a=oD(n.length);let r="\n    int index;";for(let i=0;i<this.sliceDim;i++)r+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${r}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,r=a.shape,i=r[r.length-1],o=O(s.shape),[l,u,c,d]=Ny(s,a),h=aP({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),p=aP({inputs:{x:s},backend:n,attrs:{shape:[O(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(s),r=iZ(e,t,s.dtype,u,i,c,d,s.shape,o);return n.makeTensorInfo(l,s.dtype,r.values)}const m=new LU(i,d,[u,c],s.shape),f=n.runWebGLProgram(m,[p,h],p.dtype),g=aP({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}const WU={kernelName:Bt,backendName:"webgl",kernelFunc:zU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $U{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=oD(this.rank),s=FU(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function FU(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<e.length;a++)2===a?s.push("index"):s.push(`${n[a]}`);return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:r}=t,{axis:i,batchDims:o}=s,l=Y(i,a.shape)[0];if(Ne().get("DEBUG")){const e=n.readSync(r.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){const s=e[n];$(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=tw(a,r,l,o),c=O(r.shape),d=[],h=aP({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=aP({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(h),d.push(p);const m=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),s=oZ(t,e,m);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const f=new $U(h.shape,m),g=n.runWebGLProgram(f,[h,p],h.dtype);d.push(g);const b=aP({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const OU={kernelName:_t,backendName:"webgl",kernelFunc:VU},AU="return float(a > b);",XU="\n  return vec4(greaterThan(a, b));\n",DU=YK({opSnippet:AU,packedOpSnippet:XU,cpuKernelImpl:lZ,dtype:"bool"}),ZU={kernelName:Ht,backendName:"webgl",kernelFunc:DU},KU="return float(a >= b);",PU="\n  return vec4(greaterThanEqual(a, b));\n",_U=YK({opSnippet:KU,packedOpSnippet:PU,dtype:"bool",cpuKernelImpl:uZ}),BU={kernelName:Ut,backendName:"webgl",kernelFunc:_U};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HU(e){const{inputs:t,backend:n}=e,{input:s}=t;return oU(s,!0,n)}const UU={kernelName:jt,backendName:"webgl",kernelFunc:HU},YU="return float(!isnan(x) && !isinf(x));",jU=UK({opSnippet:YU,dtype:"bool"}),QU={kernelName:Jt,backendName:"webgl",kernelFunc:jU},JU="return float(isinf(x));",qU=UK({opSnippet:JU,dtype:"bool"}),eY={kernelName:qt,backendName:"webgl",kernelFunc:qU},tY="return float(isnan(x));",nY=UK({opSnippet:tY,dtype:"bool"}),sY={kernelName:en,backendName:"webgl",kernelFunc:nY},aY="return float(a < b);",rY="\n  return vec4(lessThan(a, b));\n",iY=YK({opSnippet:aY,packedOpSnippet:rY,cpuKernelImpl:cZ,dtype:"bool"}),oY={kernelName:nn,backendName:"webgl",kernelFunc:iY},lY="return float(a <= b);",uY="\n  return vec4(lessThanEqual(a, b));\n",cY=YK({opSnippet:lY,packedOpSnippet:uY,cpuKernelImpl:dZ,dtype:"bool"}),dY={kernelName:sn,backendName:"webgl",kernelFunc:cY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hY(e){const{backend:t,attrs:n}=e,{start:s,stop:a,num:r}=n,i=hZ(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const pY={kernelName:an,backendName:"webgl",kernelFunc:hY},mY=HK+"\n  return x < 0.0 ? 0./0. : log(x);\n",fY="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",gY=UK({opSnippet:mY,packedOpSnippet:fY,cpuKernelImpl:pZ}),bY={kernelName:rn,backendName:"webgl",kernelFunc:gY},yY=HK+"\n  return log(1.0 + x);\n",xY=UK({opSnippet:yY}),wY={kernelName:on,backendName:"webgl",kernelFunc:xY},vY="return float(a >= 1.0 && b >= 1.0);",kY="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",IY=YK({opSnippet:vY,packedOpSnippet:kY,dtype:"bool"}),SY={kernelName:ln,backendName:"webgl",kernelFunc:IY},TY="return float(!(x >= 1.0));",NY=UK({opSnippet:TY}),CY={kernelName:un,backendName:"webgl",kernelFunc:NY},RY="return float(a >= 1.0 || b >= 1.0);",EY="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",GY=YK({opSnippet:RY,packedOpSnippet:EY,dtype:"bool"}),MY={kernelName:cn,backendName:"webgl",kernelFunc:GY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LY{constructor(e,t,n,s,a){this.variableNames=["x"],this.outputShape=[];const r=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${r}; j <= ${r}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zY{constructor(e,t,n,s,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const r=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${r};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${r}; j <= ${r}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WY=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:r,bias:i,alpha:o,beta:l}=s,u=Ne().getBool("WEBGL_PACK_NORMALIZATION")?new zY(a.shape,r,i,o,l):new LY(a.shape,r,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)},$Y={kernelName:mn,backendName:"webgl",kernelFunc:WY};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FY{constructor(e,t,n,s,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a,y:r,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,d=new FY(a.shape,o,l,u,c);return n.runWebGLProgram(d,[a,r,i],a.dtype)},OY={kernelName:fn,backendName:"webgl",kernelFunc:VY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(e,t,n,s){const a=O(t),r=O(e.shape)/a,i=aP({inputs:{x:e},attrs:{shape:[r,a]},backend:s}),o=uP(i,e.dtype,"max",s),l=aP({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function XY(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:r,keepDims:i}=s,o=a.shape.length,l=Y(r,a.shape);let u=l;const c=id(u,o),d=null!=c,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=a.shape[c[n]];const s=ZZ(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype);const r=n.texData.get(p.dataId);r.values=s}else p=pP(a,c,n);u=ld(u.length,o)}rd("max",u,o);const[m,f]=sd(p.shape,u);let g,b=m;if(i&&(b=ad(m,l)),h){const e=n.texData.get(p.dataId).values,t=mZ(e,O(f),b,a.dtype);g=n.makeTensorInfo(b,a.dtype);const s=n.texData.get(g.dataId);s.values=t}else g=AY(p,f,b,n);return d&&n.disposeIntermediateTensorInfo(p),g}const DY={kernelName:bn,backendName:"webgl",kernelFunc:XY},ZY=MK+"\n  return max(a, b);\n",KY="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+zK+"\n  return result;\n",PY=YK({opSnippet:ZY,packedOpSnippet:KY,cpuKernelImpl:fZ}),_Y={kernelName:yn,backendName:"webgl",kernelFunc:PY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BY(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;lX(a,"maxPool");const{filterSize:r,strides:i,pad:o,dimRoundingMode:l}=s,u=1;$(du(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Ql(a.shape,r,i,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&D(c.inShape,c.outShape))return $K({inputs:{x:a},backend:n});const d=new m_(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}const HY={kernelName:xn,backendName:"webgl",kernelFunc:BY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UY(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:r,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],d=Jl(a.shape,r,i,c,o,u,l),h=new f_(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}const YY={kernelName:vn,backendName:"webgl",kernelFunc:UY};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jY{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,a=e.effectiveFilterHeight,r=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=r-1-e.padInfo.left,l=a*r-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${r} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QY{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,a=e.dilationDepth,r=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${r}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r}=t,i=r,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,d=[1,1,1],h=Jl(i.shape,o,l,d,u,c),p=new f_(h,"max",!0),m=n.runWebGLProgram(p,[i],i.dtype),f=new QY(h),g=n.runWebGLProgram(f,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}const qY={kernelName:kn,backendName:"webgl",kernelFunc:JY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:r,output:i}=t,o=r;lX([r,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s,h=Ql(o.shape,l,u,1,c,d),p=!0,m=new m_(h,"max",p),f=n.runWebGLProgram(m,[o],o.dtype),g=new jY(h),b=n.runWebGLProgram(g,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),b}const tj={kernelName:wn,backendName:"webgl",kernelFunc:ej};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(e,t,n,s){let a=new m_(n,"max",!1);const r=s.runWebGLProgram(a,[e],"float32");a=new m_(n,"max",!0,!0,t);const i=s.runWebGLProgram(a,[e],"float32");return[r,i]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:In,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:r,pad:i,includeBatchInIndex:o}=t,l=n;$(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];$(du(r,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`));const c=Ql(s.shape,a,r,u,i),[d,h]=nj(s,o,c,l);return[d,h]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aj(e,t,n,s){const a=O(t),r=O(e.shape)/a,i=aP({inputs:{x:e},attrs:{shape:[r,a]},backend:s}),o=uP(i,"float32","mean",s),l=aP({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}const rj={kernelName:Sn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:r}=t,i=n,o=s.shape.length,l=Y(r,s.shape);let u=l;const c=id(u,o),d=null!=c,h=i.shouldExecuteOnCPU([s]),p=[];let m=s;if(d){if(h){const e=i.texData.get(m.dataId).values,t=new Array(o);for(let r=0;r<t.length;r++)t[r]=s.shape[c[r]];const n=ZZ(e,s.shape,s.dtype,c,t);m=i.makeTensorInfo(t,s.dtype);const a=i.texData.get(m.dataId);a.values=n}else m=pP(s,c,i);p.push(m),u=ld(u.length,o)}rd("sum",u,o);const[f,g]=sd(m.shape,u);let b=f;a&&(b=ad(f,l));const y=aj(m,g,b,i);for(const x of p)i.disposeIntermediateTensorInfo(x);return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ij(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s,o=a.shape.length,l=Y(r,a.shape);let u=l;const c=id(u,o);let d=a;null!=c&&(d=bP({inputs:{x:a},backend:n,attrs:{perm:c}}),u=ld(u.length,a.shape.length)),rd("min",u,o);const[h,p]=sd(d.shape,u),m=O(p),f=aP({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=uP(f,f.dtype,"min",n);let b;if(i){const e=ad(h,l);b=aP({inputs:{x:g},backend:n,attrs:{shape:e}})}else b=aP({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),b}const oj={kernelName:Tn,backendName:"webgl",kernelFunc:ij},lj=MK+"\n  return min(a, b);\n",uj="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+zK+"\n  return result;\n",cj=YK({opSnippet:lj,packedOpSnippet:uj,cpuKernelImpl:gZ}),dj={kernelName:Nn,backendName:"webgl",kernelFunc:cj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hj{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=oD(s),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${a} start = ${a}(${r});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${r};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pj{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=oD(s),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=_Z("rc",s),l=_Z("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===s){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${r});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj=({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:a,mode:r}=n,i=Ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pj(s.shape,a,r):new hj(s.shape,a,r);return t.runWebGLProgram(i,[s],s.dtype)},fj={kernelName:Cn,backendName:"webgl",kernelFunc:mj},gj="if (b == 0.0) return NAN;\n  return mod(a, b);",bj="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+zK+"\n  return result;\n",yj=YK({opSnippet:gj,packedOpSnippet:bj}),xj={kernelName:Rn,backendName:"webgl",kernelFunc:yj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wj{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",kj="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",Ij=YK({opSnippet:vj,packedOpSnippet:kj,checkOutOfBounds:!0}),Sj={kernelName:Gt,backendName:"webgl",kernelFunc:Ij},Tj="return a - b;",Nj=YK({opSnippet:Tj,packedOpSnippet:Tj,supportsComplex:!0,cpuKernelImpl:AZ}),Cj={kernelName:Ws,backendName:"webgl",kernelFunc:Nj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rj(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:r}=s,i=Y([r],a.shape),o=XY({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=ad(o.shape,i),u=aP({inputs:{x:o},backend:n,attrs:{shape:l}}),c=Nj({inputs:{a:a,b:u},backend:n}),d=qH({inputs:{x:c},backend:n}),h=fP({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=aP({inputs:{x:h},backend:n,attrs:{shape:l}}),m=Ij({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),m}const Ej={kernelName:vs,backendName:"webgl",kernelFunc:Rj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{numSamples:r,seed:i,normalized:o}=s,l=o?a:Rj({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new wj(u,c,r),h=[[i]],p=n.runWebGLProgram(d,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),p}const Mj={kernelName:En,backendName:"webgl",kernelFunc:Gj},Lj=aK+"\n  return -x;\n",zj="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wj(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,a]=yZ(e.values,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,t)}let a;return a=Ne().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bK(s.shape,zj):new sK(s.shape,Lj),n.runWebGLProgram(a,[s],s.dtype)}const $j={kernelName:Mn,backendName:"webgl",kernelFunc:Wj},Fj=pg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(e){Js("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),{selectedIndices:d}=Fj(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Oj={kernelName:zn,backendName:"webgl",kernelFunc:Vj},Aj=mg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xj(e){Js("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(a.dataId),d=n.readSync(r.dataId),{selectedIndices:h,validOutputs:p}=Aj(c,d,i,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Dj={kernelName:Wn,backendName:"webgl",kernelFunc:Xj},Zj=fg;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(e){Js("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(a.dataId),d=n.readSync(r.dataId),h=i,p=o,m=l,f=u,{selectedIndices:g,selectedScores:b}=Zj(c,d,h,p,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const Pj={kernelName:$n,backendName:"webgl",kernelFunc:Kj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _j{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj=e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{dtype:r,depth:i,onValue:o,offValue:l}=s,u=O(a.shape),c=new _j(u,i,o,l),d=aP({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(c,[d],r);n.disposeIntermediateTensorInfo(d);const p=[...a.shape,i],m=aP({inputs:{x:h},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(h),m},Hj={kernelName:Vn,backendName:"webgl",kernelFunc:Bj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=J_({inputs:{input:s},backend:n}),t=Uj({inputs:{x:e},backend:n}),a=yB({inputs:{input:s},backend:n}),r=Uj({inputs:{x:a},backend:n}),i=VK({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}return dU({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const Yj={kernelName:_s,backendName:"webgl",kernelFunc:Uj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=J_({inputs:{input:s},backend:n}),t=jj({inputs:{x:e},backend:n}),a=yB({inputs:{input:s},backend:n}),r=Uj({inputs:{x:a},backend:n}),i=VK({inputs:{real:t,imag:r},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}return dU({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const Qj={kernelName:Fn,backendName:"webgl",kernelFunc:jj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return tU({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach((e=>{F(r,e.shape,"All tensors passed to stack must have matching shapes"),$(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=tU({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),u=kB({inputs:l,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const qj={kernelName:On,backendName:"webgl",kernelFunc:Jj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eQ{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=oD(s),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${a} start = ${a}(${r});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${r};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tQ{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,a=oD(s),r=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=_Z("rc",s),l=_Z("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],h=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let m=0,f=1===s?2:4;m<f;m++)p+=`\n        ${d[m]}\n        if (${h}) {\n          result[${m}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${m}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${r});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nQ=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:r,constantValue:i}=s;if(0===O(a.shape)){const e=r.map(((e,t)=>e[0]+a.shape[t]+e[1]));return dU({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}const o=Ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tQ(a.shape,r,i):new eQ(a.shape,r,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},sQ={kernelName:An,backendName:"webgl",kernelFunc:nQ},aQ="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",rQ="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+zK+"\n  return result;\n",iQ=YK({opSnippet:aQ,packedOpSnippet:rQ}),oQ={kernelName:Dn,backendName:"webgl",kernelFunc:iQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lQ(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:r,keepDims:i}=s,o=a.shape.length,l=[],u=Y(r,a.shape);let c=u;const d=id(c,o);let h,p=a;if(null!=d&&(p=bP({inputs:{x:a},backend:n,attrs:{perm:d}}),c=ld(c.length,o),l.push(p)),rd("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:a}=wZ(p.shape,p.dtype,e,c);h=n.makeTensorInfo(s,a,t)}else{const[e,t]=sd(p.shape,c),s=O(t),r=aP({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),i=Br(a.dtype),o=uP(r,i,"prod",n);h=aP({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(r),l.push(o)}if(i){l.push(h);const e=ad(h.shape,u);h=aP({inputs:{x:h},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const uQ={kernelName:Kn,backendName:"webgl",kernelFunc:lQ};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cQ(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:o}=s,l=a.map((e=>n.readSync(e.dataId))),u=a.map((e=>e.shape)),c=n.readSync(r.dataId),d=n.readSync(i.dataId),[h,p,m]=vZ(l,u,c,r.shape,r.dtype,d,i.shape,o),f=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(m,r.dtype,p);return f.concat([g])}const dQ={kernelName:Pn,backendName:"webgl",kernelFunc:cQ};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(e){const{inputs:t,backend:n}=e,{starts:s,limits:a,deltas:r}=t,i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=kZ(i,s.shape,s.dtype,o,a.shape,l,r.shape),d=n.makeTensorInfo([u.length],"int32",u),h=n.makeTensorInfo([c.length],s.dtype,c);return[d,h]}const pQ={kernelName:_n,backendName:"webgl",kernelFunc:hQ};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(e){const{inputs:t,backend:n,attrs:s}=e,{shape:a,values:r,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(a.dataId),c=n.readSync(r.dataId),d=n.readSync(i.dataId),h=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[m,f]=IZ(u,a.shape,c,r.shape,r.dtype,d,i.shape,h,p,l);return n.makeTensorInfo(m,r.dtype,f)}const fQ={kernelName:Bn,backendName:"webgl",kernelFunc:mQ},gQ=e=>{const{backend:t,attrs:n}=e,{start:s,stop:a,step:r,dtype:i}=n,o=SZ(s,a,r,i);return t.makeTensorInfo([o.length],i,o)},bQ={kernelName:Hn,backendName:"webgl",kernelFunc:gQ},yQ="return 1.0 / x;",xQ=UK({opSnippet:yQ}),wQ={kernelName:Yn,backendName:"webgl",kernelFunc:xQ},vQ=aK+"\n  return (x < 0.0) ? 0.0 : x;\n",kQ="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",IQ=UK({opSnippet:vQ,packedOpSnippet:kQ}),SQ={kernelName:jn,backendName:"webgl",kernelFunc:IQ},TQ=aK+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",NQ="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",CQ=UK({opSnippet:TQ,packedOpSnippet:NQ}),RQ={kernelName:ns,backendName:"webgl",kernelFunc:CQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EQ{constructor(e,t,n,s,a){this.variableNames=["A"],this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GQ{constructor(e,t,n,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MQ(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=Ne().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new GQ(a.shape,l,u,r,i):new EQ(a.shape,l,u,r,i);return n.runWebGLProgram(c,[a],"float32")}const LQ={kernelName:es,backendName:"webgl",kernelFunc:MQ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zQ{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,a]=t,[,r,i]=e,o=[n&&r>1?s-1:s,n&&i>1?a-1:a],l=[n&&r>1?r-1:r,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,m=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:i}=s,o=new zQ(r.shape,a.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const $Q={kernelName:ts,backendName:"webgl",kernelFunc:WQ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FQ{constructor(e,t,n,s,a){this.variableNames=["A"],this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VQ{constructor(e,t,n,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,i,o,l]=e;this.outputShape=[r,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],d=s?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OQ(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:o}=s,[l,u]=o,c=Ne().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new VQ(a.shape,l,u,r,i):new FQ(a.shape,l,u,r,i);return n.runWebGLProgram(c,[a],a.dtype)}const AQ={kernelName:Jn,backendName:"webgl",kernelFunc:OQ};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XQ{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,a]=t,[,r,i]=e,o=[n&&r>1?s-1:s,n&&i>1?a-1:a],l=[n&&r>1?r-1:r,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,h=1/c,p=2*Math.ceil(d)+2,m=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${r}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(e){const{inputs:t,backend:n,attrs:s}=e,{images:a,dy:r}=t,{alignCorners:i}=s,o=new XQ(r.shape,a.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const ZQ={kernelName:qn,backendName:"webgl",kernelFunc:DQ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KQ{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,a=e.map(((e,t)=>s(t))).join(","),r=oD(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PQ{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=_Z("rc",n),a=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,r=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=oD(n);function o(e){return d(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",d(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",d(e)}function c(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",d(e)}function d(t){const n=e.map(((e,n)=>h(n,t))),s=n.join(","),a=n.slice(-2).join(",");return`getChannel(getX(${s}), vec2(${a}))`}function h(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(s.slice())};\n          if(${a}){\n            result.g = ${l(s.slice())};\n          }\n          if(${r}) {\n            result.b = ${u(s.slice())};\n            if(${a}) {\n              result.a = ${c(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:r}=s,i=a.shape.length,o=Y(r,a.shape);if(0===i)return $K({inputs:{x:a},backend:n});const l=Ne().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PQ(a.shape,o):new KQ(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}const BQ={kernelName:ss,backendName:"webgl",kernelFunc:_Q};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HQ{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UQ={kernelName:Us,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:r,center:i}=t,o=n,l=new HQ(s.shape,r),[u,c]=lx(i,s.shape[1],s.shape[2]),d=[[u,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[s],s.dtype,d)}},YQ="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",jQ=UK({opSnippet:YQ}),QQ={kernelName:as,backendName:"webgl",kernelFunc:jQ},JQ="return inversesqrt(x);",qQ=UK({opSnippet:JQ,cpuKernelImpl:TZ}),eJ={kernelName:rs,backendName:"webgl",kernelFunc:qQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tJ{constructor(e,t,n,s,a,r,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=r;const l=oD(a.length),u=oD(r.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`;let m="";o&&(m="coords[0], coords[1]");const f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nJ{constructor(e,t,n,s,a,r,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r;const l=oD(a.length),u=oD(r.length);let c="";1===n?c="i":2===n&&(c="i, j");const d=`getIndices(${c})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`;let m="";o&&(m="coords[0], coords[1]");const f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sJ(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=of(r,a,i),h=[d/u,u];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=aP({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=aP({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Ne().getBool("WEBGL_PACK")?new nJ(l,o,p.shape.length,m.shape.length,c,h):new tJ(l,o,p.shape.length,m.shape.length,c,h);const b=n.runWebGLProgram(g,[m,p,f],m.dtype),y=aP({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(f),y}const aJ={kernelName:is,backendName:"webgl",kernelFunc:sJ};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rJ{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a="while (left < right) {",r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Ne().getNumber("WEBGL_VERSION")?a:r,o="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iJ(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:a,values:r}=t,{side:i}=s,o=new rJ(a.shape[0],a.shape[1],r.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,r],"int32",l)}const oJ={kernelName:ls,backendName:"webgl",kernelFunc:iJ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lJ{constructor(e,t,n){let s,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&r.push(`${n[s]}`);s=r.join(),a=i.join()}const r=oD(n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:r}=t,i=new lJ(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[s,a,r],_r(a.dtype,r.dtype))}const cJ={kernelName:us,backendName:"webgl",kernelFunc:uJ},dJ=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${mx};\n  float scale = ${fx};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,hJ=UK({opSnippet:dJ}),pJ={kernelName:cs,backendName:"webgl",kernelFunc:hJ},mJ=HK+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",fJ="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",gJ=UK({opSnippet:mJ,packedOpSnippet:fJ,cpuKernelImpl:CZ}),bJ={kernelName:fs,backendName:"webgl",kernelFunc:gJ},yJ="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",xJ=UK({opSnippet:yJ}),wJ={kernelName:ms,backendName:"webgl",kernelFunc:xJ},vJ=HK+"\n  return sin(x);\n",kJ=`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${zK}\n  return result;\n`,IJ=UK({opSnippet:vJ,packedOpSnippet:kJ}),SJ={kernelName:hs,backendName:"webgl",kernelFunc:IJ},TJ="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",NJ=UK({opSnippet:TJ}),CJ={kernelName:ps,backendName:"webgl",kernelFunc:NJ},RJ="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",EJ=UK({opSnippet:RJ}),GJ={kernelName:gs,backendName:"webgl",kernelFunc:EJ},MJ=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:r,paddings:i}=s;$(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=r.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let b=1+r.length;b<a.shape.length;++b)l.push([0,0]);const u=[],c=nQ({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=ux(c.shape,r,o,!1),h=cx(d.length,r.length,!1),p=dx(c.shape,r,o,!1),m=aP({inputs:{x:c},backend:n,attrs:{shape:d}}),f=bP({inputs:{x:m},backend:n,attrs:{perm:h}}),g=aP({inputs:{x:f},backend:n,attrs:{shape:p}});return u.push(c),u.push(m),u.push(f),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g},LJ={kernelName:xs,backendName:"webgl",kernelFunc:MJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zJ(e){const{inputs:t,backend:n}=e,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(1!==r.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${r.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=n.readSync(r.dataId),c=n.readSync(i.dataId)[0],[d,h,p,m,f]=GZ(o,s.shape,s.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(h,s.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map((e=>Number(e))))),n.makeTensorInfo([f.length],s.dtype,new Int32Array(f))]}const WJ={kernelName:ks,backendName:"webgl",kernelFunc:zJ};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $J(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:a,newShape:r}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(r.dataId)),[u,c,d]=MZ(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([d.length],r.dtype,new Int32Array(d))]}const FJ={kernelName:Is,backendName:"webgl",kernelFunc:$J};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VJ(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${r.shape}`);const i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=LZ(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const OJ={kernelName:Ss,backendName:"webgl",kernelFunc:VJ};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AJ(e){const{inputs:t,backend:n}=e,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==r.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${r.shape}`);const i=n.readSync(s.dataId),o=n.readSync(a.dataId),l=n.readSync(r.dataId),[u,c]=LZ(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const XJ={kernelName:Ts,backendName:"webgl",kernelFunc:AJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DJ(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:h}=of(r,a,o),p=!1;if("string"===r.dtype){const e=n.bufferSync(a),t=n.bufferSync(r),s=pr(n.readSync(i.dataId)[0]),m=NZ(e,t,o,h,c,u,l,d,s,p);return n.makeTensorInfo(o,m.dtype,m.values)}const m=new tJ(u,l,a.shape.length,r.shape.length,d,[h,1],p),f=n.runWebGLProgram(m,[r,a,i],r.dtype),g=aP({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}const ZJ={kernelName:Ns,backendName:"webgl",kernelFunc:DJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KJ(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,o=Y(i,a.shape)[0],l=Xx(a,r,o),u=a.shape.length,c=new Array(u).fill(0),d=a.shape.slice();return l.map((e=>{const t=[...d];t[o]=e;const s=V_({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}const PJ={kernelName:ws,backendName:"webgl",kernelFunc:KJ},_J="return sqrt(x);",BJ=UK({opSnippet:_J,packedOpSnippet:_J,cpuKernelImpl:zZ}),HJ={kernelName:bs,backendName:"webgl",kernelFunc:BJ},UJ="return x * x;",YJ=UK({opSnippet:UJ}),jJ={kernelName:Rs,backendName:"webgl",kernelFunc:YJ},QJ="return (a - b) * (a - b);",JJ=YK({opSnippet:QJ,packedOpSnippet:QJ}),qJ={kernelName:Cs,backendName:"webgl",kernelFunc:JJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eq(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const r=n.readSync(a.dataId),i=sw(r),o=WZ(i,"string",s);return n.makeTensorInfo(a.shape,"string",o)}const tq={kernelName:Es,backendName:"webgl",kernelFunc:eq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nq({inputs:e,attrs:t,backend:n}){const{x:s}=e,a=aK+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,r=new sK(s.shape,a);return n.runWebGLProgram(r,[s],s.dtype)}const sq={kernelName:Bs,backendName:"webgl",kernelFunc:nq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aq{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,a=oD(n.length),r=oD(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rq(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:r,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:b,begin:y,end:x,strides:w}=_y(a.shape,r,i,o,l,u,c,d,h);let v;if(f)v=aP({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||b){$(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Ly(y,x,w),t=V_({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});v=aP({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=dl(a.shape,a.dtype,e),s=$Z(p,t,w,y);v=n.makeTensorInfo(m,a.dtype,s.values)}else{const e=new aq(y,w,p);v=n.runWebGLProgram(e,[a],a.dtype)}const k=aP({inputs:{x:v},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(v),k}const iq={kernelName:Gs,backendName:"webgl",kernelFunc:rq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(e){const{inputs:t,backend:n,attrs:s}=e,{separator:a,nGramWidths:r,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[m,f]=FZ(h,p,a,r,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",f)]}const lq={kernelName:Ms,backendName:"webgl",kernelFunc:oq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uq(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(1!==r.shape.length)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(i.dataId)[0],[u,c,d]=VZ(o,l,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const cq={kernelName:Ls,backendName:"webgl",kernelFunc:uq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dq(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:a}=s,{input:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(r.dataId),o=OZ(i,a);return n.makeTensorInfo(r.shape,"int32",o)}const hq={kernelName:zs,backendName:"webgl",kernelFunc:dq},pq="return tan(x);",mq=UK({opSnippet:pq}),fq={kernelName:$s,backendName:"webgl",kernelFunc:mq},gq="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",bq=UK({opSnippet:gq}),yq={kernelName:Fs,backendName:"webgl",kernelFunc:bq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xq(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:a,indices:r,updates:i}=t,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=of(i,r,a.shape),h=[d/u,u];if(0===d)return n.makeTensorInfo(a.shape,r.dtype);const p=aP({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),m=aP({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),f=aP({inputs:{x:a},backend:n,attrs:{shape:h}}),g=new tJ(l,o,p.shape.length,m.shape.length,c,h,!1,!0),b=n.runWebGLProgram(g,[m,p,f],f.dtype),y=aP({inputs:{x:b},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),y}const wq={kernelName:os,backendName:"webgl",kernelFunc:xq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vq{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const s=oD(this.rank),a=kq(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function kq(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<e.length;a++)s.push(`imod(${n[a]}, ${e[a]})`);return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:r}=s;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>pr(e))):e,s=dl(a.shape,a.dtype,t),i=XZ(s,r);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new vq(a.shape,r);return n.runWebGLProgram(i,[a],a.dtype)}const Sq={kernelName:Vs,backendName:"webgl",kernelFunc:Iq};class Tq{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Nq{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cq(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Rq(e){let t=1;for(;t<e;)t*=2;return t}function Eq(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:r,sorted:i}=s,o=Ne().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ne().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([a])||c<o||r>l){const e=n.readSync(a.dataId),[t,s]=DZ(e,u,a.dtype,r,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===r)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[a,dU({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),h=null!==d&&d.isPacked,p=h?n.unpackTensor(a):a,m=O(u)/c,f=aP({inputs:{x:p},attrs:{shape:[m,c]},backend:n});h&&Cq(n,p);const g=Rq(r),b=Rq(c);let y=null;const x=()=>null===y?[f,f]:[f,y],w=(e,t,s)=>{const a=x(),r=new Tq(s),i=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(r,a,"int32",i),Cq(n,o)};for(let T=1;T<g;T*=2){const e=2*T;for(let t=T;t>=1;t/=2)w(e,t,[m,b])}for(let T=b;T>g;T/=2){const e=x(),t=new Nq([m,T/2]),s=[[c],[null===y?1:0],[g]],a=y;y=n.runWebGLProgram(t,e,"int32",s),Cq(n,a);const r=g/2,i=2*r;for(let n=r;n>=1;n/=2)w(i,n,y.shape)}let v=y;y=V_({inputs:{x:y},backend:n,attrs:{begin:0,size:[m,r]}}),Cq(n,v);let k=VU({inputs:{x:f,indices:y},backend:n,attrs:{axis:1,batchDims:1}});Cq(n,f);const I=u.slice(0,-1);I.push(r),v=y,y=aP({inputs:{x:y},attrs:{shape:I},backend:n}),Cq(n,v);const S=k;return k=aP({inputs:{x:k},attrs:{shape:I},backend:n}),Cq(n,S),[k,y]}const Gq={kernelName:Os,backendName:"webgl",kernelFunc:Eq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mq{constructor(e,t,n,s,a,r){this.variableNames=["Image","Transforms"],this.outputShape=r;const i="nearest"===n?1:2;let o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lq(e){const{inputs:t,backend:n,attrs:s}=e,{image:a,transforms:r}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,d,h,p]=a.shape,[m,f]=u??[d,h],g=[c,m,f,p],b=new Mq(d,h,i,o,l,g);return n.runWebGLProgram(b,[a,r],"float32")}const zq={kernelName:As,backendName:"webgl",kernelFunc:Lq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wq(e){const{inputs:t,attrs:n,backend:s}=e,{axis:a}=n,{x:r}=t;lX(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:o,outputShape:l,indices:u}=KZ(i,a,r.shape,r.dtype);return[s.makeTensorInfo(l,r.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const $q={kernelName:Ds,backendName:"webgl",kernelFunc:Wq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fq(e){const{inputs:t,backend:n,attrs:s}=e,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[r],u=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==r&&(u[c++]=i.shape[f]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[r]=1;const m=new Array(l);for(let f=0;f<m.length;f++){h[r]=f;const e=V_({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),t=aP({inputs:{x:e},backend:n,attrs:{shape:u}});m[f]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const Vq={kernelName:Zs,backendName:"webgl",kernelFunc:Fq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oq{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,a=e.inSize,r=e.numSegments,i=r*Math.ceil(a/n);this.outputShape=[s,i];const o="0.0",l="sumValue",u=4*Math.floor(n/4),c=n%4,d="\n        sumValue += dot(values, segFilter);\n    ";let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${r})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${r})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:r}=t,{numSegments:i}=s,o=a.shape.length,l=[];let u=0;const c=id([u],o);let d=a;null!=c&&(d=bP({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(d),u=ld(1,o)[0]);const h=ew(d.shape,u,i),p=O([d.shape[u]]),m=aP({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});l.push(m);const f=Br(a.dtype),g=(e,t,s,a,r)=>{const i=e.shape[0],o=e.shape[1],u=qx(o,r),c={windowSize:u,inSize:o,batchSize:i,numSegments:r},d=new Oq(c,t),h=n.compileAndRun(d,[e,s],a);if(l.push(h),h.shape[1]===r)return h;const p=gQ({backend:n,attrs:{start:0,stop:r,step:1,dtype:"float32"}}),m=Iq({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(m),g(h,t,m,a,r)},b=g(m,"unsortedSegmentSum",r,f,i),y=aP({inputs:{x:b},backend:n,attrs:{shape:h}});let x=y;if(null!=c){l.push(y);const e=od(c);x=bP({inputs:{x:x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const Xq={kernelName:Ks,backendName:"webgl",kernelFunc:Aq},Dq=[kP,TP,RP,MP,WP,OP,XP,ZP,YP,QP,e_,s_,i_,c_,p_,b_,x_,I_,T_,C_,M_,X_,Z_,B_,U_,sB,iB,cB,OK,mB,IB,LB,OB,DB,KB,_B,HB,QB,eH,sH,cH,hH,mH,bH,vH,TH,CH,GH,zH,$H,AH,KH,HH,jH,eU,nU,rU,uU,hU,mU,bU,vU,SU,EU,MU,WU,OU,ZU,BU,FK,UU,xB,QU,eY,sY,ZK,oY,dY,pY,bY,wY,SY,CY,MY,$Y,OY,DY,_Y,HY,YY,qY,tj,sj,rj,oj,dj,fj,xj,Mj,nP,$j,Oj,Dj,Pj,Q_,Hj,Qj,qj,sQ,oQ,BK,uQ,dQ,pQ,fQ,bQ,q_,Sj,wQ,SQ,RQ,rP,LQ,$Q,AQ,ZQ,BQ,UQ,QQ,eJ,aJ,oJ,cJ,pJ,bJ,wJ,SJ,CJ,O_,Ej,GJ,LJ,WJ,FJ,OJ,XJ,ZJ,PJ,HJ,jJ,qJ,tq,sq,iq,lq,cq,hq,Cj,gP,fq,yq,wq,Sq,Gq,zq,yP,$q,Vq,Xq,Yj];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const _ee of Dq)ra(_ee);const Zq="",Kq=typeof window<"u"&&window.Blob&&new Blob([atob(Zq)],{type:"text/javascript;charset=utf-8"});function Pq(e){let t;try{if(t=Kq&&(window.URL||window.webkitURL).createObjectURL(Kq),!t)throw"";const n=new Worker(t,{name:null==e?void 0:e.name});return n.addEventListener("error",(()=>{(window.URL||window.webkitURL).revokeObjectURL(t)})),n}catch{return new Worker("data:application/javascript;base64,"+Zq,{name:null==e?void 0:e.name})}finally{t&&(window.URL||window.webkitURL).revokeObjectURL(t)}}const _q=(e,t)=>[[e[0][0]*t[0][0]+e[0][2]*t[2][0],e[0][0]*t[0][1]+e[0][2]*t[2][1],e[0][0]*t[0][2]+e[0][2]*t[2][2],e[0][0]*t[0][3]+e[0][2]*t[2][3]],[e[1][1]*t[1][0]+e[1][2]*t[2][0],e[1][1]*t[1][1]+e[1][2]*t[2][1],e[1][1]*t[1][2]+e[1][2]*t[2][2],e[1][1]*t[1][3]+e[1][2]*t[2][3]],[t[2][0],t[2][1],t[2][2],t[2][3]]],Bq=(e,t,n,s)=>{const a=e[0][0]*t+e[0][1]*n+e[0][3],r=e[1][0]*t+e[1][1]*n+e[1][3],i=e[2][0]*t+e[2][1]*n+e[2][3];return{x:a,y:r,z:i}},Hq=(e,t,n,s)=>{const{x:a,y:r,z:i}=Bq(e,t,n);return{x:a/i,y:r/i}},Uq=6,Yq=1,jq=10,Qq=1,Jq=.8,qq=1,e0=1e3;class t0{constructor(e,t,n,s,a,r=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=n,this.debugMode=r,this.trackingKeyframeList=[];for(let o=0;o<t.length;o++)this.trackingKeyframeList.push(t[o][qq]);let i=0;for(let o=0;o<this.trackingKeyframeList.length;o++)i=Math.max(i,this.trackingKeyframeList[o].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let o=0;o<this.trackingKeyframeList.length;o++){const{featurePoints:e,imagePixels:t,imageProperties:n}=this._prebuild(this.trackingKeyframeList[o],i);this.featurePointsListT[o]=e,this.imagePixelsListT[o]=t,this.imagePropertiesListT[o]=n}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(e,t,n)}track(e,t,n){let s={};const a=_q(this.projectionTransform,t),r=this._buildAdjustedModelViewTransform(a);this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height;const i=this.featurePointsListT[n],o=this.imagePixelsListT[n],l=this.imagePropertiesListT[n],u=this._computeProjection(r,e,n),{matchingPointsT:c,simT:d}=this._computeMatching(i,o,l,u),h=c.arraySync(),p=d.arraySync(),m=this.trackingKeyframeList[n],f=[],g=[],b=[];for(let y=0;y<h.length;y++)if(p[y]>Jq&&y<m.points.length){b.push(y);const e=Hq(a,h[y][0],h[y][1]);g.push(e),f.push({x:m.points[y].x/m.scale,y:m.points[y].y/m.scale,z:0})}return this.debugMode&&(s={projectedImage:u.arraySync(),matchingPoints:c.arraySync(),goodTrack:b,trackedPoints:g}),r.dispose(),u.dispose(),c.dispose(),d.dispose(),{worldCoords:f,screenCoords:g,debugExtra:s}}_computeMatching(e,t,n,s){const a=Uq,r=2*a+1,i=jq*Yq,o=Qq,l=2*i+1,u=s.shape[0],c=s.shape[1],d=e.shape[0];if(!this.kernelCaches.computeMatching){const e={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[d,l*l],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, ${l}) * ${o};\n\t    int searchOffsetY = searchOffsetIndex / ${l} * ${o};\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - ${i};\n\t    int sy = sCenterY + searchOffsetY - ${i};\n\n\t    if (sx < ${a} || sx >= (${c} - ${a}) || sy < ${a} || sy >= (${u} - ${a})) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < ${r}; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < ${r}; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - ${a};\n\t\t  int fy2 = sCenterY + templateOffsetY - ${a};\n\n\t\t  int sx2 = sx + templateOffsetX - ${a};\n\t\t  int sy2 = sy + templateOffsetY - ${a};\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(${r} * ${r});\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},t={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[d,2],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / ${l*l};\n\t    int searchOffsetIndex = imod(maxIndex, ${l*l});\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, ${l}) * ${o};\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${i}) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / ${l} * ${o};\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${i}) / markerScale);\n\t    }\n\t  }\n\t`},n={variableNames:["sims","maxIndex"],outputShape:[d],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[e,t,n]}return Oi((()=>{const a=this.kernelCaches.computeMatching,r=this._compileAndRun(a[0],[e,t,n,s]),i=r.argMax(1),o=this._compileAndRun(a[1],[e,n,i]),l=this._compileAndRun(a[2],[r,i]);return{matchingPointsT:o,simT:l}}))}_computeProjection(e,t,n){const s=this.trackingKeyframeList[n].width,a=this.trackingKeyframeList[n].height,r=this.trackingKeyframeList[n].scale,i=s+"-"+a+"-"+r;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const e={variableNames:["M","pixel"],outputShape:[a,s],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * ${e0}.;\n\t      float m01 = getM(0, 1) * ${e0}.;\n\t      float m03 = getM(0, 3) * ${e0}.;\n\t      float m10 = getM(1, 0) * ${e0}.;\n\t      float m11 = getM(1, 1) * ${e0}.;\n\t      float m13 = getM(1, 3) * ${e0}.;\n\t      float m20 = getM(2, 0) * ${e0}.;\n\t      float m21 = getM(2, 1) * ${e0}.;\n\t      float m23 = getM(2, 3) * ${e0}.;\n\n\t      float y = float(coords[0]) / float(${r});\n\t      float x = float(coords[1]) / float(${r});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=e}return Oi((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[e,t])}))}_buildAdjustedModelViewTransform(e){return Oi((()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let s=0;s<e[n].length;s++)t[n].push(e[n][s]/e0)}return Ni(t,[3,4])}))}_prebuild(e,t){return Oi((()=>{const n=e.scale,s=[];for(let i=0;i<t;i++)i<e.points.length?s.push([e.points[i].x/n,e.points[i].y/n]):s.push([-1,-1]);const a=Ni(e.data,[e.width*e.height]),r=Ni([e.width,e.height,e.scale],[3]);return{featurePoints:Ni(s,[s.length,2],"float32"),imagePixels:a,imageProperties:r}}))}_compileAndRun(e,t){const n=Yi().compileAndRun(e,t);return $i().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}const n0=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],s0=[];for(let _ee=0;_ee<n0.length;_ee++){const e=n0[_ee].sigma;for(let t=0;t<n0[_ee].points.length;t++){const n=n0[_ee].points[t];s0.push([e,n[0],n[1]])}}const a0={};function r0(e){const t=e.shape[1],n=e.shape[0],s="w"+t+"h"+n;if(!a0.hasOwnProperty(s)){const e={variableNames:["p"],outputShape:[n,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0], coords[1]-2);\n          sum += getP(coords[0], coords[1]-1) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0], coords[1]+1) * 4.;\n          sum += getP(coords[0], coords[1]+2);\n          setOutput(sum);\n        }\n      "},a={variableNames:["p"],outputShape:[n,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0]-2, coords[1]);\n          sum += getP(coords[0]-1, coords[1]) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0]+1, coords[1]) * 4.;\n          sum += getP(coords[0]+2, coords[1]);\n          sum /= 256.;\n          setOutput(sum);\n        }\n      "};a0[s]=[e,a]}return a0[s]}const i0=e=>{const t=e.inputs.image,n=e.backend,[s,a]=r0(t),r=n.runWebGLProgram(s,[t],t.dtype),i=n.runWebGLProgram(a,[r],t.dtype);return n.disposeIntermediateTensorInfo(r),i},o0={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:i0},l0=7,u0=3,c0=u0*u0,d0=4,h0=(d0+1)*(d0+1)/d0,p0={};function m0(e){const t=e.shape[1],n=e.shape[0],s="w"+t+"h"+n;if(!p0.hasOwnProperty(s)){const e={variableNames:["image0","image1","image2"],outputShape:[n,t],userCode:`\n        void main() {\n          ivec2 coords = getOutputCoords();\n    \n          int y = coords[0];\n          int x = coords[1];\n    \n          float value = getImage1(y, x);\n    \n          // Step 1: find local maxima/minima\n          if (value * value < ${c0}.) {\n            setOutput(0.);\n            return;\n          }\n          if (y < ${l0} || y > ${n-1-l0}) {\n            setOutput(0.);\n            return;\n          }\n          if (x < ${l0} || x > ${t-1-l0}) {\n            setOutput(0.);\n            return;\n          }\n    \n          bool isMax = true;\n          bool isMin = true;\n          for (int dy = -1; dy <= 1; dy++) {\n            for (int dx = -1; dx <= 1; dx++) {\n              float value0 = getImage0(y+dy, x+dx);\n              float value1 = getImage1(y+dy, x+dx);\n              float value2 = getImage2(y+dy, x+dx);\n    \n        if (value < value0 || value < value1 || value < value2) {\n          isMax = false;\n        }\n        if (value > value0 || value > value1 || value > value2) {\n          isMin = false;\n        }\n            }\n          }\n    \n          if (!isMax && !isMin) {\n            setOutput(0.);\n            return;\n          }\n    \n          // compute edge score and reject based on threshold\n          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n    \n          float det = (dxx * dyy) - (dxy * dxy);\n    \n          if (abs(det) < 0.0001) { // determinant undefined. no solution\n            setOutput(0.);\n            return;\n          }\n    \n          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n    \n          if (abs(edgeScore) >= ${h0} ) {\n            setOutput(0.);\n            return;\n          }\n          setOutput(getImage1(y,x));\n        }\n      `};p0[s]=e}return p0[s]}const f0=e=>{let{image0:t,image1:n,image2:s}=e.inputs;const a=e.backend,r=m0(n);return t=$i().runKernel("DownsampleBilinear",{image:t}),s=$i().runKernel("UpsampleBilinear",{image:s,targetImage:n}),a.runWebGLProgram(r,[t,n,s],n.dtype)},g0={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:f0},b0=36,y0={};function x0(e){const t=e.shape[0];if(!y0.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`\n            void main() {\n                int featureIndex = getOutputCoords();\n\n                int maxIndex = 0;\n                for (int i = 1; i < ${b0}; i++) {\n                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n                        maxIndex = i;\n                    }\n                }\n\n                int prev = imod(maxIndex - 1 + ${b0}, ${b0});\n                int next = imod(maxIndex + 1, ${b0});\n\n                /**\n                 * Fit a quatratic to 3 points. The system of equations is:\n                 *\n                 * y0 = A*x0^2 + B*x0 + C\n                 * y1 = A*x1^2 + B*x1 + C\n                 * y2 = A*x2^2 + B*x2 + C\n                 *\n                 * This system of equations is solved for A,B,C.\n                 */\n                float p10 = float(maxIndex - 1);\n                float p11 = getHistogram(featureIndex, prev); \n                float p20 = float(maxIndex);\n                float p21 = getHistogram(featureIndex, maxIndex); \n                float p30 = float(maxIndex + 1);\n                float p31 = getHistogram(featureIndex, next); \n\n                float d1 = (p30-p20)*(p30-p10);\n                float d2 = (p10-p20)*(p30-p10);\n                float d3 = p10-p20;\n\n                // If any of the denominators are zero then, just use maxIndex.\n                    float fbin = float(maxIndex);\n                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n                float a = p10*p10;\n                float b = p20*p20;\n\n                // Solve for the coefficients A,B,C\n                float A = ((p31-p21)/d1)-((p11-p21)/d2);\n                float B = ((p11-p21)+(A*(b-a)))/d3;\n                float C = p11-(A*a)-(B*p10);\n                fbin = -B / (2. * A);\n                }\n\n                float an = 2.0 *${Math.PI} * (fbin + 0.5) / ${b0}. - ${Math.PI};\n                setOutput(an);\n            }\n            `};y0[t]=n}return y0[t]}const w0=e=>{const{histograms:t}=e.inputs,n=e.backend,s=x0(t);return n.runWebGLProgram(s,[t],t.dtype)},v0={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:w0},k0=7,I0={};function S0(e,t){const n=`${e}|${t.shape[0]}`;if(!I0.hasOwnProperty(n)){const s=[];for(let t=1;t<e;t++)s.push("image"+t);let a="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)a+=`\n  if (octave == ${t}) {\n\treturn getImage${t}(y, x);\n  }\n`;a+="}";const r={variableNames:[...s,"extrema","angles","freakPoints"],outputShape:[t.shape[0],s0.length],userCode:`\n  ${a}\n  void main() {\n\tivec2 coords = getOutputCoords();\n\tint featureIndex = coords[0];\n\tint freakIndex = coords[1];\n\n\tfloat freakSigma = getFreakPoints(freakIndex, 0);\n\tfloat freakX = getFreakPoints(freakIndex, 1);\n\tfloat freakY = getFreakPoints(freakIndex, 2);\n\n\tint octave = int(getExtrema(featureIndex, 1));\n\tfloat inputY = getExtrema(featureIndex, 2);\n\tfloat inputX = getExtrema(featureIndex, 3);\n\tfloat inputAngle = getAngles(featureIndex);\n\tfloat cos = ${k0}. * cos(inputAngle);\n\tfloat sin = ${k0}. * sin(inputAngle);\n\n\tfloat yp = inputY + freakX * sin + freakY * cos;\n\tfloat xp = inputX + freakX * cos + freakY * -sin;\n\n\tint x0 = int(floor(xp));\n\tint x1 = x0 + 1;\n\tint y0 = int(floor(yp));\n\tint y1 = y0 + 1;\n\n\tfloat f1 = getPixel(octave, y0, x0);\n\tfloat f2 = getPixel(octave, y0, x1);\n\tfloat f3 = getPixel(octave, y1, x0);\n\tfloat f4 = getPixel(octave, y1, x1);\n\n\tfloat x1f = float(x1);\n\tfloat y1f = float(y1);\n\tfloat x0f = float(x0);\n\tfloat y0f = float(y0);\n\n\t// ratio for interpolation between four neighbouring points\n\tfloat value = (x1f - xp) * (y1f - yp) * f1\n\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\tsetOutput(value);\n  }\n`};I0[n]=r}return I0[n]}const T0=e=>{const{gaussianImagesT:t,prunedExtremas:n,prunedExtremasAngles:s,freakPointsT:a,pyramidImagesLength:r}=e.inputs,i=e.backend,o=S0(r,n);return i.runWebGLProgram(o,[...t,n,s,a],"float32")},N0={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:T0},C0=(s0.length-1)*s0.length/2,R0=Math.ceil(C0/8),E0={};function G0(e){const t=`${e.shape[0]}`;if(!E0.hasOwnProperty(t)){const n={variableNames:["freak","p"],outputShape:[e.shape[0],R0],userCode:`\n  void main() {\n    ivec2 coords = getOutputCoords();\n    int featureIndex = coords[0];\n    int descIndex = coords[1] * 8;\n\n    int sum = 0;\n    for (int i = 0; i < 8; i++) {\n      if (descIndex + i >= ${C0}) {\n        continue;\n      }\n\n      int p1 = int(getP(descIndex + i, 0));\n      int p2 = int(getP(descIndex + i, 1));\n\n      float v1 = getFreak(featureIndex, p1);\n      float v2 = getFreak(featureIndex, p2);\n\n      if (v1 < v2 + 0.01) {\n        sum += int(pow(2.0, float(7 - i)));\n      }\n    }\n    setOutput(float(sum));\n  }\n`};E0[t]=n}return E0[t]}const M0=e=>{const{extremaFreaks:t,positionT:n}=e.inputs,{backend:s}=e,a=G0(t);return s.runWebGLProgram(a,[t,n],"int32")},L0={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:M0},z0={};function W0(e,t){const n=`${e}|${t}`;if(!z0.hasOwnProperty(n)){const s=[];let a="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)s.push("image"+t),a+=`\n\t\t\t\tif (octave == ${t}) {\n\t\t\t\t\treturn getImage${t}(y, x);\n\t\t\t\t}\n\t\t\t`;a+="}",z0[n]={variableNames:[...s,"extrema"],outputShape:[t,3,3],userCode:`\n\t\t\t${a}\n\t\t\n\t\t\tvoid main() {\n\t\t\t\tivec3 coords = getOutputCoords();\n\t\t\t\tint featureIndex = coords[0];\n\t\t\t\tfloat score = getExtrema(featureIndex, 0);\n\t\t\t\tif (score == 0.0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tint dy = coords[1]-1;\n\t\t\t\tint dx = coords[2]-1;\n\t\t\t\tint octave = int(getExtrema(featureIndex, 1));\n\t\t\t\tint y = int(getExtrema(featureIndex, 2));\n\t\t\t\tint x = int(getExtrema(featureIndex, 3));\n\t\t\t\tsetOutput(getPixel(octave, y+dy, x+dx));\n\t\t\t}\n\t\t\t`}}return z0[n]}const $0=e=>{const{prunedExtremasList:t,dogPyramidImagesT:n}=e.inputs,s=e.backend,a=W0(n.length,t.length),r=Ni(t,[t.length,t[0].length],"int32");return s.runWebGLProgram(a,[...n.slice(1),r],n[0].dtype)},F0={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:$0},V0=.159154943091895,O0=36,A0={};function X0(e,t,n){const s=`${n}|${e.shape[0]}|${t.shape[0]}`;if(!A0.hasOwnProperty(s)){const a=[];for(let e=1;e<n;e++)a.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<n;e++)r+=`\n            if (octave == ${e}) {\n                return getImage${e}(y, x);\n            }\n            `;r+="}";const i={variableNames:[...a,"extrema","radial"],outputShape:[e.shape[0],t.shape[0],2],userCode:`\n                ${r}\n\n                void main() {\n                    ivec3 coords = getOutputCoords();\n                    int featureIndex = coords[0];\n                    int radialIndex = coords[1];\n                    int propertyIndex = coords[2];\n\n                    int radialY = int(getRadial(radialIndex, 0));\n                    int radialX = int(getRadial(radialIndex, 1));\n                    float radialW = getRadial(radialIndex, 2);\n\n                    int octave = int(getExtrema(featureIndex, 1));\n                    int y = int(getExtrema(featureIndex, 2));\n                    int x = int(getExtrema(featureIndex, 3));\n\n                    int xp = x + radialX;\n                    int yp = y + radialY;\n\n                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n                    if (propertyIndex == 0) {\n                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n                    \n                    float angle = atan(dy, dx) + ${Math.PI};\n                    float fbin = angle * ${O0}. * ${V0};\n                    setOutput(fbin);\n                    return;\n                    }\n\n                    if (propertyIndex == 1) {\n                        float mag = sqrt(dx * dx + dy * dy);\n                        float magnitude = radialW * mag;\n                        setOutput(magnitude);\n                        return;\n                    }\n                }\n\n                `},o={variableNames:["fbinMag"],outputShape:[e.shape[0],O0],userCode:`\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                float sum = 0.;\n                for (int i = 0; i < ${t.shape[0]}; i++) {\n                    float fbin = getFbinMag(featureIndex, i, 0);\n                    int bin = int(floor(fbin - 0.5));\n                    int b1 = imod(bin + ${O0}, ${O0});\n                    int b2 = imod(bin + 1 + ${O0}, ${O0});\n\n                    if (b1 == binIndex || b2 == binIndex) {\n                        float magnitude = getFbinMag(featureIndex, i, 1);\n                        float w2 = fbin - float(bin) - 0.5;\n                        float w1 = w2 * -1. + 1.;\n\n                        if (b1 == binIndex) {\n                            sum += w1 * magnitude;\n                        }\n                        if (b2 == binIndex) {\n                            sum += w2 * magnitude;\n                        }\n                    }\n                }\n                setOutput(sum);\n            }\n            `};A0[s]=[i,o]}return A0[s]}const D0=e=>{const{gaussianImagesT:t,prunedExtremasT:n,radialPropertiesT:s,pyramidImagesLength:a}=e.inputs,r=e.backend,[i,o]=X0(n,s,a),l=r.runWebGLProgram(i,[...t,n,s],s.dtype),u=r.runWebGLProgram(o,[l],s.dtype);return r.disposeIntermediateTensorInfo(l),u},Z0={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:D0},K0={};function P0(e){const t=e.shape[1],n=e.shape[0],s="w"+t+"h"+n;if(!K0.hasOwnProperty(s)){const e={variableNames:["p"],outputShape:[Math.floor(n/2),Math.floor(t/2)],userCode:"\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int y = coords[0] * 2;\n                int x = coords[1] * 2;\n        \n                float sum = getP(y, x) * 0.25;\n                sum += getP(y+1,x) * 0.25; \n                sum += getP(y, x+1) * 0.25; \n                sum += getP(y+1,x+1) * 0.25;\n                setOutput(sum);\n            }\n            "};K0[s]=e}return K0[s]}const _0=e=>{const t=e.inputs.image,n=e.backend,s=P0(t);return n.runWebGLProgram(s,[t],t.dtype)},B0={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:_0},H0=e=>{const{extremasResultT:t}=e.inputs,n=e.backend,s=t.shape[0],a=t.shape[1],r={variableNames:["extrema"],outputShape:[Math.floor(s/2),Math.floor(a/2)],userCode:"\n\t\t  void main() {\n\t\t\tivec2 coords = getOutputCoords();\n\t\t\tint y = coords[0] * 2;\n\t\t\tint x = coords[1] * 2;\n  \n\t\t\tfloat location = 0.0;\n\t\t\tfloat values = getExtrema(y, x);\n  \n\t\t\tif (getExtrema(y+1, x) != 0.0) {\n\t\t\t  location = 1.0;\n\t\t  values = getExtrema(y+1, x);\n\t\t\t}\n\t\t\telse if (getExtrema(y, x+1) != 0.0) {\n\t\t\t  location = 2.0;\n\t\t  values = getExtrema(y, x+1);\n\t\t\t}\n\t\t\telse if (getExtrema(y+1, x+1) != 0.0) {\n\t\t\t  location = 3.0;\n\t\t  values = getExtrema(y+1, x+1);\n\t\t\t}\n  \n\t\t\tif (values < 0.0) {\n\t\t\t  setOutput(location * -1000.0 + values);\n\t\t\t} else {\n\t\t\t  setOutput(location * 1000.0 + values);\n\t\t\t}\n\t\t  }\n\t\t"};return n.runWebGLProgram(r,[t],t.dtype)},U0={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:H0},Y0=36,j0=5,Q0={};function J0(e){const t=`h${e.shape[0]}`;if(!Q0.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0],Y0],userCode:`\n            void main() {\n                ivec2 coords = getOutputCoords();\n\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                int prevBin = imod(binIndex - 1 + ${Y0}, ${Y0});\n                int nextBin = imod(binIndex + 1, ${Y0});\n                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n                setOutput(result);\n            }\n            `};Q0[t]=n}return Q0[t]}const q0=e=>{let{histograms:t}=e.inputs;const n=e.backend,s=J0(t);for(let a=0;a<j0;a++){const e=t;t=n.runWebGLProgram(s,[t],t.dtype),a>0&&n.disposeIntermediateTensorInfo(e)}return t},e1={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:q0},t1={};function n1(e,t){const n=t.shape[1],s=t.shape[0],a="w"+n+"h"+s;if(!t1.hasOwnProperty(a)){const e={variableNames:["p"],outputShape:[s,n],userCode:"\n              void main() {\n                ivec2 coords = getOutputCoords();\n                int j = coords[0];\n                int i = coords[1];\n        \n                float sj = 0.5 * float(j) - 0.25; \n                float si = 0.5 * float(i) - 0.25;\n        \n                float sj0 = floor(sj);\n                float sj1 = ceil(sj);\n                float si0 = floor(si);\n                float si1 = ceil(si);\n        \n                int sj0I = int(sj0);\n                int sj1I = int(sj1);\n                int si0I = int(si0);\n                int si1I = int(si1);\n        \n                float sum = 0.0;\n                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n                setOutput(sum);\n              }\n            "};t1[a]=e}return t1[a]}const s1=e=>{const{image:t,targetImage:n}=e.inputs,s=e.backend,a=n1(t,n);return s.runWebGLProgram(a,[t],t.dtype)},a1={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:s1};ra(o0),ra(g0),ra(v0),ra(N0),ra(L0),ra(F0),ra(Z0),ra(B0),ra(U0),ra(e1),ra(a1);const r1=8,i1=5,o1=10,l1=5,u1=36,c1=.01,d1=3,h1=1.5,p1=7,m1=(s0.length-1)*s0.length/2;class f1{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let s=0;for(;e>=r1&&t>=r1&&(e/=2,t/=2,s++,s!==i1););this.numOctaves=s,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let s=0;s<e.length;s++)t[4*s]=e[s],t[4*s+1]=e[s],t[4*s+2]=e[s],t[4*s+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){let t=null;const n=[];for(let g=0;g<this.numOctaves;g++){let t,s;t=0===g?this._applyFilter(e):this._downsampleBilinear(n[g-1][n[g-1].length-1]),s=this._applyFilter(t),n.push([t,s])}const s=[];for(let g=0;g<this.numOctaves;g++){let e=this._differenceImageBinomial(n[g][0],n[g][1]);s.push(e)}const a=[];for(let g=1;g<this.numOctaves-1;g++){const e=this._buildExtremas(s[g-1],s[g],s[g+1]);a.push(e)}const r=this._applyPrune(a),i=this._computeLocalization(r,s),o=this._computeOrientationHistograms(i,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,i,u),d=this._computeFreakDescriptors(c),h=i.arraySync(),p=u.arraySync(),m=d.arraySync();this.debugMode&&(t={pyramidImages:n.map((e=>e.map((e=>e.arraySync())))),dogPyramidImages:s.map((e=>e?e.arraySync():null)),extremasResults:a.map((e=>e.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:r,localizedExtremas:i.arraySync()}),n.forEach((e=>e.forEach((e=>e.dispose())))),s.forEach((e=>e&&e.dispose())),a.forEach((e=>e.dispose())),i.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),d.dispose();const f=[];for(let g=0;g<h.length;g++){if(0==h[g][0])continue;const e=[];for(let i=0;i<m[g].length;i+=4){const t=m[g][i],n=m[g][i+1],s=m[g][i+2],a=m[g][i+3];let r=16777216*t+65536*n+256*s+a;e.push(r)}const t=h[g][1],n=h[g][2],s=h[g][3]*Math.pow(2,t)+Math.pow(2,t-1)-.5,a=n*Math.pow(2,t)+Math.pow(2,t-1)-.5,r=Math.pow(2,t);f.push({maxima:h[g][0]>0,x:s,y:a,scale:r,angle:p[g],descriptors:e})}return{featurePoints:f,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let r=0;r<e.shape[1];r++)for(let s=r+1;s<e.shape[1];s++)t.push(r),n.push(s);const s=Ni(t,[t.length]).cast("int32"),a=Ni(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Xi(Um([s,a],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(m1/8);if(!this.kernelCaches.computeFreakDescriptors){const t={variableNames:["freak","p"],outputShape:[e.shape[0],n],userCode:`\n\t  void main() {\n\t\tivec2 coords = getOutputCoords();\n\t\tint featureIndex = coords[0];\n\t\tint descIndex = coords[1] * 8;\n\n\t\tint sum = 0;\n\t\tfor (int i = 0; i < 8; i++) {\n\t\t  if (descIndex + i >= ${m1}) {\n\t\tcontinue;\n\t\t  }\n\n\t\t  int p1 = int(getP(descIndex + i, 0));\n\t\t  int p2 = int(getP(descIndex + i, 1));\n\n\t\t  float v1 = getFreak(featureIndex, p1);\n\t\t  float v2 = getFreak(featureIndex, p2);\n\n\t\t  if (v1 < v2 + 0.01) {\n\t\t\tsum += int(pow(2.0, float(7 - i)));\n\t\t  }\n\t\t}\n\t\tsetOutput(float(sum));\n\t  }\n\t`};this.kernelCaches.computeFreakDescriptors=[t]}return Oi((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[e,t],"int32")}))}_computeExtremaFreak(e,t,n){this.tensorCaches._computeExtremaFreak||Oi((()=>{const e=Ni(s0);this.tensorCaches._computeExtremaFreak={freakPointsT:Xi(e)}}));const{freakPointsT:s}=this.tensorCaches._computeExtremaFreak,a=[];for(let r=1;r<e.length;r++)a.push(e[r][1]);if(!this.kernelCaches._computeExtremaFreak){const n=[];for(let t=1;t<e.length;t++)n.push("image"+t);let s="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)s+=`\n\t  if (octave == ${t}) {\n\t\treturn getImage${t}(y, x);\n\t  }\n\t`;s+="}";const a={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[t.shape[0],s0.length],userCode:`\n\t  ${s}\n\t  void main() {\n\t\tivec2 coords = getOutputCoords();\n\t\tint featureIndex = coords[0];\n\t\tint freakIndex = coords[1];\n\n\t\tfloat freakSigma = getFreakPoints(freakIndex, 0);\n\t\tfloat freakX = getFreakPoints(freakIndex, 1);\n\t\tfloat freakY = getFreakPoints(freakIndex, 2);\n\n\t\tint octave = int(getExtrema(featureIndex, 1));\n\t\tfloat inputY = getExtrema(featureIndex, 2);\n\t\tfloat inputX = getExtrema(featureIndex, 3);\n\t\tfloat inputAngle = getAngles(featureIndex);\n\t\tfloat cos = ${p1}. * cos(inputAngle);\n\t\tfloat sin = ${p1}. * sin(inputAngle);\n\n\t\tfloat yp = inputY + freakX * sin + freakY * cos;\n\t\tfloat xp = inputX + freakX * cos + freakY * -sin;\n\n\t\tint x0 = int(floor(xp));\n\t\tint x1 = x0 + 1;\n\t\tint y0 = int(floor(yp));\n\t\tint y1 = y0 + 1;\n\n\t\tfloat f1 = getPixel(octave, y0, x0);\n\t\tfloat f2 = getPixel(octave, y0, x1);\n\t\tfloat f3 = getPixel(octave, y1, x0);\n\t\tfloat f4 = getPixel(octave, y1, x1);\n\n\t\tfloat x1f = float(x1);\n\t\tfloat y1f = float(y1);\n\t\tfloat x0f = float(x0);\n\t\tfloat y0f = float(y0);\n\n\t\t// ratio for interpolation between four neighbouring points\n\t\tfloat value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t\tsetOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[a]}return Oi((()=>{const[e]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(e,[...a,t,n,s])}))}_computeExtremaAngles(e){if(!this.kernelCaches.computeExtremaAngles){const t={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`\n\t  void main() {\n\t\tint featureIndex = getOutputCoords();\n\n\t\tint maxIndex = 0;\n\t\tfor (int i = 1; i < ${u1}; i++) {\n\t\t  if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t\t  }\n\t\t}\n\n\t\tint prev = imod(maxIndex - 1 + ${u1}, ${u1});\n\t\tint next = imod(maxIndex + 1, ${u1});\n\n\t\tfloat p10 = float(maxIndex - 1);\n\t\tfloat p11 = getHistogram(featureIndex, prev); \n\t\tfloat p20 = float(maxIndex);\n\t\tfloat p21 = getHistogram(featureIndex, maxIndex); \n\t\tfloat p30 = float(maxIndex + 1);\n\t\tfloat p31 = getHistogram(featureIndex, next); \n\n\t\tfloat d1 = (p30-p20)*(p30-p10);\n\t\tfloat d2 = (p10-p20)*(p30-p10);\n\t\tfloat d3 = p10-p20;\n\n\t\t// If any of the denominators are zero then, just use maxIndex.\n\t\t\tfloat fbin = float(maxIndex);\n\t\tif ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t\t  float a = p10*p10;\n\t\t  float b = p20*p20;\n\n\t\t  // Solve for the coefficients A,B,C\n\t\t  float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t\t  float B = ((p11-p21)+(A*(b-a)))/d3;\n\t\t  float C = p11-(A*a)-(B*p10);\n\t\t  fbin = -B / (2. * A);\n\t\t}\n\n\t\tfloat an = 2.0 *${Math.PI} * (fbin + 0.5) / ${u1}. - ${Math.PI};\n\t\tsetOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=t}return Oi((()=>{const t=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(t,[e])}))}_computeOrientationHistograms(e,t){const n=.159154943091895,s=[];for(let r=1;r<t.length;r++)s.push(t[r][1]);this.tensorCaches.orientationHistograms||Oi((()=>{const e=-1/(2*d1*d1),t=d1*h1,n=Math.ceil(t),s=[];for(let a=-n;a<=n;a++)for(let r=-n;r<=n;r++){const n=r*r+a*a;if(n<=t*t){const t=n*e;let i=.0013888888*(720+t*(720+t*(360+t*(120+t*(30+t*(6+t))))));s.push([a,r,i])}}this.tensorCaches.orientationHistograms={radialPropertiesT:Xi(Ni(s,[s.length,3]))}}));const{radialPropertiesT:a}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const s=[];for(let e=1;e<t.length;e++)s.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)r+=`\n\t  if (octave == ${e}) {\n\t\treturn getImage${e}(y, x);\n\t  }\n\t`;r+="}";const i={variableNames:[...s,"extrema","radial"],outputShape:[e.shape[0],a.shape[0],2],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t\tivec3 coords = getOutputCoords();\n\t\tint featureIndex = coords[0];\n\t\tint radialIndex = coords[1];\n\t\tint propertyIndex = coords[2];\n\n\t\tint radialY = int(getRadial(radialIndex, 0));\n\t\tint radialX = int(getRadial(radialIndex, 1));\n\t\tfloat radialW = getRadial(radialIndex, 2);\n\n\t\tint octave = int(getExtrema(featureIndex, 1));\n\t\tint y = int(getExtrema(featureIndex, 2));\n\t\tint x = int(getExtrema(featureIndex, 3));\n\n\t\tint xp = x + radialX;\n\t\tint yp = y + radialY;\n\n\t\tfloat dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t\tfloat dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t\tif (propertyIndex == 0) {\n\t\t  // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t\t  \n\t\t  float angle = atan(dy, dx) + ${Math.PI};\n\t\t  float fbin = angle * ${u1}. * ${n};\n\t\t  setOutput(fbin);\n\t\t  return;\n\t\t}\n\n\t\tif (propertyIndex == 1) {\n\t\t  float mag = sqrt(dx * dx + dy * dy);\n\t\t  float magnitude = radialW * mag;\n\t\t  setOutput(magnitude);\n\t\t  return;\n\t\t}\n\t  }\n\n\t`},o={variableNames:["fbinMag"],outputShape:[e.shape[0],u1],userCode:`\n\t  void main() {\n\t\tivec2 coords = getOutputCoords();\n\t\tint featureIndex = coords[0];\n\t\tint binIndex = coords[1];\n\n\t\tfloat sum = 0.;\n\t\tfor (int i = 0; i < ${a.shape[0]}; i++) {\n\t\t  float fbin = getFbinMag(featureIndex, i, 0);\n\t\t  int bin = int(floor(fbin - 0.5));\n\t\t  int b1 = imod(bin + ${u1}, ${u1});\n\t\t  int b2 = imod(bin + 1 + ${u1}, ${u1});\n\n\t\t  if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t\t  }\n\t\t}\n\t\tsetOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[i,o]}return Oi((()=>{const[t,n]=this.kernelCaches.computeOrientationHistograms,r=this._compileAndRun(t,[...s,e,a]);return this._compileAndRun(n,[r])}))}_smoothHistograms(e){if(!this.kernelCaches.smoothHistograms){const t={variableNames:["histogram"],outputShape:[e.shape[0],u1],userCode:`\n\t  void main() {\n\t\tivec2 coords = getOutputCoords();\n\n\t\tint featureIndex = coords[0];\n\t\tint binIndex = coords[1];\n\n\t\tint prevBin = imod(binIndex - 1 + ${u1}, ${u1});\n\t\tint nextBin = imod(binIndex + 1, ${u1});\n\n\t\t\tfloat result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t\tsetOutput(result);\n\t  }\n\t`};this.kernelCaches.smoothHistograms=t}return Oi((()=>{const t=this.kernelCaches.smoothHistograms;for(let n=0;n<c1;n++)e=this._compileAndRun(t,[e]);return e}))}_computeLocalization(e,t){if(!this.kernelCaches.computeLocalization){const n=[];let s="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)n.push("image"+e),s+=`\n\t\t   if (octave == ${e}) {\n\t\t\t return getImage${e}(y, x);\n\t\t   }\n\t\t   `;s+="}";const a={variableNames:[...n,"extrema"],outputShape:[e.length,3,3],userCode:`\n\t\t   ${s}\n\t \n\t\t   void main() {\n\t\t\t ivec3 coords = getOutputCoords();\n\t\t\t int featureIndex = coords[0];\n\t\t\t float score = getExtrema(featureIndex, 0);\n\t\t\t if (score == 0.0) {\n\t\t\t   return;\n\t\t\t }\n\t \n\t\t\t int dy = coords[1]-1;\n\t\t\t int dx = coords[2]-1;\n\t\t\t int octave = int(getExtrema(featureIndex, 1));\n\t\t\t int y = int(getExtrema(featureIndex, 2));\n\t\t\t int x = int(getExtrema(featureIndex, 3));\n\t\t\t setOutput(getPixel(octave, y+dy, x+dx));\n\t\t   }\n\t\t `};this.kernelCaches.computeLocalization=[a]}return Oi((()=>(this.kernelCaches.computeLocalization[0],Ni(e,[e.length,e[0].length],"int32"))))}_applyPrune(e){const t=o1*o1,n=l1,s=[],a=[];for(let i=0;i<t;i++){a.push([]),s.push([]);for(let e=0;e<n;e++)a[i].push([0,0,0,0]),s[i].push(0)}Oi((()=>{for(let t=0;t<e.length;t++){const r=$i().runKernel("ExtremaReduction",{extremasResultT:e[t]}),i=t+1,o=r.arraySync(),l=r.shape[0],u=r.shape[1],c=2*u/o1,d=2*l/o1;for(let e=0;e<l;e++)for(let t=0;t<u;t++){const r=o[e][t];if(0==r)continue;const l=r%1e3,u=Math.floor(Math.abs(r)/1e3),h=2*t+(2===u||3===u?1:0),p=2*e+(1===u||3===u?1:0),m=Math.floor(h/c),f=Math.floor(p/d)*o1+m,g=Math.abs(l);let b=n;for(;b>=1&&g>s[f][b-1];)b-=1;if(b<n){for(let e=n-1;e>=b+1;e--)s[f][e]=s[f][e-1],a[f][e][0]=a[f][e-1][0],a[f][e][1]=a[f][e-1][1],a[f][e][2]=a[f][e-1][2],a[f][e][3]=a[f][e-1][3];s[f][b]=g,a[f][b][0]=l,a[f][b][1]=i,a[f][b][2]=p,a[f][b][3]=h}}}}));const r=[];for(let i=0;i<t;i++)for(let e=0;e<n;e++)r.push(a[i][e]);return r}_buildExtremas(e,t,n){return Oi((()=>$i().runKernel("BuildExtremas",{image0:e,image1:t,image2:n})))}_differenceImageBinomial(e,t){return Oi((()=>e.sub(t)))}_applyFilter(e){return Oi((()=>$i().runKernel("BinomialFilter",{image:e})))}_downsampleBilinear(e){return Oi((()=>$i().runKernel("DownsampleBilinear",{image:e})))}_compileAndRun(e,t){const n=Yi().compileAndRun(e,t);return $i().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=Yi().runWebGLProgram(e,t,n);return $i().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}class g1{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let s=Math.min(e,t)/2,a=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=a,this.detector=new f1(a,a,n),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),s=this._detect(e,n,t);return this.debugMode&&(s.debugExtra.crop={startX:n,startY:t,cropSize:this.cropSize}),s}detectMoving(e){const t=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let s=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),a=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return a<0&&(a=0),s<0&&(s=0),a>=this.width-this.cropSize&&(a=this.width-this.cropSize-1),s>=this.height-this.cropSize&&(s=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,a,s)}_detect(e,t,n){const s=e.slice([n,t],[this.cropSize,this.cropSize]),{featurePoints:a,debugExtra:r}=this.detector.detect(s);return a.forEach((e=>{e.x+=t,e.y+=n})),this.debugMode&&(r.projectedImage=s.arraySync()),s.dispose(),{featurePoints:a,debugExtra:r}}}const b1=({image:e,ratio:t})=>{const n=Math.round(e.width*t),s=Math.round(e.height*t),a=new Uint8Array(n*s);for(let r=0;r<n;r++){let i=Math.round(1*r/t),o=Math.round(1*(r+1)/t)-1;o>=e.width&&(o=e.width-1);for(let l=0;l<s;l++){let s=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let c=0,d=0;for(let t=i;t<=o;t++)for(let n=s;n<=u;n++)c+=1*e.data[n*e.width+t],d+=1;a[l*n+r]=Math.floor(c/d)}}return{data:a,width:n,height:s}},y1=100,x1=e=>{const t=y1/Math.min(e.width,e.height),n=[];let s=t;for(;;)if(n.push(s),s*=Math.pow(2,1/3),s>=.95){s=1;break}n.push(s),n.reverse();const a=[];for(let r=0;r<n.length;r++)e.width,n[r],e.height,n[r],a.push(Object.assign(b1({image:e,ratio:n[r]}),{scale:n[r]}));return a},w1=e=>{const t=Math.min(e.width,e.height),n=[],s=[];n.push(256/t),n.push(128/t);for(let a=0;a<n.length;a++)s.push(Object.assign(b1({image:e,ratio:n[a]}),{scale:n[a]}));return s},v1=e=>{const{v1:t,v2:n}=e;let s=0;for(let a=0;a<t.length;a++){let e=(t[a]^n[a])>>>0;s+=k1(e)}return s},k1=e=>{var t=e-(e>>1&1431655765);return t=(t>>2&858993459)+(858993459&t),t=(t>>4)+t&252645135,t=(t>>8)+t&16711935,t=(t>>16)+t&65535,t},I1=1234,S1=()=>({seed:I1,arrayShuffle(e){const{arr:t,sampleSize:n}=e;for(let s=0;s<n;s++){this.seed=(214013*this.seed+2531011)%-2147483648;let e=this.seed>>16&32767;e%=t.length;let n=t[s];t[s]=t[e],t[e]=n}},nextInt(e){this.seed=(214013*this.seed+2531011)%-2147483648;let t=this.seed>>16&32767;return t%=e,t}}),T1=16,N1=128,C1=8,R1=e=>{const{points:t,pointIndexes:n,randomizer:s}=e,a=[];for(let l=0;l<n.length;l++)a.push(l);let r=Number.MAX_SAFE_INTEGER,i=-1;const o=[];for(let l=0;l<N1;l++){s.arrayShuffle({arr:a,sampleSize:C1});let e=0;const u=[];for(let s=0;s<n.length;s++){let r=Number.MAX_SAFE_INTEGER;for(let e=0;e<C1;e++){const i=n[a[e]],o=v1({v1:t[n[s]].descriptors,v2:t[i].descriptors});o<r&&(u[s]=a[e],r=o)}e+=r}o.push(u),e<r&&(r=e,i=l)}return o[i]},E1=({points:e})=>{const t=[];for(let s=0;s<e.length;s++)t.push(s);const n=S1();return{rootNode:G1({points:e,pointIndexes:t,centerPointIndex:null,randomizer:n})}},G1=e=>{const{points:t,pointIndexes:n,centerPointIndex:s,randomizer:a}=e;let r=!1;(n.length<=C1||n.length<=T1)&&(r=!0);const i={};if(!r){const e=R1({points:t,pointIndexes:n,randomizer:a});for(let t=0;t<e.length;t++)void 0===i[n[e[t]]]&&(i[n[e[t]]]=[]),i[n[e[t]]].push(n[t])}1===Object.keys(i).length&&(r=!0);const o={centerPointIndex:s};if(r){o.leaf=!0,o.pointIndexes=[];for(let e=0;e<n.length;e++)o.pointIndexes.push(n[e]);return o}return o.leaf=!1,o.children=[],Object.keys(i).forEach((e=>{o.children.push(G1({points:t,pointIndexes:i[e],centerPointIndex:e,randomizer:a}))})),o};var M1=4294967295;function L1(e,t,n){var s=n/4294967296,a=n;e.setUint32(t,s),e.setUint32(t+4,a)}function z1(e,t,n){var s=Math.floor(n/4294967296),a=n;e.setUint32(t,s),e.setUint32(t+4,a)}function W1(e,t){var n=e.getInt32(t),s=e.getUint32(t+4);return 4294967296*n+s}function $1(e,t){var n=e.getUint32(t),s=e.getUint32(t+4);return 4294967296*n+s}var F1,V1,O1,A1=(typeof process>"u"||"never"!==(null===(F1=null==process?void 0:{NODE_ENV:"production",BASE_URL:""})||void 0===F1?void 0:F1.TEXT_ENCODING))&&typeof TextEncoder<"u"&&typeof TextDecoder<"u";function X1(e){for(var t=e.length,n=0,s=0;s<t;){var a=e.charCodeAt(s++);if(4294967168&a)if(4294965248&a){if(a>=55296&&a<=56319&&s<t){var r=e.charCodeAt(s);56320===(64512&r)&&(++s,a=((1023&a)<<10)+(1023&r)+65536)}n+=4294901760&a?4:3}else n+=2;else n++}return n}function D1(e,t,n){for(var s=e.length,a=n,r=0;r<s;){var i=e.charCodeAt(r++);if(4294967168&i){if(4294965248&i){if(i>=55296&&i<=56319&&r<s){var o=e.charCodeAt(r);56320===(64512&o)&&(++r,i=((1023&i)<<10)+(1023&o)+65536)}4294901760&i?(t[a++]=i>>18&7|240,t[a++]=i>>12&63|128,t[a++]=i>>6&63|128):(t[a++]=i>>12&15|224,t[a++]=i>>6&63|128)}else t[a++]=i>>6&31|192;t[a++]=63&i|128}else t[a++]=i}}var Z1=A1?new TextEncoder:void 0,K1=A1?typeof process<"u"&&"force"!==(null===(V1=null==process?void 0:{NODE_ENV:"production",BASE_URL:""})||void 0===V1?void 0:V1.TEXT_ENCODING)?200:0:M1;function P1(e,t,n){t.set(Z1.encode(e),n)}function _1(e,t,n){Z1.encodeInto(e,t.subarray(n))}var B1=null!=Z1&&Z1.encodeInto?_1:P1,H1=4096;function U1(e,t,n){for(var s=t,a=s+n,r=[],i="";s<a;){var o=e[s++];if(128&o)if(192===(224&o)){var l=63&e[s++];r.push((31&o)<<6|l)}else if(224===(240&o)){l=63&e[s++];var u=63&e[s++];r.push((31&o)<<12|l<<6|u)}else if(240===(248&o)){l=63&e[s++],u=63&e[s++];var c=63&e[s++],d=(7&o)<<18|l<<12|u<<6|c;d>65535&&(d-=65536,r.push(d>>>10&1023|55296),d=56320|1023&d),r.push(d)}else r.push(o);else r.push(o);r.length>=H1&&(i+=String.fromCharCode.apply(String,r),r.length=0)}return r.length>0&&(i+=String.fromCharCode.apply(String,r)),i}var Y1=A1?new TextDecoder:null,j1=A1?typeof process<"u"&&"force"!==(null===(O1=null==process?void 0:{NODE_ENV:"production",BASE_URL:""})||void 0===O1?void 0:O1.TEXT_DECODER)?200:0:M1;function Q1(e,t,n){var s=e.subarray(t,t+n);return Y1.decode(s)}var J1=function(){function e(e,t){this.type=e,this.data=t}return e}(),q1=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function s(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(s.prototype=n.prototype,new s)}}(),e2=function(e){function t(n){var s=e.call(this,n)||this,a=Object.create(t.prototype);return Object.setPrototypeOf(s,a),Object.defineProperty(s,"name",{configurable:!0,enumerable:!1,value:t.name}),s}return q1(t,e),t}(Error),t2=-1,n2=4294967295,s2=17179869183;function a2(e){var t=e.sec,n=e.nsec;if(t>=0&&n>=0&&t<=s2){if(0===n&&t<=n2){var s=new Uint8Array(4),a=new DataView(s.buffer);return a.setUint32(0,t),s}var r=t/4294967296,i=4294967295&t;s=new Uint8Array(8),a=new DataView(s.buffer);return a.setUint32(0,n<<2|3&r),a.setUint32(4,i),s}s=new Uint8Array(12),a=new DataView(s.buffer);return a.setUint32(0,n),z1(a,4,t),s}function r2(e){var t=e.getTime(),n=Math.floor(t/1e3),s=1e6*(t-1e3*n),a=Math.floor(s/1e9);return{sec:n+a,nsec:s-1e9*a}}function i2(e){if(e instanceof Date){var t=r2(e);return a2(t)}return null}function o2(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:var n=t.getUint32(0),s=0;return{sec:n,nsec:s};case 8:var a=t.getUint32(0),r=t.getUint32(4);n=4294967296*(3&a)+r,s=a>>>2;return{sec:n,nsec:s};case 12:n=W1(t,4),s=t.getUint32(0);return{sec:n,nsec:s};default:throw new e2("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(e.length))}}function l2(e){var t=o2(e);return new Date(1e3*t.sec+t.nsec/1e6)}var u2={type:t2,encode:i2,decode:l2},c2=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(u2)}return e.prototype.register=function(e){var t=e.type,n=e.encode,s=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=s;else{var a=1+t;this.builtInEncoders[a]=n,this.builtInDecoders[a]=s}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++){var s=this.builtInEncoders[n];if(null!=s){var a=s(e,t);if(null!=a){var r=-1-n;return new J1(r,a)}}}for(n=0;n<this.encoders.length;n++){s=this.encoders[n];if(null!=s){a=s(e,t);if(null!=a){r=n;return new J1(r,a)}}}return e instanceof J1?e:null},e.prototype.decode=function(e,t,n){var s=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return s?s(e,t,n):new J1(t,e)},e.defaultCodec=new e,e}();function d2(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}function h2(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=d2(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}var p2=100,m2=2048,f2=function(){function e(e,t,n,s,a,r,i,o){void 0===e&&(e=c2.defaultCodec),void 0===t&&(t=void 0),void 0===n&&(n=p2),void 0===s&&(s=m2),void 0===a&&(a=!1),void 0===r&&(r=!1),void 0===i&&(i=!1),void 0===o&&(o=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=s,this.sortKeys=a,this.forceFloat32=r,this.ignoreUndefined=i,this.forceIntegerToFloat=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encodeSharedRef=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.subarray(0,this.pos)},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.slice(0,this.pos)},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth ".concat(t));null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),s=new DataView(t);n.set(this.bytes),this.view=s,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: ".concat(e," bytes in UTF-8"));this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=5,n=e.length;if(n>K1){var s=X1(e);this.ensureBufferSizeToWrite(t+s),this.writeStringHeader(s),B1(e,this.bytes,this.pos),this.pos+=s}else{s=X1(e);this.ensureBufferSizeToWrite(t+s),this.writeStringHeader(s),D1(e,this.bytes,this.pos),this.pos+=s}},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(e)));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: ".concat(t));this.writeU8(198),this.writeU32(t)}var n=d2(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n=e.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error("Too large array: ".concat(n));this.writeU8(221),this.writeU32(n)}for(var s=0,a=e;s<a.length;s++){var r=a[s];this.doEncode(r,t+1)}},e.prototype.countWithoutUndefined=function(e,t){for(var n=0,s=0,a=t;s<a.length;s++){var r=a[s];void 0!==e[r]&&n++}return n},e.prototype.encodeMap=function(e,t){var n=Object.keys(e);this.sortKeys&&n.sort();var s=this.ignoreUndefined?this.countWithoutUndefined(e,n):n.length;if(s<16)this.writeU8(128+s);else if(s<65536)this.writeU8(222),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large map object: ".concat(s));this.writeU8(223),this.writeU32(s)}for(var a=0,r=n;a<r.length;a++){var i=r[a],o=e[i];this.ignoreUndefined&&void 0===o||(this.encodeString(i),this.doEncode(o,t+1))}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: ".concat(t));this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),L1(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),z1(this.view,this.pos,e),this.pos+=8},e}(),g2={};function b2(e,t){void 0===t&&(t=g2);var n=new f2(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat);return n.encodeSharedRef(e)}function y2(e){return"".concat(e<0?"-":"","0x").concat(Math.abs(e).toString(16).padStart(2,"0"))}var x2=16,w2=16,v2=function(){function e(e,t){void 0===e&&(e=x2),void 0===t&&(t=w2),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.find=function(e,t,n){var s=this.caches[n-1];e:for(var a=0,r=s;a<r.length;a++){for(var i=r[a],o=i.bytes,l=0;l<n;l++)if(o[l]!==e[t+l])continue e;return i.str}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],s={bytes:e,str:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=s:n.push(s)},e.prototype.decode=function(e,t,n){var s=this.find(e,t,n);if(null!=s)return this.hit++,s;this.miss++;var a=U1(e,t,n),r=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(r,a),a},e}(),k2=function(e,t,n,s){function a(e){return e instanceof n?e:new n((function(t){t(e)}))}return new(n||(n=Promise))((function(n,r){function i(e){try{l(s.next(e))}catch(t){r(t)}}function o(e){try{l(s.throw(e))}catch(t){r(t)}}function l(e){e.done?n(e.value):a(e.value).then(i,o)}l((s=s.apply(e,t||[])).next())}))},I2=function(e,t){var n,s,a,r,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function o(e){return function(t){return l([e,t])}}function l(r){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(a=2&r[0]?s.return:r[0]?s.throw||((a=s.return)&&a.call(s),0):s.next)&&!(a=a.call(s,r[1])).done)return a;switch(s=0,a&&(r=[2&r[0],a.value]),r[0]){case 0:case 1:a=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,s=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(a=i.trys,!(a=a.length>0&&a[a.length-1])&&(6===r[0]||2===r[0])){i=0;continue}if(3===r[0]&&(!a||r[1]>a[0]&&r[1]<a[3])){i.label=r[1];break}if(6===r[0]&&i.label<a[1]){i.label=a[1],a=r;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(r);break}a[2]&&i.ops.pop(),i.trys.pop();continue}r=t.call(e,i)}catch(o){r=[6,o],s=0}finally{n=a=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}},S2=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},s("next"),s("throw"),s("return"),t[Symbol.asyncIterator]=function(){return this},t);function s(n){t[n]=e[n]&&function(t){return new Promise((function(s,r){t=e[n](t),a(s,r,t.done,t.value)}))}}function a(e,t,n,s){Promise.resolve(s).then((function(t){e({value:t,done:n})}),t)}},T2=function(e){return this instanceof T2?(this.v=e,this):new T2(e)},N2=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,a=n.apply(e,t||[]),r=[];return s={},i("next"),i("throw"),i("return"),s[Symbol.asyncIterator]=function(){return this},s;function i(e){a[e]&&(s[e]=function(t){return new Promise((function(n,s){r.push([e,t,n,s])>1||o(e,t)}))})}function o(e,t){try{l(a[e](t))}catch(b){d(r[0][3],b)}}function l(e){e.value instanceof T2?Promise.resolve(e.value.v).then(u,c):d(r[0][2],e)}function u(e){o("next",e)}function c(e){o("throw",e)}function d(e,t){e(t),r.shift(),r.length&&o(r[0][0],r[0][1])}},C2=function(e){var t=typeof e;return"string"===t||"number"===t},R2=-1,E2=new DataView(new ArrayBuffer(0)),G2=new Uint8Array(E2.buffer),M2=function(){try{E2.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),L2=new M2("Insufficient data"),z2=new v2,W2=function(){function e(e,t,n,s,a,r,i,o){void 0===e&&(e=c2.defaultCodec),void 0===t&&(t=void 0),void 0===n&&(n=M1),void 0===s&&(s=M1),void 0===a&&(a=M1),void 0===r&&(r=M1),void 0===i&&(i=M1),void 0===o&&(o=z2),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=s,this.maxArrayLength=a,this.maxMapLength=r,this.maxExtLength=i,this.keyDecoder=o,this.totalPos=0,this.pos=0,this.view=E2,this.bytes=G2,this.headByte=R2,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=R2,this.stack.length=0},e.prototype.setBuffer=function(e){this.bytes=d2(e),this.view=h2(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(this.headByte!==R2||this.hasRemaining(1)){var t=this.bytes.subarray(this.pos),n=d2(e),s=new Uint8Array(t.length+n.length);s.set(t),s.set(n,t.length),this.setBuffer(s)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},e.prototype.createExtraByteError=function(e){var t=this,n=t.view,s=t.pos;return new RangeError("Extra ".concat(n.byteLength-s," of ").concat(n.byteLength," byte(s) found at buffer[").concat(e,"]"))},e.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},e.prototype.decodeMulti=function(e){return I2(this,(function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}}))},e.prototype.decodeAsync=function(e){var t,n,s,a;return k2(this,void 0,void 0,(function(){var r,i,o,l,u,c,d,h;return I2(this,(function(p){switch(p.label){case 0:r=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),t=S2(e),p.label=2;case 2:return[4,t.next()];case 3:if(n=p.sent(),n.done)return[3,5];if(o=n.value,r)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o);try{i=this.doDecodeSync(),r=!0}catch(m){if(!(m instanceof M2))throw m}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),s={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(a=t.return)?[4,a.call(t)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(s)throw s.error;return[7];case 11:return[7];case 12:if(r){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,i]}throw u=this,c=u.headByte,d=u.pos,h=u.totalPos,new RangeError("Insufficient data in parsing ".concat(y2(c)," at ").concat(h," (").concat(d," in the current buffer)"))}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return N2(this,arguments,(function(){var n,s,a,r,i,o,l,u,c;return I2(this,(function(d){switch(d.label){case 0:n=t,s=-1,d.label=1;case 1:d.trys.push([1,13,14,19]),a=S2(e),d.label=2;case 2:return[4,T2(a.next())];case 3:if(r=d.sent(),r.done)return[3,12];if(i=r.value,t&&0===s)throw this.createExtraByteError(this.totalPos);this.appendBuffer(i),n&&(s=this.readArraySize(),n=!1,this.complete()),d.label=4;case 4:d.trys.push([4,9,,10]),d.label=5;case 5:return[4,T2(this.doDecodeSync())];case 6:return[4,d.sent()];case 7:return d.sent(),0===--s?[3,8]:[3,5];case 8:return[3,10];case 9:if(o=d.sent(),!(o instanceof M2))throw o;return[3,10];case 10:this.totalPos+=this.pos,d.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=d.sent(),u={error:l},[3,19];case 14:return d.trys.push([14,,17,18]),r&&!r.done&&(c=a.return)?[4,T2(c.call(a))]:[3,16];case 15:d.sent(),d.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){var n=e-128;if(0!==n){this.pushMapState(n),this.complete();continue e}t={}}else if(e<160){n=e-144;if(0!==n){this.pushArrayState(n),this.complete();continue e}t=[]}else{var s=e-160;t=this.decodeUtf8String(s,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e){s=this.lookU8();t=this.decodeUtf8String(s,1)}else if(218===e){s=this.lookU16();t=this.decodeUtf8String(s,2)}else if(219===e){s=this.lookU32();t=this.decodeUtf8String(s,4)}else if(220===e){n=this.readU16();if(0!==n){this.pushArrayState(n),this.complete();continue e}t=[]}else if(221===e){n=this.readU32();if(0!==n){this.pushArrayState(n),this.complete();continue e}t=[]}else if(222===e){n=this.readU16();if(0!==n){this.pushMapState(n),this.complete();continue e}t={}}else if(223===e){n=this.readU32();if(0!==n){this.pushMapState(n),this.complete();continue e}t={}}else if(196===e){n=this.lookU8();t=this.decodeBinary(n,1)}else if(197===e){n=this.lookU16();t=this.decodeBinary(n,2)}else if(198===e){n=this.lookU32();t=this.decodeBinary(n,4)}else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e){n=this.lookU8();t=this.decodeExtension(n,1)}else if(200===e){n=this.lookU16();t=this.decodeExtension(n,2)}else{if(201!==e)throw new e2("Unrecognized type byte: ".concat(y2(e)));n=this.lookU32();t=this.decodeExtension(n,4)}this.complete();for(var a=this.stack;a.length>0;){var r=a[a.length-1];if(0===r.type){if(r.array[r.position]=t,r.position++,r.position!==r.size)continue e;a.pop(),t=r.array}else{if(1===r.type){if(!C2(t))throw new e2("The type of key must be string or number but "+typeof t);if("__proto__"===t)throw new e2("The key __proto__ is not allowed");r.key=t,r.type=2;continue e}if(r.map[r.key]=t,r.readCount++,r.readCount!==r.size){r.key=null,r.type=1;continue e}a.pop(),t=r.map}}return t}},e.prototype.readHeadByte=function(){return this.headByte===R2&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=R2},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new e2("Unrecognized array type byte: ".concat(y2(e)))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new e2("Max length exceeded: map length (".concat(e,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new e2("Max length exceeded: array length (".concat(e,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var n;if(e>this.maxStrLength)throw new e2("Max length exceeded: UTF-8 byte length (".concat(e,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+t+e)throw L2;var s,a=this.pos+t;return s=this.stateIsMapKey()&&null!==(n=this.keyDecoder)&&void 0!==n&&n.canBeCached(e)?this.keyDecoder.decode(this.bytes,a,e):e>j1?Q1(this.bytes,a,e):U1(this.bytes,a,e),this.pos+=t+e,s},e.prototype.stateIsMapKey=function(){if(this.stack.length>0){var e=this.stack[this.stack.length-1];return 1===e.type}return!1},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new e2("Max length exceeded: bin length (".concat(e,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(e+t))throw L2;var n=this.pos+t,s=this.bytes.subarray(n,n+e);return this.pos+=t+e,s},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new e2("Max length exceeded: ext length (".concat(e,") > maxExtLength (").concat(this.maxExtLength,")"));var n=this.view.getInt8(this.pos+t),s=this.decodeBinary(e,t+1);return this.extensionCodec.decode(s,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e=$1(this.view,this.pos);return this.pos+=8,e},e.prototype.readI64=function(){var e=W1(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),$2={};function F2(e,t){void 0===t&&(t=$2);var n=new W2(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength);return n.decode(e)}const V2=2;class O2{constructor(){this.data=null}compileImageTargets(e,t){return new Promise((async(n,s)=>{const a=[];for(let t=0;t<e.length;t++){const n=e[t],s=this.createProcessCanvas(n).getContext("2d");s.drawImage(n,0,0,n.width,n.height);const r=s.getImageData(0,0,n.width,n.height),i=new Uint8Array(n.width*n.height);for(let e=0;e<i.length;e++){const t=4*e;i[e]=Math.floor((r.data[t]+r.data[t+1]+r.data[t+2])/3)}const o={data:i,height:n.height,width:n.width};a.push(o)}const r=50/a.length;let i=0;this.data=[];for(let e=0;e<a.length;e++){const n=a[e],s=x1(n),o=r/s.length,l=await A2(s,(()=>{i+=o,t(i)}));this.data.push({targetImage:n,imageList:s,matchingData:l})}for(let e=0;e<a.length;e++){const t=w1(a[e]);this.data[e].trackingImageList=t}const o=await this.compileTrack({progressCallback:t,targetImages:a,basePercent:50});for(let e=0;e<a.length;e++)this.data[e].trackingData=o[e];n(this.data)}))}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return b2({v:V2,dataList:e})}importData(e){const t=F2(new Uint8Array(e));if(!t.v||t.v!==V2)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=t;this.data=[];for(let s=0;s<n.length;s++)this.data.push({targetImage:n[s].targetImage,trackingData:n[s].trackingData,matchingData:n[s].matchingData});return this.data}createProcessCanvas(e){console.warn("missing createProcessCanvas implementation")}compileTrack({progressCallback:e,targetImages:t,basePercent:n}){console.warn("missing compileTrack implementation")}}const A2=async(e,t)=>{const n=[];for(let s=0;s<e.length;s++){const a=e[s],r=new f1(a.width,a.height);await Jy(),Oi((()=>{const e=Ni(a.data,[a.data.length],"float32").reshape([a.height,a.width]),{featurePoints:i}=r.detect(e),o=i.filter((e=>e.maxima)),l=i.filter((e=>!e.maxima)),u=E1({points:o}),c=E1({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:c,width:a.width,height:a.height,scale:a.scale}),t(s)}))}return n},X2="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NsYXNzIHp7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY3Vtc3VtPVtdO2ZvcihsZXQgZT0wO2U8bztlKyspe3RoaXMuY3Vtc3VtLnB1c2goW10pO2ZvcihsZXQgbj0wO248dDtuKyspdGhpcy5jdW1zdW1bZV0ucHVzaCgwKX10aGlzLmN1bXN1bVswXVswXT1zWzBdO2ZvcihsZXQgZT0xO2U8dDtlKyspdGhpcy5jdW1zdW1bMF1bZV09dGhpcy5jdW1zdW1bMF1bZS0xXStzW2VdO2ZvcihsZXQgZT0xO2U8bztlKyspdGhpcy5jdW1zdW1bZV1bMF09dGhpcy5jdW1zdW1bZS0xXVswXStzW2UqdF07Zm9yKGxldCBlPTE7ZTxvO2UrKylmb3IobGV0IG49MTtuPHQ7bisrKXRoaXMuY3Vtc3VtW2VdW25dPXNbZSp0K25dK3RoaXMuY3Vtc3VtW2UtMV1bbl0rdGhpcy5jdW1zdW1bZV1bbi0xXS10aGlzLmN1bXN1bVtlLTFdW24tMV19cXVlcnkocyx0LG8sZSl7bGV0IG49dGhpcy5jdW1zdW1bZV1bb107cmV0dXJuIHQ+MCYmKG4tPXRoaXMuY3Vtc3VtW3QtMV1bb10pLHM+MCYmKG4tPXRoaXMuY3Vtc3VtW2VdW3MtMV0pLHM+MCYmdD4wJiYobis9dGhpcy5jdW1zdW1bdC0xXVtzLTFdKSxufX1jb25zdCBDPTEwLGI9MixNPTYsRj01LEk9Ljk1LEw9LjksTz0uMixaPTgsTj0yNCoyLzMsVT1yPT57Y29uc3R7ZGF0YTpzLHdpZHRoOnQsaGVpZ2h0Om8sc2NhbGU6ZX09cixuPVt0Km9dO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKW5baV09ITE7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWFbaV09LTEsYVt0KihvLTEpK2ldPS0xO2ZvcihsZXQgaT0wO2k8bztpKyspYVtpKnRdPS0xLGFbaSp0K3QtMV09LTE7Zm9yKGxldCBpPTE7aTx0LTE7aSsrKWZvcihsZXQgcD0xO3A8by0xO3ArKyl7bGV0IGY9aSt0KnAsaD0wLGM9MDtmb3IobGV0IHU9LTE7dTw9MTt1KyspaCs9c1tmK3QqdSsxXS1zW2YrdCp1LTFdLGMrPXNbZit0K3VdLXNbZi10K3VdO2gvPTMqMjU2LGMvPTMqMjU2LGFbZl09TWF0aC5zcXJ0KChoKmgrYypjKS8yKX1jb25zdCBnPW5ldyBVaW50MzJBcnJheSgxZTMpO2ZvcihsZXQgaT0wO2k8MWUzO2krKylnW2ldPTA7Y29uc3QgZD1bLTEsMSwtdCx0XTtmb3IobGV0IGk9MTtpPHQtMTtpKyspZm9yKGxldCBwPTE7cDxvLTE7cCsrKXtsZXQgZj1pK3QqcCxoPSEwO2ZvcihsZXQgYz0wO2M8ZC5sZW5ndGg7YysrKWlmKGFbZl08PWFbZitkW2NdXSl7aD0hMTticmVha31pZihoKXtsZXQgYz1NYXRoLmZsb29yKGFbZl0qMWUzKTtjPjk5OSYmKGM9OTk5KSxjPDAmJihjPTApLGdbY10rPTEsbltmXT0hMH19Y29uc3Qgdz0uMDIqdCpvO2xldCBqPTk5OSxFPTA7Zm9yKDtqPj0wJiYoRSs9Z1tqXSwhKEU+dykpOylqLS07Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDtpKyspbltpXSYmYVtpXSoxZTM8aiYmKG5baV09ITEpO2NvbnN0IGw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspbFtpXT1zW2ldKnNbaV07Y29uc3QgUz1uZXcgeihzLHQsbyksRD1uZXcgeihsLHQsbyksaz1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IGY9cCp0K2k7aWYoIW5bZl0pe2tbZl09MTtjb250aW51ZX1jb25zdCBoPVAoe2ltYWdlOnIsY3g6aSxjeTpwLHNkVGhyZXNoOkYsaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KTtpZihoPT09bnVsbCl7a1tmXT0xO2NvbnRpbnVlfWxldCBjPS0xO2ZvcihsZXQgdT0tQzt1PD1DO3UrKyl7Zm9yKGxldCBtPS1DO208PUM7bSsrKXtpZihtKm0rdSp1PD1iKmIpY29udGludWU7Y29uc3QgeD1SKHtpbWFnZTpyLGN4OmkrbSxjeTpwK3UsdmxlbjpoLHR4OmksdHk6cCxpbWFnZURhdGFDdW1zdW06UyxpbWFnZURhdGFTcXJDdW1zdW06RH0pO2lmKHghPT1udWxsJiZ4PmMmJihjPXgsYz5JKSlicmVha31pZihjPkkpYnJlYWt9a1tmXT1jfXJldHVybiBWKHtpbWFnZTpyLGZlYXR1cmVNYXA6ayx0ZW1wbGF0ZVNpemU6TSxzZWFyY2hTaXplOmIsb2NjU2l6ZTpOLG1heFNpbVRocmVzaDpMLG1pblNpbVRocmVzaDpPLHNkVGhyZXNoOlosaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KX0sVj1yPT57bGV0e2ltYWdlOnMsZmVhdHVyZU1hcDp0LHRlbXBsYXRlU2l6ZTpvLHNlYXJjaFNpemU6ZSxvY2NTaXplOm4sbWF4U2ltVGhyZXNoOmEsbWluU2ltVGhyZXNoOmcsc2RUaHJlc2g6ZCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an09cjtjb25zdHtkYXRhOkUsd2lkdGg6bCxoZWlnaHQ6UyxzY2FsZTpEfT1zO249TWF0aC5mbG9vcihNYXRoLm1pbihzLndpZHRoLHMuaGVpZ2h0KS8xMCk7Y29uc3Qgaz0obyoyKzEpKjMsQT1NYXRoLmZsb29yKGwvayksaT1NYXRoLmZsb29yKFMvayk7bGV0IHA9TWF0aC5mbG9vcihsL24pKk1hdGguZmxvb3IoUy9uKStBKmk7Y29uc3QgZj1bXSxoPW5ldyBGbG9hdDMyQXJyYXkoRS5sZW5ndGgpO2ZvcihsZXQgdT0wO3U8aC5sZW5ndGg7dSsrKWhbdV09dFt1XTtsZXQgYz0wO2Zvcig7YzxwOyl7bGV0IHU9YSxtPS0xLHg9LTE7Zm9yKGxldCB5PTA7eTxTO3krKylmb3IobGV0IFQ9MDtUPGw7VCsrKWhbeSpsK1RdPHUmJih1PWhbeSpsK1RdLG09VCx4PXkpO2lmKG09PT0tMSlicmVhaztjb25zdCB2PVAoe2ltYWdlOnMsY3g6bSxjeTp4LHNkVGhyZXNoOjAsaW1hZ2VEYXRhQ3Vtc3VtOncsaW1hZ2VEYXRhU3FyQ3Vtc3VtOmp9KTtpZih2PT09bnVsbCl7aFt4KmwrbV09MTtjb250aW51ZX1pZih2LyhvKjIrMSk8ZCl7aFt4KmwrbV09MTtjb250aW51ZX1sZXQgcT0xLF89LTE7Zm9yKGxldCB5PS1lO3k8PWU7eSsrKXtmb3IobGV0IFQ9LWU7VDw9ZTtUKyspe2lmKFQqVCt5Knk+ZSplfHxUPT09MCYmeT09PTApY29udGludWU7Y29uc3QgSD1SKHtpbWFnZTpzLHZsZW46dixjeDptK1QsY3k6eCt5LHR4Om0sdHk6eCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an0pO2lmKEghPT1udWxsJiYoSDxxJiYocT1ILHE8ZyYmcTx1KXx8SD5fJiYoXz1ILF8+Ljk5KSkpYnJlYWt9aWYocTxnJiZxPHV8fF8+Ljk5KWJyZWFrfWlmKHE8ZyYmcTx1fHxfPi45OSl7aFt4KmwrbV09MTtjb250aW51ZX1mLnB1c2goe3g6bSx5Onh9KSxjKz0xO2ZvcihsZXQgeT0tbjt5PD1uO3krKylmb3IobGV0IFQ9LW47VDw9bjtUKyspeCt5PDB8fHgreT49U3x8bStUPDB8fG0rVD49bHx8KGhbKHgreSkqbCsobStUKV09MSl9cmV0dXJuIGZ9LFA9KHtpbWFnZTpyLGN4OnMsY3k6dCxzZFRocmVzaDpvLGltYWdlRGF0YUN1bXN1bTplLGltYWdlRGF0YVNxckN1bXN1bTpufSk9PntpZihzLU08MHx8cytNPj1yLndpZHRofHx0LU08MHx8dCtNPj1yLmhlaWdodClyZXR1cm4gbnVsbDtjb25zdCBhPTIqTSsxLGc9YSphO2xldCBkPWUucXVlcnkocy1NLHQtTSxzK00sdCtNKTtkLz1nO2xldCB3PW4ucXVlcnkocy1NLHQtTSxzK00sdCtNKTtyZXR1cm4gdy09MipkKmUucXVlcnkocy1NLHQtTSxzK00sdCtNKSx3Kz1nKmQqZCx3L2c8bypvP251bGw6KHc9TWF0aC5zcXJ0KHcpLHcpfSxSPXI9Pntjb25zdHtpbWFnZTpzLGN4OnQsY3k6byx2bGVuOmUsdHg6bix0eTphLGltYWdlRGF0YUN1bXN1bTpnLGltYWdlRGF0YVNxckN1bXN1bTpkfT1yLHtkYXRhOncsd2lkdGg6aixoZWlnaHQ6RX09cyxsPU07aWYodC1sPDB8fHQrbD49anx8by1sPDB8fG8rbD49RSlyZXR1cm4gbnVsbDtjb25zdCBTPTIqbCsxO2xldCBEPWcucXVlcnkodC1sLG8tbCx0K2wsbytsKSxrPWQucXVlcnkodC1sLG8tbCx0K2wsbytsKSxBPTAsaT0oby1sKSpqKyh0LWwpLHA9KGEtbCkqaisobi1sKSxmPWotUztmb3IobGV0IG09MDttPFM7bSsrKXtmb3IobGV0IHg9MDt4PFM7eCsrKUErPXdbaV0qd1twXSxpKz0xLHArPTE7aSs9ZixwKz1mfWxldCBoPWcucXVlcnkobi1sLGEtbCxuK2wsYStsKTtoLz1TKlMsQS09aCpEO2xldCBjPWstRCpELyhTKlMpO3JldHVybiBjPT0wP251bGw6KGM9TWF0aC5zcXJ0KGMpLDEqQS8oZSpjKSl9LFc9KHIscyk9Pntjb25zdCB0PVtdO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBlPXJbb10sbj1VKGUpLGE9e2RhdGE6ZS5kYXRhLHNjYWxlOmUuc2NhbGUsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQscG9pbnRzOm59O3QucHVzaChhKSxzKG8pfXJldHVybiB0fSxYPSh7aW1hZ2U6cixyYXRpbzpzfSk9Pntjb25zdCB0PU1hdGgucm91bmQoci53aWR0aCpzKSxvPU1hdGgucm91bmQoci5oZWlnaHQqcyksZT1uZXcgVWludDhBcnJheSh0Km8pO2ZvcihsZXQgbj0wO248dDtuKyspe2xldCBhPU1hdGgucm91bmQoMSpuL3MpLGc9TWF0aC5yb3VuZCgxKihuKzEpL3MpLTE7Zz49ci53aWR0aCYmKGc9ci53aWR0aC0xKTtmb3IobGV0IGQ9MDtkPG87ZCsrKXtsZXQgdz1NYXRoLnJvdW5kKDEqZC9zKSxqPU1hdGgucm91bmQoMSooZCsxKS9zKS0xO2o+PXIuaGVpZ2h0JiYoaj1yLmhlaWdodC0xKTtsZXQgRT0wLGw9MDtmb3IobGV0IFM9YTtTPD1nO1MrKylmb3IobGV0IEQ9dztEPD1qO0QrKylFKz0xKnIuZGF0YVtEKnIud2lkdGgrU10sbCs9MTtlW2QqdCtuXT1NYXRoLmZsb29yKEUvbCl9fXJldHVybntkYXRhOmUsd2lkdGg6dCxoZWlnaHQ6b319LFk9cj0+e2NvbnN0IHM9TWF0aC5taW4oci53aWR0aCxyLmhlaWdodCksdD1bXSxvPVtdO3QucHVzaCgyNTYvcyksdC5wdXNoKDEyOC9zKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylvLnB1c2goT2JqZWN0LmFzc2lnbihYKHtpbWFnZTpyLHJhdGlvOnRbZV19KSx7c2NhbGU6dFtlXX0pKTtyZXR1cm4gb307b25tZXNzYWdlPXI9Pntjb25zdHtkYXRhOnN9PXI7aWYocy50eXBlPT09ImNvbXBpbGUiKXtjb25zdHt0YXJnZXRJbWFnZXM6dH09cyxvPTEwMC90Lmxlbmd0aDtsZXQgZT0wO2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGc9dFthXSxkPVkoZyksdz1vL2QubGVuZ3RoLGo9VyhkLEU9PntlKz13LHBvc3RNZXNzYWdlKHt0eXBlOiJwcm9ncmVzcyIscGVyY2VudDplfSl9KTtuLnB1c2goail9cG9zdE1lc3NhZ2Uoe3R5cGU6ImNvbXBpbGVEb25lIixsaXN0Om59KX19fSkoKTsK",D2=typeof window<"u"&&window.Blob&&new Blob([atob(X2)],{type:"text/javascript;charset=utf-8"});function Z2(e){let t;try{if(t=D2&&(window.URL||window.webkitURL).createObjectURL(D2),!t)throw"";const n=new Worker(t,{name:null==e?void 0:e.name});return n.addEventListener("error",(()=>{(window.URL||window.webkitURL).revokeObjectURL(t)})),n}catch{return new Worker("data:application/javascript;base64,"+X2,{name:null==e?void 0:e.name})}finally{t&&(window.URL||window.webkitURL).revokeObjectURL(t)}}class K2 extends O2{createProcessCanvas(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,t}compileTrack({progressCallback:e,targetImages:t,basePercent:n}){return new Promise(((s,a)=>{const r=new Z2;r.onmessage=t=>{"progress"===t.data.type?e(n+t.data.percent*n/100):"compileDone"===t.data.type&&s(t.data.list)},r.postMessage({type:"compile",targetImages:t})}))}}class P2{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);const s=Yi();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return Oi((()=>{let t=Sy(e);return t=t.mean(2),t}))}loadInput(e){const t=this.context;if(t.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),e.width===this.height&&e.height===this.width){let n=this.context.canvas.width/2,s=this.context.canvas.height/2,a=90;t.save(),t.translate(n,s),t.rotate(a*Math.PI/180),t.drawImage(e,-e.width/2,-e.height/2),t.restore()}else this.context.drawImage(e,0,0,e.width,e.height);const n=Yi();return n.gpgpu.uploadPixelDataToTexture(n.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const n=2===Ne().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(e,t){const n=Yi().compileAndRun(e,t);return $i().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=Yi().runWebGLProgram(e,t,n);return $i().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}const _2={memory:Fi,nextFrame:Jy},B2=1e-4,H2=1e3,U2=5,Y2=5;class j2{constructor({inputWidth:e,inputHeight:t,onUpdate:n=null,debugMode:s=!1,maxTrack:a=1,warmupTolerance:r=null,missTolerance:i=null,filterMinCF:o=null,filterBeta:l=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=a,this.filterMinCF=null===o?B2:o,this.filterBeta=null===l?H2:l,this.warmupTolerance=null===r?U2:r,this.missTolerance=null===i?Y2:i,this.cropDetector=new g1(this.inputWidth,this.inputHeight,s),this.inputLoader=new P2(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=s,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=10,c=1e5,d=45*Math.PI/180,h=this.inputHeight/2/Math.tan(d/2);this.projectionTransform=[[h,0,this.inputWidth/2],[0,h,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:u,far:c}),this.worker=new Pq,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(_2.memory().numTensors),console.table(_2.memory())}addImageTargets(e){return new Promise((async(t,n)=>{const s=await(await fetch(e)).arrayBuffer(),a=this.addImageTargetsFromBuffer(s);t(a)}))}addImageTargetsFromBuffer(e){const t=(new K2).importData(e),n=[],s=[],a=[];for(let r=0;r<t.length;r++)s.push(t[r].matchingData),n.push(t[r].trackingData),a.push([t[r].targetImage.width,t[r].targetImage.height]);return this.tracker=new t0(a,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:s}),this.markerDimensions=a,{dimensions:a,matchingDataList:s,trackingDataList:n}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getRotatedZ90Matrix(e){return[-e[1],e[0],e[2],e[3],-e[5],e[4],e[6],e[7],-e[9],e[8],e[10],e[11],-e[13],e[12],e[14],e[15]]}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:n}=this.cropDetector.detectMoving(e),{targetIndex:s,modelViewTransform:a}=await this._workerMatch(n,t);return{targetIndex:s,modelViewTransform:a}}async _trackAndUpdate(e,t,n){const{worldCoords:s,screenCoords:a}=this.tracker.track(e,t,n);return s.length<4?null:await this._workerTrackUpdate(t,{worldCoords:s,screenCoords:a})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let e=0;e<this.markerDimensions.length;e++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new f({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce(((e,t)=>e+(t.isTracking?1:0)),0)<this.maxTrack){const e=[];for(let t=0;t<this.trackingStates.length;t++)!0!==this.trackingStates[t].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||e.push(t));const{targetIndex:n,modelViewTransform:s}=await this._detectAndMatch(t,e);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=s)}for(let n=0;n<this.trackingStates.length;n++){const s=this.trackingStates[n];if(s.isTracking){let e=await this._trackAndUpdate(t,s.currentModelViewTransform,n);null===e?s.isTracking=!1:s.currentModelViewTransform=e}if(s.showing||s.isTracking&&(s.trackMiss=0,s.trackCount+=1,s.trackCount>this.warmupTolerance&&(s.showing=!0,s.trackingMatrix=null,s.filter.reset())),s.showing&&(s.isTracking?s.trackMiss=0:(s.trackCount=0,s.trackMiss+=1,s.trackMiss>this.missTolerance&&(s.showing=!1,s.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:n,worldMatrix:null})))),s.showing){const t=this._glModelViewMatrix(s.currentModelViewTransform,n);s.trackingMatrix=s.filter.filter(Date.now(),t);let a=[];for(let e=0;e<s.trackingMatrix.length;e++)a[e]=s.trackingMatrix[e];e.width===this.inputHeight&&e.height===this.inputWidth&&(a=this.getRotatedZ90Matrix(a)),this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:n,worldMatrix:a})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await _2.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:n,debugExtra:s}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:n,debugExtra:s}}async match(e,t){const{modelViewTransform:n,debugExtra:s}=await this._workerMatch(e,[t]);return{modelViewTransform:n,debugExtra:s}}async track(e,t,n){const s=this.inputLoader.loadInput(e),a=this.tracker.track(s,t,n);return s.dispose(),a}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise((async(n,s)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtra:e.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})}))}_workerTrackUpdate(e,t){return new Promise((async(n,s)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};const{worldCoords:a,screenCoords:r}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:a,screenCoords:r})}))}_glModelViewMatrix(e,t){const n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:s,far:a}){const r=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(a+s)/(a-s),-2*a*s/(a-s)],[0,0,-1,0]],i=[];for(let o=0;o<4;o++)for(let e=0;e<4;e++)i.push(r[e][o]);return i}}var Q2=n(514);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function J2(e){$(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),$(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>xi(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!D(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return oi.runKernel(Ve,s)}const q2=ki({addN_:J2});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(e,t,n,s,a,r){const i=xi(e,"forgetBias","basicLSTMCell"),o=xi(t,"lstmKernel","basicLSTMCell"),l=xi(n,"lstmBias","basicLSTMCell"),u=xi(s,"data","basicLSTMCell"),c=xi(a,"c","basicLSTMCell"),d=xi(r,"h","basicLSTMCell"),h=ku([u,d],1),p=Su(h,o),m=xl(p,l),f=m.shape[0],g=m.shape[1]/4,b=[f,g],y=Ru(m,[0,0],b),x=Ru(m,[0,g],b),w=Ru(m,[0,2*g],b),v=Ru(m,[0,3*g],b),k=xl(Tl(Nu(y),Gu(x)),Tl(c,Nu(xl(i,w)))),I=Tl(Gu(k),Nu(v));return[k,I]}const t3=ki({basicLSTMCell_:e3});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(e,t){const n=xi(e,"x","bitwiseAnd"),s=xi(t,"y","bitwiseAnd");if(!D(n.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${s.shape}`);if("int32"!==n.dtype||"int32"!==s.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${s.dtype}`);const a={a:n,b:s};return oi.runKernel(et,a)}const s3=ki({bitwiseAnd_:n3});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(e,t){const n=xi(e,"s0","broadcastArgs","int32"),s=xi(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const a={s0:n,s1:s};return oi.runKernel(nt,a)}const r3=ki({broadcastArgs_:a3});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(e){const t={x:xi(e,"x","diag")};return oi.runKernel(Tt,t)}const o3=ki({diag_:i3});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(e,t){const n=xi(e,"x","ensureShape","string_or_numeric");if(!X(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}const u3=ki({ensureShape_:l3});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return oi.runKernel(an,{},s)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d3=2147483648;function h3(e,t,n="left"){const s=xi(e,"sortedSequence","searchSorted"),a=xi(t,"values","searchSorted"),r=s.shape[s.shape.length-1],i=a.shape[a.shape.length-1],o=gu(s,[-1,r]),l=gu(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(O(l.shape)>=d3)throw new Error(`values tensor size must less than ${d3}`);if(o.shape[1]>=d3)throw new Error(`trailing dim_size must less than ${d3} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return oi.runKernel(ls,u,c)}const p3=ki({searchSorted_:h3});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(e,t){return p3(e,t,"left")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(e,t,n,s,a=!1){const r={x:xi(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:a},o=oi.runKernel(In,r,i);return{result:o[0],indexes:o[1]}}const g3=ki({maxPoolWithArgmax_:f3});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let s=xi(e,"x","meshgrid",e instanceof Fr?e.dtype:"float32");if(void 0===t)return[s];let a=xi(t,"y","meshgrid",t instanceof Fr?t.dtype:"float32");const r=O(s.shape),i=O(a.shape);return"xy"===n?(s=gu(s,[1,-1]),a=gu(a,[-1,1]),[Su(Hh([i,1],s.dtype),s),Su(a,Hh([1,r],a.dtype))]):(s=gu(s,[-1,1]),a=gu(a,[1,-1]),[Su(s,Hh([1,i],s.dtype)),Su(Hh([r,1],a.dtype),a)])}function y3(e,t,n,s){const a=xi(t,"data","multiRNNCell"),r=wi(n,"c","multiRNNCell"),i=wi(s,"h","multiRNNCell");let o=a;const l=[];for(let d=0;d<e.length;d++){const t=e[d](o,r[d],i[d]);l.push(t[0]),l.push(t[1]),o=t[1]}const u=[],c=[];for(let d=0;d<l.length;d+=2)u.push(l[d]),c.push(l[d+1]);return[u,c]}const x3=ki({multiRNNCell_:y3});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(e,t,n,s=!1){const a=xi(e,"logits","multinomial"),r=a.size,i=a.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?gu(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:s},u=oi.runKernel(En,o,l);return 1===i?gu(u,[u.size]):u}const v3=ki({multinomial_:w3});function k3(e,t){const n=xi(e,"v1","outerProduct"),s=xi(t,"v2","outerProduct");$(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const a=gu(n,[-1,1]),r=gu(s,[1,-1]);return Su(a,r)}const I3=ki({outerProduct_:k3});function S3(e,t,n=0){return $(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),up(e,[t],n)}const T3=ki({pad1d_:S3});function N3(e,t,n=0){return $(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),up(e,t,n)}const C3=ki({pad2d_:N3});function R3(e,t,n=0){return $(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),up(e,t,n)}const E3=ki({pad3d_:R3});function G3(e,t,n=0){return $(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),up(e,t,n)}const M3=ki({pad4d_:G3});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(e,t,n,s){const a=e.map(((e,t)=>xi(e,`tensors${t}`,"raggedGather","int32"))),r=xi(t,"paramsDenseValues","raggedGather"),i=xi(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:r,indices:i},l={outputRaggedRank:s},u=oi.runKernel(Pn,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const z3=ki({raggedGather_:L3});
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(e,t,n){const s=xi(e,"starts","raggedRange"),a=xi(t,"limits","raggedRange",s.dtype),r=xi(n,"deltas","raggedRange",s.dtype),i={starts:s,limits:a,deltas:r},o=oi.runKernel(_n,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const $3=ki({raggedRange_:W3});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(e,t,n,s,a){const r=xi(e,"shape","raggedTensorToTensor","int32"),i=xi(t,"values","raggedTensorToTensor"),o=xi(n,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map(((e,t)=>xi(e,`tensors${t}`,"raggedTensorToTensor","int32"))),u={shape:r,values:i,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:a};return oi.runKernel(Bn,u,c)}const V3=ki({raggedTensorToTensor_:F3});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(e,t,n){be(e);const s=O(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(s);else if("int32"===n)a=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(s)}for(let r=0;r<s;r++)a[r]=t();return oi.makeTensor(a,e,n)}const A3=ki({rand_:O3}),X3=.001,D3=.1;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(e,t,n){return null==n&&(n=K3()),P3(e,t,((e,t)=>U3(e,t,n)))}function K3(){return 32===oi.backend.floatPrecision()?X3:D3}function P3(e,t,n){let s=!0;if((mr(e)||mr(t))&&(s=!1),mr(e)&&mr(t)&&(s=!0),s){const n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${s}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=gi(e),s=gi(t);if(!D(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}const a=mr(e)?e:fr(e),r=mr(t)?t:fr(t);if(a.length!==r.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${r.length}.\nActual:   ${a}.\nExpected: ${r}.`);for(let i=0;i<r.length;++i){const e=a[i],t=r[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${a}.\nExpected: ${r}.`)}typeof expect<"u"&&expect().nothing()}function _3(e,t){e().then((()=>t.fail()),(()=>t())),typeof expect<"u"&&expect().nothing()}function B3(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ae(e)||ae(e[0])||ae(t)||ae(t[0])?P3(e,n,((e,t)=>e==t)):P3(e,t,((e,t)=>U3(e,t,0)))}function H3(e,t,n){if(null==n&&(n=K3()),!U3(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function U3(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Y3(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function j3(e,t){const n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let a=0;a<s.length;a++)if(n[a]!==s[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${s[a]} but got ${n[a]} instead`)}function Q3(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Q3(n):e[t]=hr(n)}return e}function J3(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function q3(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const e9=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:D3,createVideoElement:J3,encodeStrings:Q3,expectArrayBuffersEqual:j3,expectArraysClose:Z3,expectArraysEqual:B3,expectNumbersClose:H3,expectPromiseToFail:_3,expectValuesInRange:Y3,play:q3,testEpsilon:K3},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(e,t,n=1,s="float32",a){if(be(e),null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const r=new Bp(t,n,s,a),i=dl(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=r.nextValue();return i.toTensor()}const n9=ki({randomGamma_:t9});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Yp(e,0,1,t,n)}const a9=ki({randomStandardNormal_:s9});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r9(e,t,n,s){return Qp(e,t,n,"int32",s)}const i9=ki({randomUniformInt_:r9});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(e){const t=xi(e,"x","reverse");return $(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),lm(t,0)}const l9=ki({reverse1d_:o9});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(e,t){const n=xi(e,"x","reverse");return $(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),lm(n,t)}const c9=ki({reverse2d_:u9});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(e,t){const n=xi(e,"x","reverse");return $(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),lm(n,t)}const h9=ki({reverse3d_:d9});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(e,t){const n=xi(e,"x","reverse");return $(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),lm(n,t)}const m9=ki({reverse4d_:p9});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function f9(e,t){const n=xi(e,"x","setdiff1d"),s=xi(t,"y","setdiff1d");$(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),$(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),$(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const a=await n.data(),r=await s.data(),i=new Set(r);let o=0;for(let c=0;c<a.length;c++)i.has(a[c])||o++;const l=new Mr([o],n.dtype),u=new Mr([o],"int32");for(let c=0,d=0;c<a.length;c++)i.has(a[c])||(l.values[d]=a[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]}const g9=f9;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(e,t,n){if(V(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=gi(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ti(e,t,s,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(e,t,n){if(V(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=gi(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ti(e,t,s,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(e,t,n){if(V(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=gi(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Ti(e,t,s,n)
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}function w9(e,t,n){const s=xi(e,"tensor","tensorScatterupdate"),a=xi(t,"indices","tensorScatterupdate","int32"),r=xi(n,"updates","tensorScatterupdate");if(rf(r,a,s.shape),s.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${r.dtype}.`);const i={tensor:s,indices:a,updates:r},o={};return oi.runKernel(os,i,o)}const v9=ki({tensorScatterUpdate_:w9});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(e,t){return p3(e,t,"right")}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function I9(e){const t=xi(e,"condition","whereAsync","bool"),n=await t.data(),s=wf(t.shape,n);return e!==t&&t.dispose(),s}const S9=I9;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function T9(e,t,n){const s=xi(e,"tensor","boolMask"),a=xi(t,"mask","boolMask","bool"),r=n??0,i=a.rank,o=s.shape;$(i>0,(()=>"mask cannot be scalar")),F(o.slice(r,r+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let f=r;f<r+i;f++)l*=o[f];const u=o.slice(0,r).concat([l],o.slice(r+i)),c=gu(s,u),d=gu(a,[-1]),h=await S9(d),p=Bm(h,[1]),m=Xd(c,p,r);return e!==s&&s.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),m}const N9=T9;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(e,t,n,s,a=!0){const r=xi(e,"v","movingAverage"),i=xi(t,"x","movingAverage"),o=xi(n,"decay","movingAverage");jr(r,i),$(D(r.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=fd(1),u=Th(l,o);let c=Tl(Th(i,r),u);if(a){$(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=xi(s,"step","movingAverage");c=Il(c,Th(l,md(o,e)))}return xl(r,c)}const R9=ki({movingAverage_:C9});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(e,t,n){be(n);const s=xi(e,"indices","scatterND","int32"),a=xi(t,"updates","scatterND");rf(a,s,n);const r={indices:s,updates:a},i={shape:n};return oi.runKernel(is,r,i)}const G9=ki({scatterND_:E9});function M9(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,r=e.rank>1?e.shape[1]:1;if(n.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${r}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(e,t,n,s=0){be(n);const a=xi(e,"sparseIndices","sparseToDense","int32"),r=xi(t,"sparseValues","sparseToDense","string_or_numeric"),i=xi(s,"defaultValue","sparseToDense",r.dtype);M9(a,r,n,i);const o={sparseIndices:a,sparseValues:r,defaultValue:i},l={outputShape:n};return oi.runKernel(Ns,o,l)}const z9=ki({sparseToDense_:L9});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(e,t){const n=xi(t,"indices","gatherND","int32"),s={params:xi(e,"x","gatherND","string_or_numeric"),indices:n};return oi.runKernel(Bt,s)}const $9=ki({gatherND_:W9});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function F9(e,t,n=1){const s=xi(e,"predictions","inTopK"),a=xi(t,"targets","inTopK");$(s.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`)),$(s.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${a.rank}`)),F(s.shape.slice(0,s.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];$(n>0&&n<=r,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${n}`));const i=await s.data(),o=await a.data(),[l,u]=[i.length/r,r],c=Q("bool",l);for(let d=0;d<l;d++){const e=d*u,t=i.subarray(e,e+u),s=[];for(let n=0;n<t.length;n++)s.push({value:t[n],index:n});s.sort(((e,t)=>t.value-e.value)),c[d]=0;for(let a=0;a<n;a++)if(s[a].index===o[d]){c[d]=1;break}}return e!==s&&s.dispose(),t!==a&&a.dispose(),Ni(c,a.shape,"bool")}const V9=F9;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9({x:e,filter:t,strides:n,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===zf(oi.state.gradientDepth,l)){let d=Lc(e,t,n,s,a,r,i);return null!=o&&(d=xl(d,o)),Lf(d,l,u,c)}const d=xi(e,"x","depthwiseConv2d","float32"),h=xi(t,"filter","depthwiseConv2d","float32");let p=d,m=!1;3===d.rank&&(m=!0,p=gu(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),$(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),$(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==r&&(r=[1,1]),$(du(n,r),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${r}'`)),mu("fused depthwiseConv2d",s,i);const f=ql(p.shape,h.shape,n,r,s,i,!0);let g,b;null!=o&&(g=xi(o,"bias","fused conv2d"),[g]=Yr(g,d),Vc(f.outShape,g.shape)),null!=u&&(b=xi(u,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{$(cu(r),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`));const[a,o,u,c]=t,d=Gf(e,u,l),h=Af(o.shape,d,a,n,s,r,i),p=Vf(o,d,a.shape,n,s,r,i);if(null!=c){const e=Mf(g,d);return[h,p,e]}return[h,p]},x={x:p,filter:h,bias:g,preluActivationWeights:b},w={strides:n,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?gh(((e,t,n)=>{let s=oi.runKernel(Qs,x,w);return n([t,e,s]),m&&(s=gu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,h):gh(((e,t,n,s)=>{let a=oi.runKernel(Qs,x,w);return s([t,e,a,n]),m&&(a=gu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}))(p,h,g)}const A9=ki({fusedDepthwiseConv2d_:O9}),X9=Object.freeze(Object.defineProperty({__proto__:null,conv2d:$f,depthwiseConv2d:A9,matMul:Df},Symbol.toStringTag,{value:"Module"})),D9="model",Z9=".json",K9=".weights.bin";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P9(e){return new Promise((e=>setTimeout(e))).then(e)}class _9{constructor(e){if(!Ne().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(_9.URL_SCHEME)&&(e=e.slice(_9.URL_SCHEME.length)),(null==e||0===e.length)&&(e=D9),this.modelJsonFileName=e+Z9,this.weightDataFileName=e+K9}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ri.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=po(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await P9((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await P9((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:go(e)}}}}_9.URL_SCHEME="downloads://";class B9{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const s=JSON.parse(n.target.result),a=s.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==s.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const r=fo(s,(e=>this.loadWeights(e)));e(r)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const s=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,s[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,s)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>ho(e.name))),s={};for(const a of e)a.paths.forEach((e=>{const a=ho(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const H9=e=>Ne().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_9.URL_SCHEME)?U9(e.slice(_9.URL_SCHEME.length)):null;function U9(e="model"){return new _9(e)}function Y9(e){return new B9(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ko.registerSaveRouter(H9);class j9{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Q9{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class J9{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function q9(e,t,n,s){const a=arguments;return new J9(e5(...a))}function e5(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new j9(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new j9({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new j9({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function t5(e){return new Q9(e)}function n5(e){return new Q9(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Ri,browserFiles:Y9,browserHTTPRequest:dy,concatenateArrayBuffers:co,copyModel:rl,decodeWeights:qi,decodeWeightsStream:ao,encodeWeights:Ji,fromMemory:q9,fromMemorySync:e5,getLoadHandlers:No,getModelArtifactsForJSON:fo,getModelArtifactsForJSONSync:mo,getModelArtifactsInfoForJSON:go,getSaveHandlers:To,getWeightSpecs:bo,http:cy,isHTTPScheme:ly,listModels:sl,loadWeights:ny,moveModel:il,registerLoadRouter:So,registerSaveRouter:Io,removeModel:al,weightsLoaderFactory:sy,withSaveHandler:t5,withSaveHandlerSync:n5},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(e,t,n){const s=xi(e,"labels","confusionMatrix"),a=xi(t,"predictions","confusionMatrix");$(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),$(1===s.rank,(()=>`Expected the rank of labels to be 1, but got ${s.rank}`)),$(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),$(s.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),$(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const r=rp(pl(s,"int32"),n),i=rp(pl(a,"int32"),n),o=kf(r),l=Su(o,i);return pl(l,"int32")}const r5=ki({confusionMatrix_:a5}),i5=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:r5},Symbol.toStringTag,{value:"Module"})),o5="4.16.0",l5=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:pg,nonMaxSuppressionV4Impl:mg,nonMaxSuppressionV5Impl:fg,whereImpl:wf},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function u5(e){return new jS(e)}function c5(e){return new QS(e)}function d5(){return new JS}function h5(e){return new qS(e)}const p5=Object.freeze(Object.defineProperty({__proto__:null,maxNorm:u5,minMaxNorm:h5,nonNeg:d5,unitNorm:c5},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function m5(){return new UI}function f5(){return new YI}function g5(e){return new jI(e)}function b5(e){return new QI(e)}function y5(e){return new JI(e)}function x5(e){return new qI(e)}function w5(e){return new eS(e)}function v5(e){return new nS(e)}function k5(e){return new sS(e)}function I5(e){return new aS(e)}function S5(e){return new rS(e)}function T5(e){return new iS(e)}function N5(e){return new oS(e)}function C5(e){return new lS(e)}function R5(e){return new uS(e)}const E5=Object.freeze(Object.defineProperty({__proto__:null,constant:g5,glorotNormal:I5,glorotUniform:k5,heNormal:S5,heUniform:T5,identity:w5,leCunNormal:N5,leCunUniform:C5,ones:f5,orthogonal:R5,randomNormal:y5,randomUniform:b5,truncatedNormal:x5,varianceScaling:v5,zeros:m5},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function G5(e){return new BN(e)}function M5(e){return new JN(e)}function L5(e){return FS(e)}function z5(e,t){mT.registerCallbackConstructor(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function W5(e){return new $S(e)}function $5(e){return new EC(e)}function F5(e){return new NC(e)}function V5(e){return new CC(e)}function O5(e){return new RC(e)}function A5(e){return new MC(e)}function X5(e){return new GC(e)}function D5(e){return new UC(e)}function Z5(e){return new ZC(e)}function K5(e){return new PC(e)}function P5(e){return new KC(e)}function _5(e){return new _C(e)}function B5(e){return new HC(e)}function H5(e){return new YC(e)}function U5(e){return new jC(e)}function Y5(e){return new JC(e)}function j5(e){return new xR(e)}function Q5(e){return new bR(e)}function J5(e){return new fR(e)}function q5(e){return new gR(e)}function e4(e){return new yR(e)}function t4(e){return new wR(e)}function n4(e){return new vR(e)}function s4(e){return new kR(e)}function a4(e){return new SR(e)}function r4(e){return new NR(e)}function i4(e){return new RR(e)}function o4(e){return new MR(e)}function l4(e){return new ER(e)}function u4(e){return new GR(e)}function c4(e){return new CR(e)}function d4(e){return new WR(e)}function h4(e){return new ZR(e)}function p4(e){return new KR(e)}function m4(e){return new _R(e)}function f4(e){return new jR(e)}function g4(e){return f4(e)}function b4(e){return f4(e)}function y4(e){return new qR(e)}function x4(e){return y4(e)}function w4(e){return y4(e)}function v4(e){return new nE(e)}function k4(e){return v4(e)}function I4(e){return v4(e)}function S4(e){return new aE(e)}function T4(e){return new oE(e)}function N4(e){return new rE(e)}function C4(e){return new lE(e)}function R4(e){return new YR(e)}function E4(e){return new JR(e)}function G4(e){return new tE(e)}function M4(e){return new iR(e)}function L4(e){return new rR(e)}function z4(e){return new lR(e)}function W4(e){return new oR(e)}function $4(e){return new aR(e)}function F4(e){return new sR(e)}function V4(e){return new mR(e)}function O4(e){return new pR(e)}function A4(e){return new tR(e)}function X4(e){return new uR(e)}function D4(e){return new pE(e)}function Z4(e){return new cE(e)}const K4=N4,P4=C4,_4=R4,B4=E4;function H4(e){return new $R(e)}function U4(e){return new FR(e)}function Y4(e){return new VR(e)}function j4(e){return new IR(e)}function Q4(e){return new mE(e)}function J4(e){return new bE(e)}function q4(e){return new kE(e)}function e7(e){return new xE(e)}function t7(e){return new CE(e)}const n7=Object.freeze(Object.defineProperty({__proto__:null,Layer:ES,RNN:tR,RNNCell:nR,activation:j5,add:r4,alphaDropout:Y4,average:i4,averagePooling1d:f4,averagePooling2d:y4,averagePooling3d:v4,avgPool1d:g4,avgPool2d:x4,avgPool3d:k4,avgPooling1d:b4,avgPooling2d:w4,avgPooling3d:I4,batchNormalization:h4,bidirectional:D4,categoryEncoding:e7,centerCrop:J4,concatenate:o4,conv1d:D5,conv2d:Z5,conv2dTranspose:K5,conv3d:P5,conv3dTranspose:_5,convLstm2d:V4,convLstm2dCell:O4,cropping2D:H5,dense:Q5,depthwiseConv2d:Y5,dot:d4,dropout:J5,elu:$5,embedding:a4,flatten:e4,gaussianDropout:U4,gaussianNoise:H4,globalAveragePooling1d:S4,globalAveragePooling2d:T4,globalMaxPool1d:K4,globalMaxPool2d:P4,globalMaxPooling1d:N4,globalMaxPooling2d:C4,gru:M4,gruCell:L4,input:L5,inputLayer:W5,layerNormalization:p4,leakyReLU:V5,lstm:z4,lstmCell:W4,masking:j4,maxPool1d:_4,maxPool2d:B4,maxPooling1d:R4,maxPooling2d:E4,maxPooling3d:G4,maximum:l4,minimum:u4,multiply:c4,permute:s4,prelu:O5,randomWidth:t7,reLU:F5,repeatVector:t4,rescaling:Q4,reshape:n4,resizing:q4,rnn:A4,separableConv2d:B5,simpleRNN:$4,simpleRNNCell:F4,softmax:A5,spatialDropout1d:q5,stackedRNNCells:X4,thresholdedReLU:X5,timeDistributed:Z4,upSampling2d:U5,zeroPadding2d:m4},Symbol.toStringTag,{value:"Module"}));function s7(e,t){return $T(e,t)}function a7(e,t){return ZT(e,t)}function r7(e,t){return KT(e,t)}function i7(e,t){return FT(e,t)}function o7(e,t){return jT(e,t)}function l7(e,t){return XT(e,t)}function u7(e,t){return DT(e,t)}function c7(e,t){return LT(e,t)}function d7(e,t){return xT(e,t)}function h7(e,t){return wT(e,t)}function p7(e,t){return wT(e,t)}function m7(e,t){return wT(e,t)}function f7(e,t){return yT(e,t)}function g7(e,t){return yT(e,t)}function b7(e,t){return yT(e,t)}const y7=Object.freeze(Object.defineProperty({__proto__:null,MAPE:p7,MSE:g7,binaryAccuracy:s7,binaryCrossentropy:a7,categoricalAccuracy:i7,categoricalCrossentropy:o7,cosineProximity:c7,mape:m7,meanAbsoluteError:d7,meanAbsolutePercentageError:h7,meanSquaredError:f7,mse:b7,precision:l7,recall:u7,sparseCategoricalAccuracy:r7},Symbol.toStringTag,{value:"Module"})),x7=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON:UN},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function w7(e){return new xC(e)}function v7(e){return wC(e)}function k7(e){return vC(e)}const I7=Object.freeze(Object.defineProperty({__proto__:null,l1:v7,l1l2:w7,l2:k7},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class S7 extends lT{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof BN))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function T7(e,t){return e<t}function N7(e,t){return e>t}class C7 extends S7{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new vk("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=T7:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=N7:this.monitorFunc=T7,this.monitorFunc===T7&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===T7?1/0:-1/0}async onEpochEnd(e,t){await aT(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function R7(e){return new C7(e)}const E7={earlyStopping:R7},G7={};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};G7[e]=n}function L7(e){return G7[e]}function z7(e){delete G7[e]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(e,t,n,s,a){const r=t.inputParams[e];if(r&&void 0!==r.inputIndexStart){const e=r.inputIndexStart,i=0===r.inputIndexEnd?void 0:void 0===r.inputIndexEnd?e+1:r.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===r.type)return $7(t.inputNames[o],n,s,a);if("tensors"===r.type){const r=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=r[t])||void 0===n?void 0:n.op)})).map((e=>$7(e,n,s,a)))}const l=$7(t.inputNames[o],n,s,a),u=l.dataSync();return"number"===r.type?u[0]:he(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function $7(e,t,n,s){const[a,r]=A7(e,n);if(null!=s){const e=s.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[O7(a,e)]));return void 0!==i?t[O7(a,i)][r]:void 0}function F7(e,t,n){return t[O7(e,n.currentContextId)]}function V7(e,t){const[n,s,a]=A7(e,t);return[O7(n,t&&t.currentContextId),s,a]}function O7(e,t){return t?`${e}-${t}`:e}function A7(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const s=e.split(":");let a;if(1===s.length)a=[e,0,void 0];else{const e=s[0],t=3===s.length?s[1]:void 0,n=Number(s[s.length-1]);a=[e,n,t]}return n&&t.parseNodeNameCache.set(e,a),a}function X7(e,t,n){let s=W7("pad",e,t,n);if("explicit"===s){s=W7("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=s[2*e],a[e][1]=s[2*e+1];return a}return s}function D7(e){return e.kept?e:fl(e)}
/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],K7=Object.freeze(Object.defineProperty({__proto__:null,json:Z7},Symbol.toStringTag,{value:"Module"})),P7=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_7=Object.freeze(Object.defineProperty({__proto__:null,json:P7},Symbol.toStringTag,{value:"Module"})),B7=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],H7=Object.freeze(Object.defineProperty({__proto__:null,json:B7},Symbol.toStringTag,{value:"Module"})),U7=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Y7=Object.freeze(Object.defineProperty({__proto__:null,json:U7},Symbol.toStringTag,{value:"Module"})),j7=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Q7=Object.freeze(Object.defineProperty({__proto__:null,json:j7},Symbol.toStringTag,{value:"Module"})),J7=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],q7=Object.freeze(Object.defineProperty({__proto__:null,json:J7},Symbol.toStringTag,{value:"Module"})),e8=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],t8=Object.freeze(Object.defineProperty({__proto__:null,json:e8},Symbol.toStringTag,{value:"Module"})),n8=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],s8=Object.freeze(Object.defineProperty({__proto__:null,json:n8},Symbol.toStringTag,{value:"Module"})),a8=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],r8=Object.freeze(Object.defineProperty({__proto__:null,json:a8},Symbol.toStringTag,{value:"Module"})),i8=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],o8=Object.freeze(Object.defineProperty({__proto__:null,json:i8},Symbol.toStringTag,{value:"Module"})),l8=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],u8=Object.freeze(Object.defineProperty({__proto__:null,json:l8},Symbol.toStringTag,{value:"Module"})),c8=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],d8=Object.freeze(Object.defineProperty({__proto__:null,json:c8},Symbol.toStringTag,{value:"Module"})),h8=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],p8=Object.freeze(Object.defineProperty({__proto__:null,json:h8},Symbol.toStringTag,{value:"Module"})),m8=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],f8=Object.freeze(Object.defineProperty({__proto__:null,json:m8},Symbol.toStringTag,{value:"Module"})),g8=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],b8=Object.freeze(Object.defineProperty({__proto__:null,json:g8},Symbol.toStringTag,{value:"Module"})),y8=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],x8=Object.freeze(Object.defineProperty({__proto__:null,json:y8},Symbol.toStringTag,{value:"Module"})),w8=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],v8=Object.freeze(Object.defineProperty({__proto__:null,json:w8},Symbol.toStringTag,{value:"Module"})),k8=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],I8=Object.freeze(Object.defineProperty({__proto__:null,json:k8},Symbol.toStringTag,{value:"Module"})),S8=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],T8=Object.freeze(Object.defineProperty({__proto__:null,json:S8},Symbol.toStringTag,{value:"Module"}));
/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class N8{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[K7,_7,H7,Y7,Q7,q7,t8,s8,r8,o8,u8,d8,p8,f8,b8,x8,v8,I8,T8],t=[].concat(...e.map((e=>e.json)));this.opMappers=t.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],a=[],r=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&r.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=V7(e),r=i[s];if(null!=r.outputs){const e=r.outputs.indexOf(a);if(-1!==e){const a=`${s}:${e}`;t.inputNames[n]=a}}t.inputs.push(r),r.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=V7(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=V7(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=s;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:a,placeholders:s,signature:t,functions:h};return r.length>0&&(p.initNodes=r),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=L7(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let a;switch(n.type){case"string":a=E8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=A8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=M8(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=M8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=O8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=O8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=G8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=G8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=D8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=V8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=V8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=X8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=X8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=W8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=W8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=$8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=z8(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z8(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[],s=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&s.push(e[t.name]),e)),{}));const r=[],i=[];e.signature.inputArg.forEach((e=>{const[t]=V7(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:L8(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n})),Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[s,,r]=V7(e),i=a[s];if(null!=i.outputs){const e=i.outputs.indexOf(r);if(-1!==e){const a=`${s}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=V7(o[e.name]),s=a[t];null!=s&&(s.defaultOutput=n,i.push(s))}));const l=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:i,weights:s,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function C8(e){const t=Ne().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function R8(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):C8(e);return t?n:n.toLowerCase()}function E8(e,t,n,s=!1){const a=e[t];return null!=a?R8(a.s,s):n}function G8(e,t,n){const s=e[t];return s?s.b:n}function M8(e,t,n){const s=e[t]||{},a=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof a?a:parseInt(a,10)}function L8(e){switch("string"==typeof e&&(e=EE[e]),e){case EE.DT_FLOAT:case EE.DT_HALF:return"float32";case EE.DT_INT32:case EE.DT_INT64:case EE.DT_INT8:case EE.DT_UINT8:return"int32";case EE.DT_BOOL:return"bool";case EE.DT_DOUBLE:return"float32";case EE.DT_STRING:return"string";case EE.DT_COMPLEX64:case EE.DT_COMPLEX128:return"complex64";default:return null}}function z8(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function W8(e,t,n){const s=e[t];return s&&s.type?L8(s.type):n}function $8(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>L8(e))):n}function F8(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function V8(e,t,n){const s=e[t];return s&&s.shape?F8(s.shape):n}function O8(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function A8(e,t,n,s=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>R8(e,s))):n}function X8(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>F8(e))):n}function D8(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z8{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return $7(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return $7(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return M8(this.node.rawAttrs,e,t);if(null!=n.s)return E8(this.node.rawAttrs,e,t);if(null!=n.b)return G8(this.node.rawAttrs,e,t);if(null!=n.shape)return V8(this.node.rawAttrs,e,t);if(null!=n.type)return W8(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return O8(this.node.rawAttrs,e,t);if(null!=n.list.s)return A8(this.node.rawAttrs,e,t);if(null!=n.list.shape)return X8(this.node.rawAttrs,e,t);if(null!=n.list.b)return D8(this.node.rawAttrs,e,t);if(null!=n.list.type)return $8(this.node.rawAttrs,e,t)}return t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K8=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:vi,abs:Cl,acos:El,acosh:Ml,add:xl,addN:q2,all:zl,any:$l,argMax:Vl,argMin:Al,asin:Dl,asinh:Kl,atan:_l,atan2:Hl,atanh:Yl,avgPool:yu,avgPool3d:wu,basicLSTMCell:t3,batchNorm:$u,batchNorm2d:Vu,batchNorm3d:Au,batchNorm4d:Du,batchToSpaceND:Lu,bincount:Ku,bitwiseAnd:s3,booleanMaskAsync:N9,broadcastArgs:r3,broadcastTo:_u,buffer:dl,cast:pl,ceil:Hu,clipByValue:ju,clone:fl,complex:Si,concat:ku,concat1d:Ju,concat2d:ec,concat3d:nc,concat4d:ac,conv1d:lc,conv2d:ic,conv2dTranspose:hc,conv3d:mc,conv3dTranspose:yc,cos:wc,cosh:kc,cosineWindow:Cf,cumprod:Sc,cumsum:Nc,denseBincount:Rc,depthToSpace:Gc,depthwiseConv2d:Lc,diag:o3,dilation2d:Wc,div:Il,divNoNan:Bc,dot:Uc,dropout:Tf,einsum:jc,elu:Jc,enclosingPowerOfTwo:Nf,ensureShape:u3,equal:Xc,erf:ed,euclideanNorm:Nd,exp:Rd,expandDims:Gd,expm1:Ld,eye:Fd,fft:Wm,fill:Uu,floor:Od,floorDiv:vl,fused:X9,gather:Xd,gatherND:$9,greater:Zd,greaterEqual:Pd,ifft:Fm,imag:Bd,image:Mb,inTopKAsync:V9,irfft:Om,isFinite:Ud,isInf:jd,isNaN:Jd,leakyRelu:eh,less:nh,lessEqual:ah,linalg:Lb,linspace:c3,localResponseNormalization:ih,log:lh,log1p:ch,logSigmoid:Ih,logSoftmax:Ch,logSumExp:Eh,logicalAnd:Mh,logicalNot:zh,logicalOr:$h,logicalXor:Vh,losses:zb,lowerBound:m3,matMul:Su,max:cd,maxPool:Ah,maxPool3d:Dh,maxPoolWithArgmax:g3,maximum:Kh,mean:_h,meshgrid:b3,min:hd,minimum:Yh,mirrorPad:Qh,mod:qh,moments:tp,movingAverage:R9,mul:Tl,multiRNNCell:x3,multinomial:v3,neg:xh,norm:Sd,notEqual:sp,oneHot:rp,ones:Hh,onesLike:op,op:ki,outerProduct:I3,pad:up,pad1d:T3,pad2d:C3,pad3d:E3,pad4d:M3,pool:fp,pow:md,prelu:bp,print:gl,prod:xp,raggedGather:z3,raggedRange:$3,raggedTensorToTensor:V3,rand:A3,randomGamma:n9,randomNormal:Yp,randomStandardNormal:a9,randomUniform:Qp,randomUniformInt:i9,range:Jp,real:em,reciprocal:nm,relu:am,relu6:im,reshape:gu,reverse:lm,reverse1d:l9,reverse2d:c9,reverse3d:h9,reverse4d:m9,rfft:Zm,round:cm,rsqrt:hm,scalar:fd,scatterND:G9,searchSorted:p3,selu:mm,separableConv2d:gm,setdiff1dAsync:g9,sigmoid:Nu,sign:ym,signal:Gb,sin:wm,sinh:km,slice:Ru,slice1d:Sm,slice2d:Nm,slice3d:Rm,slice4d:Gm,softmax:Lm,softplus:vh,spaceToBatchND:dp,sparse:Wb,sparseToDense:z9,spectral:Eb,split:Xm,sqrt:bd,square:xd,squaredDifference:Pm,squeeze:Bm,stack:Um,step:jm,stridedSlice:Jm,string:$b,sub:Th,sum:vd,tan:ef,tanh:Gu,tensor:Ni,tensor1d:tf,tensor2d:nf,tensor3d:sf,tensor4d:b9,tensor5d:y9,tensor6d:x9,tensorScatterUpdate:v9,tile:Wd,topk:cf,transpose:kf,truncatedNormal:hf,unique:mf,unsortedSegmentSum:gf,unstack:yf,upperBound:k9,variable:xf,where:Zc,whereAsync:S9,zeros:Bh,zerosLike:Pc},Symbol.toStringTag,{value:"Module"})),P8=(e,t,n,s=K8)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(W7("a",e,t,n),W7("b",e,t,n))];case"AddN":return[s.addN(W7("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(W7("a",e,t,n),W7("b",e,t,n))];case"Mul":return[s.mul(W7("a",e,t,n),W7("b",e,t,n))];case"RealDiv":case"Div":return[s.div(W7("a",e,t,n),W7("b",e,t,n))];case"DivNoNan":return[s.divNoNan(W7("a",e,t,n),W7("b",e,t,n))];case"FloorDiv":return[s.floorDiv(W7("a",e,t,n),W7("b",e,t,n))];case"Sub":return[s.sub(W7("a",e,t,n),W7("b",e,t,n))];case"Minimum":return[s.minimum(W7("a",e,t,n),W7("b",e,t,n))];case"Maximum":return[s.maximum(W7("a",e,t,n),W7("b",e,t,n))];case"Pow":return[s.pow(W7("a",e,t,n),W7("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(W7("a",e,t,n),W7("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},_8=(e,t,n,s=K8)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(W7("x",e,t,n))];case"Acos":return[s.acos(W7("x",e,t,n))];case"Acosh":return[s.acosh(W7("x",e,t,n))];case"Asin":return[s.asin(W7("x",e,t,n))];case"Asinh":return[s.asinh(W7("x",e,t,n))];case"Atan":return[s.atan(W7("x",e,t,n))];case"Atan2":return[s.atan2(W7("x",e,t,n),W7("y",e,t,n))];case"Atanh":return[s.atanh(W7("x",e,t,n))];case"Ceil":return[s.ceil(W7("x",e,t,n))];case"Complex":return[s.complex(W7("real",e,t,n),W7("imag",e,t,n))];case"Cos":return[s.cos(W7("x",e,t,n))];case"Cosh":return[s.cosh(W7("x",e,t,n))];case"Elu":return[s.elu(W7("x",e,t,n))];case"Erf":return[s.erf(W7("x",e,t,n))];case"Exp":return[s.exp(W7("x",e,t,n))];case"Expm1":return[s.expm1(W7("x",e,t,n))];case"Floor":return[s.floor(W7("x",e,t,n))];case"Log":return[s.log(W7("x",e,t,n))];case"Log1p":return[s.log1p(W7("x",e,t,n))];case"Imag":return[s.imag(W7("x",e,t,n))];case"Neg":return[s.neg(W7("x",e,t,n))];case"Reciprocal":return[s.reciprocal(W7("x",e,t,n))];case"Real":return[s.real(W7("x",e,t,n))];case"Relu":return[s.relu(W7("x",e,t,n))];case"Round":return[s.round(W7("x",e,t,n))];case"Selu":return[s.selu(W7("x",e,t,n))];case"Sigmoid":return[s.sigmoid(W7("x",e,t,n))];case"Sin":return[s.sin(W7("x",e,t,n))];case"Sign":return[s.sign(W7("x",e,t,n))];case"Sinh":return[s.sinh(W7("x",e,t,n))];case"Softplus":return[s.softplus(W7("x",e,t,n))];case"Sqrt":return[s.sqrt(W7("x",e,t,n))];case"Square":return[s.square(W7("x",e,t,n))];case"Tanh":return[s.tanh(W7("x",e,t,n))];case"Tan":return[s.tan(W7("x",e,t,n))];case"ClipByValue":return[s.clipByValue(W7("x",e,t,n),W7("clipValueMin",e,t,n),W7("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(W7("x",e,t,n))];case"Rsqrt":return[s.rsqrt($7(e.inputNames[0],t,n))];case"LeakyRelu":return[s.leakyRelu(W7("x",e,t,n),W7("alpha",e,t,n))];case"Prelu":return[s.prelu(W7("x",e,t,n),W7("alpha",e,t,n))];case"IsNan":return[s.isNaN($7(e.inputNames[0],t,n))];case"IsInf":return[s.isInf($7(e.inputNames[0],t,n))];case"IsFinite":return[s.isFinite($7(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function B8(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){$(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let s=0;s<e.length;s++){const a=e[s],r=t[s];$(a<0||r<0||a===r,(()=>n+` Shapes ${e} and ${t} must match`))}}}function H8(e){return!("number"==typeof e||e.some((e=>e<0)))}function U8(e,t,n){let s=Y8(e,n);const a=!H8(s);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&t.forEach((e=>{s=Y8(e.shape,s)})),!H8(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Y8(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let s=0;s<e.length;++s){const a=e[s],r=t[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=a>=0?a:r}return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j8{constructor(e,t,n,s,a,r,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=a,this.dynamicSize=r,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=fd(0),Xi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),B8(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Xi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ni([],[0].concat(this.elementShape));const n=this.readMany(e);return B8(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Um(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ni([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const n=this.readMany(t);return B8(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ku(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,yf(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,r=[];Oi((()=>{t=gu(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],a];r[n]=gu(Ru(t,i,o),this.elementShape)}return r}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,r)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q8{get id(){return this.idTensor.id}constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);B8(t,e.shape,"TensorList shape mismatch: "),Xi(e)})),this.idTensor=fd(0),this.maxNumElements=s,Xi(this.idTensor)}copy(){return new Q8([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);B8(e,this.elementShape,"TensorList shape mismatch: ");const s=U8(this.elementShape,this.tensors,e);return Oi((()=>{const e=this.tensors.map((e=>gu(e,s)));return Um(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=U8(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,B8(s.shape,e,"TensorList shape mismatch: "),gu(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(B8(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Xi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Q8([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);B8(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=U8(this.elementShape,this.tensors,t);return gu(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);B8(this.elementShape,t.shape,"TensorList shape mismatch: "),Xi(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);B8(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=U8(this.elementShape,this.tensors,n);return 0===e.length?Ni([],[0].concat(s)):Oi((()=>{const t=e.map((e=>gu(this.tensors[e],s)));return Um(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);B8(this.elementShape,t,"TensorList shape mismatch: ");const n=U8(this.elementShape,this.tensors,t);return 0===this.size()?Ni([],[0].concat(n)):Oi((()=>{const e=this.tensors.map((e=>gu(e,n)));return ku(e,0)}))}}function J8(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);const a=e.shape.slice(1);B8(a,t,"TensorList shape mismatch: ");const r=yf(e);return new Q8(r,t,s)}function q8(e,t,n,s){return new Q8([],e,t,s)}function e6(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=s&&-1!==s&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new Q8([],n,e.dtype,s),i=yf(e,0);return t.forEach(((e,t)=>{r.setItem(e,i[t])})),r}function t6(e,t,n){let s=0;const a=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const r=e.shape.slice(1),i=Y8(r,n),o=0===s?0:e.size/s,l=Oi((()=>{const n=[];e=gu(e,[1,s,o]);for(let s=0;s<t.length;++s){const r=[0,0===s?0:a[s-1],0],l=[1,t[s],o];n[s]=gu(Ru(e,r,l),i)}return e.dispose(),n})),u=new Q8([],n,e.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=W7("thenBranch",e,t,n),a=W7("elseBranch",e,t,n),r=W7("cond",e,t,n),i=W7("args",e,t,n);return(await r.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=W7("body",e,t,n),a=W7("cond",e,t,n),r=W7("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(r,n.tensorArrayMap,n.tensorListMap),o=r.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=r;for(;l[0];){const e=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));const r=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await r[0].data(),r.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":{const s=W7("pred",e,t,n);return[D7(s)]}case"Switch":{const s=W7("pred",e,t,n);let a=W7("data",e,t,n);return a.kept||(a=D7(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==$7(e,t,n)));if(s){const e=$7(s,t,n);return[D7(e)]}return}case"Enter":{const s=W7("frameName",e,t,n),a=W7("tensor",e,t,n);return n.enterFrame(s),[D7(a)]}case"Exit":{const s=W7("tensor",e,t,n);return n.exitFrame(),[D7(s)]}case"NextIteration":{const s=W7("tensor",e,t,n);return n.nextIteration(),[D7(s)]}case"TensorArrayV3":{const s=W7("size",e,t,n),a=W7("dtype",e,t,n),r=W7("elementShape",e,t,n),i=W7("dynamicSize",e,t,n),o=W7("clearAfterRead",e,t,n),l=W7("identicalElementShapes",e,t,n),u=W7("name",e,t,n),c=new j8(u,a,s,r,l,i,o);return n.addTensorArray(c),[c.idTensor,fd(1)]}case"TensorArrayWriteV3":{const s=W7("tensorArrayId",e,t,n),a=W7("index",e,t,n),r=W7("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=W7("tensorArrayId",e,t,n),a=W7("index",e,t,n);return[n.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=W7("tensorArrayId",e,t,n),a=W7("indices",e,t,n),r=W7("dtype",e,t,n);return[n.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=W7("tensorArrayId",e,t,n),a=W7("indices",e,t,n),r=W7("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=W7("tensorArrayId",e,t,n),a=n.getTensorArray(s.id),r=W7("dtype",e,t,n);return[a.concat(r)]}case"TensorArraySplitV3":{const s=W7("tensorArrayId",e,t,n),a=W7("tensor",e,t,n),r=W7("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=W7("tensorArrayId",e,t,n),a=n.getTensorArray(s.id);return[fd(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=W7("tensorArrayId",e,t,n),a=n.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=W7("tensorListId",e,t,n),a=W7("index",e,t,n),r=W7("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=W7("tensorListId",e,t,n),a=W7("index",e,t,n),r=W7("elementShape",e,t,n),i=W7("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=W7("indices",e,t,n),a=W7("tensor",e,t,n),r=W7("elementShape",e,t,n),i=W7("numElements",e,t,n),o=e6(a,s,r,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=W7("elementShape",e,t,n),a=W7("elementDType",e,t,n);let r;r="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=W7(r,e,t,n),o="TensorListReserve"===e.op?-1:i,l=q8(s,a,i,o);return n.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=W7("tensorListId",e,t,n),a=W7("indices",e,t,n),r=W7("elementShape",e,t,n),i=W7("elementDType",e,t,n);return[n.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=W7("tensorListId",e,t,n),a=W7("elementShape",e,t,n),r=W7("elementDType",e,t,n),i=W7("numElements",e,t,n);return[n.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=W7("tensor",e,t,n),a=W7("elementShape",e,t,n),r=W7("elementDType",e,t,n),i=J8(s,a,r);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=W7("tensorListId",e,t,n),a=n.getTensorList(s.id),r=W7("dtype",e,t,n),i=W7("elementShape",e,t,n);return[a.concat(r,i)]}case"TensorListPushBack":{const s=W7("tensorListId",e,t,n),a=W7("tensor",e,t,n),r=n.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=W7("tensorListId",e,t,n),a=W7("elementShape",e,t,n),r=W7("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=W7("tensor",e,t,n),a=W7("elementShape",e,t,n),r=W7("lengths",e,t,n),i=t6(s,r,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=W7("tensorListId",e,t,n),a=n.getTensorList(s.id);return[fd(a.size(),"int32")]}case"TensorListResize":{const s=W7("tensorListId",e,t,n),a=W7("size",e,t,n),r=n.getTensorList(s.id).resize(a);return n.addTensorList(r),[r.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(e,t,n){const[s,a]=W7("fusedOps",e,t,n),r="biasadd"===s,i=!r,o="prelu"===a,l="fusedbatchnorm"===s,u=W7("numArgs",e,t,n);if(r){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&r&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=W7("strides",e,t,n),d=X7(e,t,n),h=W7("dataFormat",e,t,n).toUpperCase(),p=W7("dilations",e,t,n);let[m,f]=W7("args",e,t,n);i&&(f=m,m=void 0);const g=W7("leakyreluAlpha",e,t,n);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:m,preluArg:f,activationFunc:a,leakyreluAlpha:g}}const a6=(e,t,n,s=K8)=>{switch(e.op){case"Conv1D":{const a=W7("stride",e,t,n),r=W7("pad",e,t,n),i=W7("dataFormat",e,t,n).toUpperCase(),o=W7("dilation",e,t,n);return[s.conv1d(W7("x",e,t,n),W7("filter",e,t,n),a,r,i,o)]}case"Conv2D":{const a=W7("strides",e,t,n),r=X7(e,t,n),i=W7("dataFormat",e,t,n).toUpperCase(),o=W7("dilations",e,t,n);return[s.conv2d(W7("x",e,t,n),W7("filter",e,t,n),[a[1],a[2]],r,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=s6(e,t,n);return[s.fused.conv2d({x:W7("x",e,t,n),filter:W7("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=s6(e,t,n);return[s.fused.depthwiseConv2d({x:W7("x",e,t,n),filter:W7("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=W7("outputShape",e,t,n),r=W7("strides",e,t,n),i=X7(e,t,n);return[s.conv2dTranspose(W7("x",e,t,n),W7("filter",e,t,n),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=W7("strides",e,t,n),r=X7(e,t,n),i=W7("dilations",e,t,n),o=W7("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(W7("input",e,t,n),W7("filter",e,t,n),[a[1],a[2]],r,o,[i[1],i[2]])]}case"Conv3D":{const a=W7("strides",e,t,n),r=W7("pad",e,t,n),i=W7("dataFormat",e,t,n).toUpperCase(),o=W7("dilations",e,t,n);return[s.conv3d(W7("x",e,t,n),W7("filter",e,t,n),[a[1],a[2],a[3]],r,i,[o[1],o[2],o[3]])]}case"AvgPool":{const a=W7("strides",e,t,n),r=W7("pad",e,t,n),i=W7("kernelSize",e,t,n);return[s.avgPool(W7("x",e,t,n),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=W7("strides",e,t,n),r=W7("pad",e,t,n),i=W7("kernelSize",e,t,n);return[s.maxPool(W7("x",e,t,n),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=W7("strides",e,t,n),r=W7("pad",e,t,n),i=W7("kernelSize",e,t,n),o=W7("includeBatchInIndex",e,t,n),{result:l,indexes:u}=s.maxPoolWithArgmax(W7("x",e,t,n),[i[1],i[2]],[a[1],a[2]],r,o);return[l,u]}case"AvgPool3D":{const a=W7("strides",e,t,n),r=W7("pad",e,t,n),i=W7("kernelSize",e,t,n);return[s.avgPool3d(W7("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=W7("strides",e,t,n),r=W7("pad",e,t,n),i=W7("kernelSize",e,t,n);return[s.maxPool3d(W7("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=W7("strides",e,t,n),r=W7("pad",e,t,n),i=W7("dilations",e,t,n),o=a[1],l=a[2],u=i[1],c=i[2];return[s.dilation2d(W7("x",e,t,n),W7("filter",e,t,n),[o,l],r,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},r6=(e,t,n,s=K8)=>{switch(e.op){case"Fill":{const a=W7("shape",e,t,n),r=W7("dtype",e,t,n),i=W7("value",e,t,n);return[s.fill(a,i,r)]}case"LinSpace":{const a=W7("start",e,t,n),r=W7("stop",e,t,n),i=W7("num",e,t,n);return[s.linspace(a,r,i)]}case"Multinomial":{const a=W7("logits",e,t,n),r=W7("numSamples",e,t,n),i=W7("seed",e,t,n);return[s.multinomial(a,r,i)]}case"OneHot":{const a=W7("indices",e,t,n),r=W7("depth",e,t,n),i=W7("onValue",e,t,n),o=W7("offValue",e,t,n),l=W7("dtype",e,t,n);return[s.oneHot(a,r,i,o,l)]}case"Ones":return[s.ones(W7("shape",e,t,n),W7("dtype",e,t,n))];case"OnesLike":return[s.onesLike(W7("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(W7("shape",e,t,n),W7("dtype",e,t,n),W7("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(W7("shape",e,t,n),W7("minval",e,t,n),W7("maxval",e,t,n),W7("dtype",e,t,n))];case"RandomUniformInt":return[s.randomUniformInt(W7("shape",e,t,n),W7("minval",e,t,n),W7("maxval",e,t,n),W7("seed",e,t,n))];case"Range":{const a=W7("start",e,t,n),r=W7("stop",e,t,n),i=W7("step",e,t,n);return[s.range(a,r,i,W7("dtype",e,t,n))]}case"TruncatedNormal":{const a=W7("shape",e,t,n),r=W7("mean",e,t,n),i=W7("stdDev",e,t,n),o=W7("seed",e,t,n);return[s.truncatedNormal(a,r,i,W7("dtype",e,t,n),o)]}case"Zeros":return[s.zeros(W7("shape",e,t,n),W7("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(W7("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i6(e,t,n){const s=W7("boxes",e,t,n),a=W7("scores",e,t,n),r=W7("maxOutputSize",e,t,n),i=W7("iouThreshold",e,t,n),o=W7("scoreThreshold",e,t,n),l=W7("softNmsSigma",e,t,n);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}}const o6=async(e,t,n,s,a=K8)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=i6(e,t,n),c=await a.image.nonMaxSuppressionWithScoreAsync(s,r,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=i6(e,t,n),u=W7("padToMaxOutputSize",e,t,n),c=await a.image.nonMaxSuppressionPaddedAsync(s,r,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=i6(e,t,n);return[await a.image.nonMaxSuppressionAsync(s,r,i,o,l)]}case"Where":{const s=a.cast(W7("condition",e,t,n),"bool"),r=[await a.whereAsync(s)];return s.dispose(),r}case"ListDiff":return a.setdiff1dAsync(W7("x",e,t,n),W7("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},l6=(e,t,n,s=K8)=>{switch(e.op){case"LowerBound":{const a=W7("sortedSequence",e,t,n),r=W7("values",e,t,n);return[s.lowerBound(a,r)]}case"TopKV2":{const a=W7("x",e,t,n),r=W7("k",e,t,n),i=W7("sorted",e,t,n),o=s.topk(a,r,i);return[o.values,o.indices]}case"UpperBound":{const a=W7("sortedSequence",e,t,n),r=W7("values",e,t,n);return[s.upperBound(a,r)]}case"Unique":{const a=W7("x",e,t,n),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=W7("x",e,t,n),r=W7("axis",e,t,n),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},u6=(e,t,n,s=K8)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=W7("default",e,t,n);return[$7(e.name,t,n)||a];case"Placeholder":return[$7(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const s=W7("x",e,t,n);return[D7(s)]}case"IdentityN":return W7("x",e,t,n).map((e=>D7(e)));case"Snapshot":const r=W7("x",e,t,n);return[D7(r)];case"Shape":return[s.tensor1d(W7("x",e,t,n).shape,"int32")];case"ShapeN":return W7("x",e,t,n).map((e=>s.tensor1d(e.shape)));case"Size":return[s.scalar(W7("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(W7("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=W7("x",e,t,n),o=W7("data",e,t,n),l=W7("message",e,t,n),u=W7("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class c6{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=fd(0),this.tensorMap=new Map,Xi(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return fd(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Oi((()=>{const e=yf(t),s=n.length,a=e.length;$(s===a,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`));for(let t=0;t<s;t++){const s=n[t],a=e[t];Xi(a),this.tensorMap.set(s,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Oi((()=>{const e=[];for(let s=0;s<n.length;s++){const a=n[s],r=this.findWithDefault(a,t);e.push(r)}return Um(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(e.name);if(null!=a)return[a];{const a=W7("keyDType",e,t,n),r=W7("valueDType",e,t,n),i=new c6(a,r);return s.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=W7("tableHandle",e,t,n,s),r=W7("keys",e,t,n),i=W7("values",e,t,n);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=W7("tableHandle",e,t,n,s),r=W7("keys",e,t,n),i=W7("defaultValue",e,t,n);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=W7("tableHandle",e,t,n,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},h6=(e,t,n,s=K8)=>{switch(e.op){case"ResizeBilinear":{const a=W7("images",e,t,n),r=W7("size",e,t,n),i=W7("alignCorners",e,t,n),o=W7("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(a,[r[0],r[1]],i,o)]}case"ResizeNearestNeighbor":{const a=W7("images",e,t,n),r=W7("size",e,t,n),i=W7("alignCorners",e,t,n),o=W7("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,o)]}case"CropAndResize":{const a=W7("image",e,t,n),r=W7("boxes",e,t,n),i=W7("boxInd",e,t,n),o=W7("cropSize",e,t,n),l=W7("method",e,t,n),u=W7("extrapolationValue",e,t,n);return[s.image.cropAndResize(a,r,i,o,l,u)]}case"ImageProjectiveTransformV3":{const a=W7("images",e,t,n),r=W7("transforms",e,t,n),i=W7("outputShape",e,t,n),o=W7("fillValue",e,t,n),l=W7("interpolation",e,t,n),u=W7("fillMode",e,t,n);return[s.image.transform(a,r,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},p6=(e,t,n,s=K8)=>{switch(e.op){case"Equal":return[s.equal(W7("a",e,t,n),W7("b",e,t,n))];case"NotEqual":return[s.notEqual(W7("a",e,t,n),W7("b",e,t,n))];case"Greater":return[s.greater(W7("a",e,t,n),W7("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(W7("a",e,t,n),W7("b",e,t,n))];case"Less":return[s.less(W7("a",e,t,n),W7("b",e,t,n))];case"LessEqual":return[s.lessEqual(W7("a",e,t,n),W7("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(W7("a",e,t,n),W7("b",e,t,n))];case"LogicalNot":return[s.logicalNot(W7("a",e,t,n))];case"LogicalOr":return[s.logicalOr(W7("a",e,t,n),W7("b",e,t,n))];case"Select":case"SelectV2":return[s.where(W7("condition",e,t,n),W7("a",e,t,n),W7("b",e,t,n))];case"BitwiseAnd":return[s.bitwiseAnd(W7("a",e,t,n),W7("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},m6=(e,t,n,s=K8)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(W7("a",e,t,n),W7("b",e,t,n),W7("transposeA",e,t,n),W7("transposeB",e,t,n))];case"Einsum":return[s.einsum(W7("equation",e,t,n),...W7("tensors",e,t,n))];case"Transpose":return[s.transpose(W7("x",e,t,n),W7("perm",e,t,n))];case"_FusedMatMul":const[a,r]=W7("fusedOps",e,t,n),i="biasadd"===a,o="prelu"===r,l=W7("numArgs",e,t,n),u=W7("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=W7("args",e,t,n);return[s.fused.matMul({a:W7("a",e,t,n),b:W7("b",e,t,n),transposeA:W7("transposeA",e,t,n),transposeB:W7("transposeB",e,t,n),bias:c,activation:r,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[s.linalg.bandPart(W7("a",e,t,n),W7("numLower",e,t,n),W7("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},f6=(e,t,n,s=K8)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(W7("x",e,t,n),W7("axis",e,t,n),W7("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(W7("x",e,t,n),W7("mean",e,t,n),W7("variance",e,t,n),W7("offset",e,t,n),W7("scale",e,t,n),W7("epsilon",e,t,n))];case"FusedBatchNormV3":return[s.batchNorm(W7("x",e,t,n),W7("mean",e,t,n),W7("variance",e,t,n),W7("offset",e,t,n),W7("scale",e,t,n),W7("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(W7("x",e,t,n),W7("radius",e,t,n),W7("bias",e,t,n),W7("alpha",e,t,n),W7("beta",e,t,n))];case"Softmax":return[s.softmax(W7("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(W7("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},g6=(e,t,n,s=K8)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(W7("paramsNestedSplits",e,t,n),W7("paramsDenseValues",e,t,n),W7("indices",e,t,n),W7("outputRaggedRank",e,t,n));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(W7("starts",e,t,n),W7("limits",e,t,n),W7("splits",e,t,n));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(W7("shape",e,t,n),W7("values",e,t,n),W7("defaultValue",e,t,n),W7("rowPartitionTensors",e,t,n),W7("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},b6=(e,t,n,s=K8)=>{switch(e.op){case"Max":{const a=W7("axis",e,t,n),r=W7("keepDims",e,t,n);return[s.max(W7("x",e,t,n),a,r)]}case"Mean":{const a=W7("axis",e,t,n),r=W7("keepDims",e,t,n);return[s.mean(W7("x",e,t,n),a,r)]}case"Min":{const a=W7("axis",e,t,n),r=W7("keepDims",e,t,n);return[s.min(W7("x",e,t,n),a,r)]}case"Sum":{const a=W7("axis",e,t,n),r=W7("keepDims",e,t,n);return[s.sum(W7("x",e,t,n),a,r)]}case"All":{const a=W7("axis",e,t,n),r=W7("keepDims",e,t,n);return[s.all(W7("x",e,t,n),a,r)]}case"Any":{const a=W7("axis",e,t,n),r=W7("keepDims",e,t,n);return[s.any(W7("x",e,t,n),a,r)]}case"ArgMax":{const a=W7("axis",e,t,n);return[s.argMax(W7("x",e,t,n),a)]}case"ArgMin":{const a=W7("axis",e,t,n);return[s.argMin(W7("x",e,t,n),a)]}case"Prod":{const a=W7("axis",e,t,n),r=W7("keepDims",e,t,n);return[s.prod(W7("x",e,t,n),a,r)]}case"Cumprod":{const a=W7("axis",e,t,n),r=W7("exclusive",e,t,n),i=W7("reverse",e,t,n);return[s.cumprod(W7("x",e,t,n),a,r,i)]}case"Cumsum":{const a=W7("axis",e,t,n),r=W7("exclusive",e,t,n),i=W7("reverse",e,t,n);return[s.cumsum(W7("x",e,t,n),a,r,i)]}case"Bincount":const a=W7("x",e,t,n),r=W7("weights",e,t,n),i=W7("size",e,t,n);return[s.bincount(a,r,i)];case"DenseBincount":{const a=W7("x",e,t,n),r=W7("weights",e,t,n),i=W7("size",e,t,n),o=W7("binaryOutput",e,t,n);return[s.denseBincount(a,r,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},y6=(e,t,n,s=K8)=>{switch(e.op){case"ConcatV2":case"Concat":{const a=W7("n",e,t,n),r=W7("axis",e,t,n);let i=W7("tensors",e,t,n);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=W7("x",e,t,n),r=W7("indices",e,t,n);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=W7("axis",e,t,n),r=W7("batchDims",e,t,n),i=W7("x",e,t,n),o=W7("indices",e,t,n);return[s.gather(i,s.cast(o,"int32"),a,r)]}case"Reverse":{const a=W7("dims",e,t,n),r=[];for(let e=0;e<a.length;e++)a[e]&&r.push(e);const i=W7("x",e,t,n);return[s.reverse(i,r)]}case"ReverseV2":{const a=W7("axis",e,t,n),r=W7("x",e,t,n);return[s.reverse(r,a)]}case"Slice":{const a=W7("begin",e,t,n),r=W7("size",e,t,n);return[s.slice(W7("x",e,t,n),a,r)]}case"StridedSlice":{const a=W7("begin",e,t,n),r=W7("end",e,t,n),i=W7("strides",e,t,n),o=W7("beginMask",e,t,n),l=W7("endMask",e,t,n),u=W7("ellipsisMask",e,t,n),c=W7("newAxisMask",e,t,n),d=W7("shrinkAxisMask",e,t,n),h=W7("x",e,t,n);return[s.stridedSlice(h,a,r,i,o,l,u,c,d)]}case"Pack":return Oi((()=>{const a=W7("axis",e,t,n),r=W7("tensors",e,t,n),i=r[0].shape,o=s.squeeze(r[0]).shape,l=r.map((e=>{const t=D(e.shape,i);if(!t&&!D(s.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:s.reshape(e,i)}));return[s.stack(l,a)]}));case"Unpack":{const a=W7("axis",e,t,n),r=W7("tensor",e,t,n);return s.unstack(r,a)}case"Tile":{const a=W7("reps",e,t,n);return[s.tile(W7("x",e,t,n),a)]}case"Split":case"SplitV":{const a=W7("axis",e,t,n),r=W7("numOrSizeSplits",e,t,n),i=W7("x",e,t,n);return s.split(i,r,a)}case"ScatterNd":{const a=W7("indices",e,t,n),r=W7("values",e,t,n),i=W7("shape",e,t,n);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=W7("x",e,t,n),r=W7("indices",e,t,n);return[s.gatherND(a,r)]}case"SparseToDense":{const a=W7("sparseIndices",e,t,n),r=W7("outputShape",e,t,n),i=W7("sparseValues",e,t,n),o=W7("defaultValue",e,t,n);return[s.sparseToDense(a,i,r,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}case"TensorScatterUpdate":{const a=W7("indices",e,t,n),r=W7("values",e,t,n),i=W7("tensor",e,t,n);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},x6=(e,t,n,s=K8)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(W7("indices",e,t,n),W7("values",e,t,n),W7("denseShape",e,t,n),W7("defaultValue",e,t,n));return[a,r,i,o]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(W7("inputIndices",e,t,n),W7("inputShape",e,t,n),W7("newShape",e,t,n));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(W7("data",e,t,n),W7("indices",e,t,n),W7("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(W7("data",e,t,n),W7("indices",e,t,n),W7("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},w6=(e,t,n,s=K8)=>{switch(e.op){case"FFT":return[s.fft(W7("x",e,t,n))];case"IFFT":return[s.ifft(W7("x",e,t,n))];case"RFFT":return[s.rfft(W7("x",e,t,n))];case"IRFFT":return[s.irfft(W7("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},v6=(e,t,n,s=K8)=>{switch(e.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(W7("input",e,t,n),W7("pattern",e,t,n),W7("rewrite",e,t,n),W7("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(W7("data",e,t,n),W7("dataSplits",e,t,n),W7("separator",e,t,n),W7("nGramWidths",e,t,n),W7("leftPad",e,t,n),W7("rightPad",e,t,n),W7("padWidth",e,t,n),W7("preserveShortSequences",e,t,n));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(W7("input",e,t,n),W7("delimiter",e,t,n),W7("skipEmpty",e,t,n));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(W7("input",e,t,n),W7("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},k6=(e,t,n,s=K8)=>{switch(e.op){case"Cast":return[s.cast(W7("x",e,t,n),W7("dtype",e,t,n))];case"ExpandDims":{const a=W7("axis",e,t,n);return[s.expandDims(W7("x",e,t,n),a)]}case"Squeeze":{const a=W7("axis",e,t,n);return[s.squeeze(W7("x",e,t,n),a)]}case"Reshape":return[s.reshape(W7("x",e,t,n),W7("shape",e,t,n))];case"EnsureShape":return[s.ensureShape(W7("x",e,t,n),W7("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(W7("x",e,t,n),W7("padding",e,t,n),W7("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(W7("x",e,t,n),W7("padding",e,t,n),W7("constantValue",e,t,n))];case"SpaceToBatchND":{const a=W7("blockShape",e,t,n),r=W7("paddings",e,t,n);return[s.spaceToBatchND(W7("x",e,t,n),a,r)]}case"BatchToSpaceND":{const a=W7("blockShape",e,t,n),r=W7("crops",e,t,n);return[s.batchToSpaceND(W7("x",e,t,n),a,r)]}case"DepthToSpace":{const a=W7("blockSize",e,t,n),r=W7("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(W7("x",e,t,n),a,r)]}case"BroadcastTo":return[s.broadcastTo(W7("x",e,t,n),W7("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(W7("s0",e,t,n),W7("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function I6(e,t,n,s,a=Oi){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>P8(e,t,n)));case"basic_math":return a((()=>_8(e,t,n)));case"control":return n6(e,t,n);case"convolution":return a((()=>a6(e,t,n)));case"creation":return a((()=>r6(e,t,n)));case"dynamic":return o6(e,t,n);case"evaluation":return a((()=>l6(e,t,n)));case"image":return a((()=>h6(e,t,n)));case"graph":return a((()=>u6(e,t,n)));case"logical":return a((()=>p6(e,t,n)));case"matrices":return a((()=>m6(e,t,n)));case"normalization":return a((()=>f6(e,t,n)));case"ragged":return a((()=>g6(e,t,n)));case"reduction":return a((()=>b6(e,t,n)));case"slice_join":return a((()=>y6(e,t,n)));case"sparse":return a((()=>x6(e,t,n)));case"spectral":return a((()=>w6(e,t,n)));case"string":return a((()=>v6(e,t,n)));case"transformation":return a((()=>k6(e,t,n)));case"hash_table":return d6(e,t,n,s);case"custom":const r=L7(e.op);if(r&&r.customExecutor)return r.customExecutor(new Z8(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return we(r)?r.then((e=>[].concat(e))):[].concat(r)}class S6{constructor(e={},t={},n={},s={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(e,t,n,s){const a=new Set,r=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>A7(e)[0])));s=s||[];const c=new Set(s.map((e=>A7(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();if((W6(e)||$6(e)||F6(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&!u.has(e.name)&&!c.has(e.name)){if(0===e.inputs.length){r.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:o}}function N6(e,t){const{usedNodes:n,inputs:s}=t,a=Object.keys(s).map((e=>A7(e)[0])).map((t=>e.nodes[t])),r=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...a,...e.weights,...r]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),d={};for(const g of u){d[g.name]=d[g.name]||0;for(const e of g.children)i(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter((([,e])=>0===e)).map((([e])=>e)),p=[...h];for(;h.length>0;){const e=h.pop(),t=c.get(e);for(const n of t.children.filter(i))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const m=p.map((e=>c.get(e))),f=C6(m,l);return E6(f,l),f}function C6(e,t){const n=new Map(e.map((e=>[e.name,e]))),s=t.map((e=>e.name)),a=new Set(s);for(;s.length>0;){const e=s.pop(),t=n.get(e);for(const r of t.children)!n.has(r.name)||a.has(r.name)||(a.add(r.name),s.push(r.name))}return e.filter((e=>a.has(e.name)))}class R6 extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function E6(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),s=new Set(t.map((e=>e.name))),a=e=>s.has("string"==typeof e?e:e.name),r=new Set(e.map((e=>e.name))),i=e=>r.has("string"==typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new R6(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new R6(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!a(o))for(const e of o.inputs){if(!n.has(e.name))throw new R6(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new R6(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}function G6(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,s=e.map(((e,t)=>W6(e)?n:t)),a=e=>{const n=s[t.get(e.name)];return n??-1},r=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),s[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=r[o];if(t===n)continue;const s=e[o],a=e[t];i.has(a.name)||i.set(a.name,[]),i.get(a.name).push(s)}return i}const M6=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),L6=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),z6=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function W6(e){return M6.has(e.op)}function $6(e){return L6.has(e.op)}function F6(e){return z6.has(e.op)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V6{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new V6(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const n=T6(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:a,syncInputs:r}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${r}]`);if(s.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${s}]`)}const i=N6(this.graph,n),o=G6(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Xi(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[A7(e)[0]])),a=t.map((e=>A7(e)[0])),r=new Set(a);let i=a.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(s,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Ne().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const u={},c={};return Oi((()=>{const n=new S6(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),s=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[a,r]=A7(t,n),i=[];i[r]=e[t],s[a]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(i))}));const a=this.getFrozenTensorIds(s),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(s[e.name])continue;const t=I6(e,s,n,this._resourceManager);if(we(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);s[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,s,n,a,r,o.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>$7(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,a,r,i){if(!W6(t)&&!r.has(e)){for(const s of n[e])null!=s&&(i[s.id]=(i[s.id]||0)+t.children.length);for(const e of t.inputs){if(W6(e))continue;const t=F7(e.name,n,s);if(null!=t)for(const e of t){if(!e||e.kept||a.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,s,a,r){function i(e){return W6(e)||a.has(e.name)}if(!W6(e)&&null!=r)for(const o of r){if(i(o))continue;const e=F7(o.name,t,n);for(const t of e)!t||t.kept||s.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,s={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ne().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const r=new S6(this.weightMap,s,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,r,t,n),o=t.map((e=>$7(e,i,r))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!c.has(e.id)&&e.dispose()}))})),null==this.parent&&r.dispose(c),o}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const a=Object.keys(e),r=a.map((e=>this.graph.nodes[A7(e)[0]])),i=n.map((e=>A7(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:d,syncInputs:h}=T6(e,l,this.weightMap,this._initNodes),p=[...r,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),m=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=A7(t),a=[];a[s]=e[t],m[n]=a}));const f={},g=this.getFrozenTensorIds(m),b={};for(;p.length>0;){const e=this.processStack(r,p,t,m,b,g,o,f,u);await Promise.all(e)}null==d&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=l.filter((e=>!W6(e)&&!$7(e.name,m,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return m}processStack(e,t,n,s,a,r,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&W7("isConstant",e.node,s,n)&&([c]=V7(e.node.name,n)),null==s[e.node.name]){const d=I6(e.node,s,n,this._resourceManager);c||([c]=V7(e.node.name,n));const h=n.currentContext;we(d)?u.push(d.then((u=>(s[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(c,e.node,s,n,r,i,o),this.processChildNodes(e.node,t,n,s,a,l),u)))):(s[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,e.node,s,n,r,i,o),this.processChildNodes(e.node,t,n,s,a,l))}else this.processChildNodes(e.node,t,n,s,a,l)}return u}processChildNodes(e,t,n,s,a,r){e.children.forEach((e=>{const[i]=V7(e.name,n);a[i]||!r.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!$7(e,s,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!$7(e,s,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=A7(t),a=this.graph.nodes[s];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));$(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&$(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const s={};for(const a in e){const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=r?s[r.name]=e[a]:s[a]=e[a]}return s}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=A7(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=s?s.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=A7(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class O6{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6="?tfjs-format=file",X6="model.json";class D6{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=s5){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new O6}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return we(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await ao(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let s=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(s=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=s,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new V6(N8.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=N8.Instance.transformGraph(e.modelInitializer);this.initializer=new V6(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Fr?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Fr)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const s=n[t];null!=s.resourceId&&(e[t]=this.resourceIdToCapturedInput[s.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce(((t,n)=>{var a,r,i;const o=null===(i=null===(r=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===r?void 0:r[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[s++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let s=0;s<n.length;s++){const a=n[s],r=t[a];this.resourceIdToCapturedInput[r.resourceId]=e[s]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ai(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Z6(e,t={},n=s5){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=P6(e));const s=new D6(e,t,n);return await s.load(),s}function K6(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,s]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!s||!(s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const a=bo(n.weightsManifest),r=mo(n,a,s);t=e5(r)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=e5(e)}const n=new D6(t);return n.load(),n}function P6(e){return e.endsWith("/")||(e+="/"),`${e}${X6}${A6}`
/** @license See the LICENSE file. */}const _6="4.16.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class B6 extends hG{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const H6='"',U6=Symbol("out"),Y6=Symbol("field"),j6=Symbol("quote"),Q6=Symbol("quoteafterquote"),J6=Symbol("quoteinquote");class q6 extends hG{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&$(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if($(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const s of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(s))throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");const t=e.value;return this.parseRow(t,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new B6(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?($(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let a=0;a<this.fullColumnNames.length;a++){const r=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[r]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${r} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o);break;default:l=e}else l=e}i&&i.isLabel?s[r]=l:n[r]=l}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const a=e.length;let r=U6;for(let i=0;i<a;i++)switch(r){case U6:switch(e.charAt(i)){case H6:s=i+1,r=j6;break;case this.delimiter:if(s=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),r=U6;break;default:r=Y6,s=i;break}break;case Y6:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i)),r=U6,s=i+1;break}break;case j6:switch(e.charAt(i)){case H6:r=Q6;break}break;case Q6:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i-1)),r=U6,s=i+1;break;case H6:r=j6;break;default:r=J6;break}break;case J6:switch(e.charAt(i)){case H6:r=j6;break}break}if(r===Q6?n.push(e.substring(s,a-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class eee extends YE{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Ne().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new eee(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(O(t));return n.set(e,n.length-e.length),Ni(n,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class tee extends YE{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=tf([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,a=n+e,r=t+s;this.cropBox=nf([s,n,r,a],[1,4])}else this.cropBox=nf([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Ne().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new tee(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&$("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Sy(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Oi((()=>{const t=Gd(pl(e,"float32"),0);let n;n=Mb.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return gu(n,s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class nee{}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class see extends YE{split(e){return new aee(this,e)}}class aee extends see{constructor(e,t){super(),this.upstream=e,this.impl=new ree(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class ree extends iG{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class iee extends YE{decodeUTF8(){return new oee(this)}}class oee extends see{constructor(e){super(),this.upstream=e,this.impl=new lee(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class lee extends iG{constructor(e){if(super(),this.upstream=e,Ne().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=require("string_decoder");this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ne().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class uee extends iee{constructor(e,t={}){super(),this.file=e,this.options=t,$(e instanceof Uint8Array||!!Ne().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let a=s.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);s.readAsArrayBuffer(a)}this.offset=n})),done:!1}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function cee(e,t={},n){let s,a;"string"==typeof e?s=e:(s=e.url,a=dee(e));const r=await(n||dr)(s,a);if(r.ok){const e=new Uint8Array(await r.arrayBuffer());return new uee(e,t)}throw new Error(r.statusText)}const dee=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity})
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */;function hee(e){return"string"==typeof e&&"file://"===e.slice(0,7)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class pee extends nee{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(hee(this.input)&&Ne().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.slice(7))}return new uee(this.input,this.options)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class mee extends nee{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return hee(this.url)?new pee(this.url,this.fileOptions).iterator():cee(this.url,this.fileOptions)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function fee(e,t={}){return new q6(new mee(e),t)}function gee(e){const t=BE(e);return pG((async()=>t))}function bee(e){return pG((async()=>{const t=await e();return BE((()=>t.next()))}))}async function yee(e,t){return tee.create(e,t)}async function xee(e){return eee.create(e)}
/** @license See the LICENSE file. */const wee="4.16.0",vee=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:q6,Dataset:hG,FileDataSource:pee,TextLineDataset:B6,URLDataSource:mee,array:mG,csv:fee,func:gee,generator:bee,microphone:xee,version_data:wee,webcam:yee,zip:fG},Symbol.toStringTag,{value:"Module"})),kee="4.16.0",Iee="4.16.0",See="4.16.0",Tee={"tfjs-core":o5,"tfjs-backend-cpu":kee,"tfjs-backend-webgl":Iee,"tfjs-data":wee,"tfjs-layers":fN,"tfjs-converter":_6,tfjs:See},Nee=Object.freeze(Object.defineProperty({__proto__:null,Abs:ze,Acos:We,Acosh:$e,AdadeltaOptimizer:Pb,AdagradOptimizer:_b,AdamOptimizer:Bb,AdamaxOptimizer:Hb,Add:Fe,AddN:Ve,All:Oe,Any:Ae,ArgMax:Xe,ArgMin:De,Asin:Ze,Asinh:Ke,Atan:Pe,Atan2:Be,Atanh:_e,AvgPool:He,AvgPool3D:Ye,AvgPool3DGrad:je,AvgPoolGrad:Ue,BatchMatMul:Qe,BatchToSpaceND:Je,Bincount:qe,BitwiseAnd:et,BroadcastArgs:nt,BroadcastTo:tt,Callback:S7,CallbackList:uT,Cast:st,Ceil:at,ClipByValue:rt,Complex:it,ComplexAbs:ot,Concat:lt,Conv2D:ut,Conv2DBackpropFilter:ct,Conv2DBackpropInput:dt,Conv3D:ht,Conv3DBackpropFilterV2:pt,Conv3DBackpropInputV2:mt,Cos:ft,Cosh:gt,CropAndResize:xt,Cumprod:bt,Cumsum:yt,CustomCallback:hT,DataStorage:S,DenseBincount:wt,DepthToSpace:vt,DepthwiseConv2dNative:kt,DepthwiseConv2dNativeBackpropFilter:It,DepthwiseConv2dNativeBackpropInput:St,Diag:Tt,Dilation2D:Nt,Dilation2DBackpropFilter:Rt,Dilation2DBackpropInput:Ct,Draw:Et,get ENV(){return Re},EarlyStopping:C7,Einsum:Mt,Elu:Lt,EluGrad:zt,Environment:ke,Equal:$t,Erf:Wt,Exp:Ft,ExpandDims:Vt,Expm1:Ot,FFT:At,Fill:Xt,FlipLeftRight:Dt,Floor:Zt,FloorDiv:Kt,FromPixels:Hs,FusedBatchNorm:Pt,FusedConv2D:js,FusedDepthwiseConv2D:Qs,GPGPUContext:HD,GatherNd:Bt,GatherV2:_t,GraphModel:D6,Greater:Ht,GreaterEqual:Ut,History:dT,IFFT:jt,Identity:Yt,Imag:Qt,InputSpec:SS,IsFinite:Jt,IsInf:qt,IsNan:en,KernelBackend:T,LRN:mn,LRNGrad:fn,LayerVariable:wS,LayersModel:BN,LeakyRelu:tn,Less:nn,LessEqual:sn,LinSpace:an,Log:rn,Log1p:on,LogSoftmax:hn,LogicalAnd:ln,LogicalNot:un,LogicalOr:cn,LogicalXor:dn,LowerBound:pn,MathBackendCPU:wG,MathBackendWebGL:CK,MatrixBandPart:gn,Max:bn,MaxPool:xn,MaxPool3D:vn,MaxPool3DGrad:kn,MaxPoolGrad:wn,MaxPoolWithArgmax:In,Maximum:yn,Mean:Sn,Min:Tn,Minimum:Nn,MirrorPad:Cn,Mod:Rn,MomentumOptimizer:Yb,Multinomial:En,Multiply:Gn,Neg:Mn,NonMaxSuppressionV3:zn,NonMaxSuppressionV4:Wn,NonMaxSuppressionV5:$n,NotEqual:Ln,OP_SCOPE_SUFFIX:vi,OneHot:Vn,OnesLike:Fn,Optimizer:Kb,OptimizerConstructors:Yy,Pack:On,PadV2:An,Pool:Xn,Pow:Dn,Prelu:Zn,Prod:Kn,RMSPropOptimizer:jb,RNN:tR,RaggedGather:Pn,RaggedRange:_n,RaggedTensorToTensor:Bn,Range:Hn,get Rank(){return Ar},Real:Un,RealDiv:Gt,Reciprocal:Yn,get Reduction(){return Bg},Relu:jn,Relu6:ns,Reshape:Qn,ResizeBilinear:es,ResizeBilinearGrad:ts,ResizeNearestNeighbor:Jn,ResizeNearestNeighborGrad:qn,Reverse:ss,RotateWithOffset:Us,Round:as,Rsqrt:rs,SGDOptimizer:Ub,ScatterNd:is,SearchSorted:ls,Select:us,Selu:cs,Sequential:JN,Sigmoid:fs,Sign:ms,Sin:hs,Sinh:ps,Slice:ds,Softmax:vs,Softplus:gs,SpaceToBatchND:xs,SparseFillEmptyRows:ks,SparseReshape:Is,SparseSegmentMean:Ss,SparseSegmentSum:Ts,SparseToDense:Ns,SplitV:ws,Sqrt:bs,Square:Rs,SquaredDifference:Cs,StaticRegexReplace:Es,Step:Bs,StridedSlice:Gs,StringNGrams:Ms,StringSplit:Ls,StringToHashBucketFast:zs,Sub:Ws,Sum:ys,SymbolicTensor:TS,Tan:$s,Tanh:Fs,Tensor:Fr,TensorBuffer:Mr,TensorScatterUpdate:os,Tile:Vs,TopK:Os,Transform:As,Transpose:Xs,Unique:Ds,Unpack:Zs,UnsortedSegmentSum:Ks,UpperBound:Ps,Variable:Or,ZerosLike:_s,_FusedMatMul:Ys,abs:Cl,acos:El,acosh:Ml,add:xl,addN:q2,all:zl,any:$l,argMax:Vl,argMin:Al,asin:Dl,asinh:Kl,atan:_l,atan2:Hl,atanh:Yl,avgPool:yu,avgPool3d:wu,backend:Yi,backend_util:rw,basicLSTMCell:t3,batchNorm:$u,batchNorm2d:Vu,batchNorm3d:Au,batchNorm4d:Du,batchToSpaceND:Lu,bincount:Ku,bitwiseAnd:s3,booleanMaskAsync:N9,broadcastArgs:r3,broadcastTo:_u,broadcast_util:Oc,browser:Ty,buffer:dl,callbacks:E7,cast:pl,ceil:Hu,clipByValue:ju,clone:fl,complex:Si,concat:ku,concat1d:Ju,concat2d:ec,concat3d:nc,concat4d:ac,constraints:p5,conv1d:lc,conv2d:ic,conv2dTranspose:hc,conv3d:mc,conv3dTranspose:yc,copyRegisteredKernels:ua,cos:wc,cosh:kc,cosineWindow:Cf,cumprod:Sc,cumsum:Nc,customGrad:gh,data:vee,denseBincount:Rc,deprecationWarn:zi,depthToSpace:Gc,depthwiseConv2d:Lc,deregisterOp:z7,device_util:mi,diag:o3,dilation2d:Wc,disableDeprecationWarnings:Li,dispose:Ai,disposeVariables:Wi,div:Il,divNoNan:Bc,dot:Uc,dropout:Tf,einsum:jc,elu:Jc,enableDebugMode:Mi,enableProdMode:Gi,enclosingPowerOfTwo:Nf,engine:$i,ensureShape:u3,env:Ne,equal:Xc,erf:ed,euclideanNorm:Nd,exp:Rd,expandDims:Gd,expm1:Ld,eye:Fd,fft:Wm,fill:Uu,findBackend:Bi,findBackendFactory:Hi,floor:Od,floorDiv:vl,forceHalfFloat:EK,fused:X9,gather:Xd,gatherND:$9,gather_util:Cy,getBackend:Pi,getGradient:sa,getKernel:na,getKernelsForBackend:aa,gpgpu_util:BD,grad:dh,grads:hh,greater:Zd,greaterEqual:Pd,ifft:Fm,imag:Bd,image:Mb,inTopKAsync:V9,initializers:E5,input:L5,io:s5,irfft:Om,isFinite:Ud,isInf:jd,isNaN:Jd,keep:Xi,kernel_impls:l5,layers:n7,leakyRelu:eh,less:nh,lessEqual:ah,linalg:Lb,linspace:c3,loadGraphModel:Z6,loadGraphModelSync:K6,loadLayersModel:YN,localResponseNormalization:ih,log:lh,log1p:ch,logSigmoid:Ih,logSoftmax:Ch,logSumExp:Eh,logicalAnd:Mh,logicalNot:zh,logicalOr:$h,logicalXor:Vh,losses:zb,lowerBound:m3,matMul:Su,math:i5,max:cd,maxPool:Ah,maxPool3d:Dh,maxPoolWithArgmax:g3,maximum:Kh,mean:_h,memory:Fi,meshgrid:b3,metrics:y7,min:hd,minimum:Yh,mirrorPad:Qh,mod:qh,model:G5,models:x7,moments:tp,movingAverage:R9,mul:Tl,multiRNNCell:x3,multinomial:v3,neg:xh,nextFrame:Jy,norm:Sd,notEqual:sp,oneHot:rp,ones:Hh,onesLike:op,op:ki,outerProduct:I3,pad:up,pad1d:T3,pad2d:C3,pad3d:E3,pad4d:M3,pool:fp,pow:md,prelu:bp,print:gl,prod:xp,profile:Vi,raggedGather:z3,raggedRange:$3,raggedTensorToTensor:V3,rand:A3,randomGamma:n9,randomNormal:Yp,randomStandardNormal:a9,randomUniform:Qp,randomUniformInt:i9,range:Jp,ready:Ki,real:em,reciprocal:nm,registerBackend:Ui,registerCallbackConstructor:z5,registerGradient:ia,registerKernel:ra,registerOp:M7,regularizers:I7,relu:am,relu6:im,removeBackend:_i,reshape:gu,reverse:lm,reverse1d:l9,reverse2d:c9,reverse3d:h9,reverse4d:m9,rfft:Zm,round:cm,rsqrt:hm,scalar:fd,scatterND:G9,scatter_util:lf,searchSorted:p3,selu:mm,separableConv2d:gm,sequential:M5,serialization:Zb,setBackend:Zi,setPlatform:ji,setWebGLContext:jO,setdiff1dAsync:g9,shared:ez,sigmoid:Nu,sign:ym,signal:Gb,sin:wm,sinh:km,slice:Ru,slice1d:Sm,slice2d:Nm,slice3d:Rm,slice4d:Gm,slice_util:Uy,softmax:Lm,softplus:vh,spaceToBatchND:dp,sparse:Wb,sparseToDense:z9,spectral:Eb,split:Xm,sqrt:bd,square:xd,squaredDifference:Pm,squeeze:Bm,stack:Um,step:jm,stridedSlice:Jm,string:$b,sub:Th,sum:vd,sumOutType:Br,tan:ef,tanh:Gu,tensor:Ni,tensor1d:tf,tensor2d:nf,tensor3d:sf,tensor4d:b9,tensor5d:y9,tensor6d:x9,tensorScatterUpdate:v9,tensor_util:ti,test_util:e9,tidy:Oi,tile:Wd,time:Di,topk:cf,train:jy,transpose:kf,truncatedNormal:hf,unique:mf,unregisterGradient:la,unregisterKernel:oa,unsortedSegmentSum:gf,unstack:yf,upcastType:_r,upperBound:k9,util:gr,valueAndGrad:ph,valueAndGrads:mh,variable:xf,variableGrads:fh,version:Tee,version_converter:_6,version_core:o5,version_cpu:kee,version_layers:fN,version_webgl:Iee,webgl:GK,webgl_util:uX,where:Zc,whereAsync:S9,zeros:Bh,zerosLike:Pc},Symbol.toStringTag,{value:"Module"})),Cee=new h.kn4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Cee.compose(new h.Pq0,new h.PTz,new h.Pq0(.001,.001,.001));const Ree=(new h.kn4).set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);class Eee{constructor({container:e,imageTargetSrc:t,maxTrack:n,uiLoading:s="yes",uiScanning:a="yes",uiError:r="yes",filterMinCF:i=null,filterBeta:o=null,warmupTolerance:l=null,missTolerance:u=null,userDeviceId:c=null,environmentDeviceId:d=null}){this.container=e,this.imageTargetSrc=t,this.maxTrack=n,this.filterMinCF=i,this.filterBeta=o,this.warmupTolerance=l,this.missTolerance=u,this.ui=new w({uiLoading:s,uiScanning:a,uiError:r}),this.userDeviceId=c,this.environmentDeviceId=d,this.shouldFaceUser=!1,this.scene=new h.Z58,this.cssScene=new h.Z58,this.renderer=new h.JeP({antialias:!0,alpha:!0}),this.cssRenderer=new Q2.a0({antialias:!0}),this.renderer.outputEncoding=h.S2Q,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new h.ubm,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach((function(e){e.stop()})),this.video.remove()}switchCamera(){this.shouldFaceUser=!this.shouldFaceUser,this.stop(),this.start()}addAnchor(e){const t=new h.YJl;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!1,visible:!1};return this.anchors.push(n),this.scene.add(t),n}addCSSAnchor(e){const t=new h.YJl;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!0,visible:!1};return this.anchors.push(n),this.cssScene.add(t),n}_startVideo(){return new Promise(((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void t();const n={audio:!1,video:{}};this.shouldFaceUser?this.userDeviceId?n.video.deviceId={exact:this.userDeviceId}:n.video.facingMode="user":this.environmentDeviceId?n.video.deviceId={exact:this.environmentDeviceId}:n.video.facingMode="environment",navigator.mediaDevices.getUserMedia(n).then((t=>{this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()})),this.video.srcObject=t})).catch((e=>{console.log("getUserMedia error",e),t()}))}))}_startAR(){return new Promise((async(e,t)=>{const n=this.video;this.container,this.controller=new j2({inputWidth:n.videoWidth,inputHeight:n.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:e=>{if("updateMatrix"===e.type){const{targetIndex:t,worldMatrix:n}=e;for(let e=0;e<this.anchors.length;e++)if(this.anchors[e].targetIndex===t){if(this.anchors[e].css?this.anchors[e].group.children.forEach((e=>{e.element.style.visibility=null===n?"hidden":"visible"})):this.anchors[e].group.visible=null!==n,null!==n){let s=new h.kn4;s.elements=[...n],s.multiply(this.postMatrixs[t]),this.anchors[e].css&&s.multiply(Cee),this.anchors[e].group.matrix=s}else this.anchors[e].group.matrix=Ree;this.anchors[e].visible&&null===n&&(this.anchors[e].visible=!1,this.anchors[e].onTargetLost&&this.anchors[e].onTargetLost()),!this.anchors[e].visible&&null!==n&&(this.anchors[e].visible=!0,this.anchors[e].onTargetFound&&this.anchors[e].onTargetFound()),this.anchors[e].onTargetUpdate&&this.anchors[e].onTargetUpdate()}this.anchors.reduce(((e,t)=>e||t.visible),!1)?this.ui.hideScanning():this.ui.showScanning()}}}),this.resize();const{dimensions:s}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let a=0;a<s.length;a++){const e=new h.Pq0,t=new h.PTz,n=new h.Pq0,[r,i]=s[a];e.x=r/2,e.y=r/2+(i-r)/2,n.x=r,n.y=r,n.z=r;const o=new h.kn4;o.compose(e,t,n),this.postMatrixs.push(o)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()}))}resize(){const{renderer:e,cssRenderer:t,camera:n,container:s,video:a}=this;if(!a)return;let r,i;this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight);const o=a.videoWidth/a.videoHeight,l=s.clientWidth/s.clientHeight;o>l?(i=s.clientHeight,r=i*o):(r=s.clientWidth,i=r/o);const u=this.controller.getProjectionMatrix(),c=this.controller.inputWidth/this.controller.inputHeight;let d,h,p;d=c>l?this.video.width/this.controller.inputWidth:this.video.height/this.controller.inputHeight,c>l?(h=s.clientHeight,h*=d):(p=s.clientWidth,h=p/this.controller.inputWidth*this.controller.inputHeight,h*=d);let m=s.clientHeight/h;const f=2*Math.atan(1/u[5]*m)*180/Math.PI,g=u[14]/(u[10]-1),b=u[14]/(u[10]+1);u[5],u[0],n.fov=f,n.near=g,n.far=b,n.aspect=s.clientWidth/s.clientHeight,n.updateProjectionMatrix(),a.style.top=-(i-s.clientHeight)/2+"px",a.style.left=-(r-s.clientWidth)/2+"px",a.style.width=r+"px",a.style.height=i+"px";const y=e.domElement,x=t.domElement;y.style.position="absolute",y.style.left=0,y.style.top=0,y.style.width=s.clientWidth+"px",y.style.height=s.clientHeight+"px",x.style.position="absolute",x.style.left=0,x.style.top=0,x.style.width=s.clientWidth+"px",x.style.height=s.clientHeight+"px",e.setSize(s.clientWidth,s.clientHeight),t.setSize(s.clientWidth,s.clientHeight)}}window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE={}),window.MINDAR.IMAGE.MindARThree=Eee,window.MINDAR.IMAGE.tf=Nee;var Gee=n(8776),Mee=(n(1454),{smoothMatrixChange(e,t){return t.map(((t,n)=>e[n]+(t-e[n])/10))}}),Lee={state:{target_anchor:-1,frame_callbacks_stack:[],scene:{anchors:[],scene_anchor:null},options:null},mutations:{updateSceneAnchorMatrix(e){let t,n;if(console.log(e.scene.scene_anchor.visible),e.scene.anchors.forEach(((e,s)=>{1==e.visible&&(t=e,n=s)})),!e.scene.scene_anchor||!t)return e.target_anchor=-1,e.scene.scene_anchor.visible=!1,void(e.scene.scene_anchor.group.visible=!1);e.target_anchor=n,e.scene.scene_anchor.visible=!0,e.scene.scene_anchor.group.visible=!0,console.log(e.scene.scene_anchor.visible);let s=e.scene.scene_anchor.group.matrix,a=t.group.matrix;s.elements=Mee.smoothMatrixChange(s.elements,a.elements)},addFrameCallback(e,t){e.frame_callbacks_stack.push(t)},addLight(e,t){console.log("THREE",Gee);const n=new Gee.PointLight(4210752);n.position.set(-40,-120,-40),t.group.add(n)}},actions:{async setUpScene({state:e,commit:t},n){e.options=n;const s=new window.MINDAR.IMAGE.MindARThree({container:document.querySelector("#container"),imageTargetSrc:e.options.target}),{renderer:a,scene:r,camera:i}=s;let o=0;for(o;o<e.options.contacts.length;o++)e.scene.anchors.push(s.addAnchor(o));e.scene.scene_anchor=s.addAnchor(o+1);const l=async()=>{await s.start(),a.setAnimationLoop((()=>{e.frame_callbacks_stack.forEach((e=>e())),a.render(r,i)})),t("addFrameCallback",(()=>t("updateSceneAnchorMatrix")))};window.requestAnimationFrame(l),t("addLight",e.scene.scene_anchor)}}},zee=n(1387);const Wee={class:"home"},$ee=["href"];function Fee(e,t,n,s,r,i){return(0,a.uX)(),(0,a.CE)("div",Wee,[e.options?((0,a.uX)(),(0,a.CE)("a",{key:0,href:e.options.contacts[e.contact],download:"",ref:"contact"},null,8,$ee)):(0,a.Q3)("",!0),t[0]||(t[0]=(0,a.Lk)("div",{id:"container"},null,-1))])}var Vee=n(2439);const Oee=new Vee.B;var Aee={name:"App",data:()=>({options:null,contact:0}),methods:{async loadModel(e){return console.log(e),await Oee.loadAsync(e)},loadContacts(){this.$refs.contact.click()},setUpMainModel(e){let t=e.scene;t.scale.set(.5,.5,.5),t.rotation.set(0,0,0),this.$store.state.scene.scene_anchor.group.add(t)},async loadOptions(){return await(await fetch("./options.json",{headers:{"Content-Type":"application/json",Accept:"application/json"}})).json()},async setUp(){this.options=await this.loadOptions();let e=await this.loadModel(this.options.gltf);this.$nextTick((async()=>{this.loadContacts(),await this.$store.dispatch("setUpScene",this.options),this.setUpMainModel(e)}))}},async mounted(){await navigator.mediaDevices.getUserMedia({video:!0}),this.setUp()}};const Xee=(0,o.A)(Aee,[["render",Fee]]);var Dee=Xee;const Zee=(0,zee.aE)({history:(0,zee.LA)(),routes:[{path:"/:id?",component:Dee}]}),Kee=(0,d.y$)(Lee),Pee=(0,s.Ef)(c);Pee.use(Zee),Pee.use(Kee),Pee.mount("#app")}},t={};function n(s){var a=t[s];if(void 0!==a)return a.exports;var r=t[s]={exports:{}};return e[s].call(r.exports,r,r.exports,n),r.exports}n.m=e,function(){var e=[];n.O=function(t,s,a,r){if(!s){var i=1/0;for(c=0;c<e.length;c++){s=e[c][0],a=e[c][1],r=e[c][2];for(var o=!0,l=0;l<s.length;l++)(!1&r||i>=r)&&Object.keys(n.O).every((function(e){return n.O[e](s[l])}))?s.splice(l--,1):(o=!1,r<i&&(i=r));if(o){e.splice(c--,1);var u=a();void 0!==u&&(t=u)}}return t}r=r||0;for(var c=e.length;c>0&&e[c-1][2]>r;c--)e[c]=e[c-1];e[c]=[s,a,r]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){n.d=function(e,t){for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};n.O.j=function(t){return 0===e[t]};var t=function(t,s){var a,r,i=s[0],o=s[1],l=s[2],u=0;if(i.some((function(t){return 0!==e[t]}))){for(a in o)n.o(o,a)&&(n.m[a]=o[a]);if(l)var c=l(n)}for(t&&t(s);u<i.length;u++)r=i[u],n.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return n.O(c)},s=self["webpackChunkar_business_card"]=self["webpackChunkar_business_card"]||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))}();var s=n.O(void 0,[504],(function(){return n(4204)}));s=n.O(s)})();
//# sourceMappingURL=app.b83098ef.js.map