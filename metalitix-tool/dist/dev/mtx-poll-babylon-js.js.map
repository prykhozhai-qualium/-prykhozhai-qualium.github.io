{"version":3,"file":"mtx-poll-babylon-js.js","mappings":"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","sources":["webpack://MetalitixLogger/webpack/universalModuleDefinition","webpack://MetalitixLogger/./node_modules/three/src/math/MathUtils.js","webpack://MetalitixLogger/./src/constants/index.ts","webpack://MetalitixLogger/./src/lib/mtx-poll-base.ts","webpack://MetalitixLogger/./src/services/index.ts","webpack://MetalitixLogger/./src/types/index.ts","webpack://MetalitixLogger/./src/utils/index.ts","webpack://MetalitixLogger/webpack/bootstrap","webpack://MetalitixLogger/webpack/runtime/define property getters","webpack://MetalitixLogger/webpack/runtime/hasOwnProperty shorthand","webpack://MetalitixLogger/webpack/runtime/make namespace object","webpack://MetalitixLogger/./src/lib/mtx-poll-babylon-js.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MetalitixLogger\"] = factory();\n\telse\n\t\troot[\"MetalitixLogger\"] = factory();\n})(self, () => {\nreturn ","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\n\n\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n};\n","export const isProduction = process.env.NODE_ENV === 'production';\nexport const isStaging = process.env.NODE_ENV === 'staging';\nexport const API_ORIGIN = isProduction\n  ? 'https://app.metalitix.com'\n  : isStaging\n  ? 'https://metalitix-staging.aircards.io'\n  : 'https://metalitix-dev.aircards.io';\nexport const API_VERSION = 'v1';\nexport const API_URL = `${API_ORIGIN}/api/${API_VERSION}`;\n\nexport const MIN_INTERVAL_VALUE = 100;\nexport const MAX_INTERVAL_VALUE = 1000;\nexport const DEFAULT_INTERVAL_VALUE = 500;\n\nexport const MAXIMUM_BATCH_RECORDS_LENGTH = 100;\n/** Wait maximum 3 minutes if limit of MAXIMUM_BATCH_RECORDS_LENGTH was not reached */\nexport const MAXIMUM_BATCH_SENDING_INTERVAL = 3 * 60 * 1000;\n/** Maximum server keepalive time since last successful pull data to the server */\nexport const MAXIMUM_SESSION_KEEPALIVE_TIME = 5 * 60 * 1000;\n","import { generateUUID } from 'three/src/math/MathUtils';\nimport { sendXRAnalyticsData } from '../services';\nimport {\n  DEFAULT_INTERVAL_VALUE,\n  MAX_INTERVAL_VALUE,\n  MAXIMUM_BATCH_RECORDS_LENGTH,\n  MAXIMUM_BATCH_SENDING_INTERVAL,\n  MAXIMUM_SESSION_KEEPALIVE_TIME,\n  MIN_INTERVAL_VALUE,\n} from '../constants';\nimport { MetalitixLoggerOptions, XRAnalytics } from '../types';\nimport { deepEqual } from '../utils';\n\nexport default abstract class MetalitixLoggerBase<T> {\n  private appKey: string;\n  private apiVersion: string;\n  private interval: number = DEFAULT_INTERVAL_VALUE;\n  private sessionId: string | null;\n  private pollRecords: XRAnalytics.Record[];\n  private lastPollTimestamp: number;\n  private nextPoll: number;\n  private pollInProgress: boolean;\n  private previousCameraData: XRAnalytics.UserCamera | null;\n  private customData: { [key: string]: any } = {};\n  private userMeta: Partial<XRAnalytics.UserMetadata>;\n  protected object3D: T | null = null;\n\n  constructor(appKey: string, options: MetalitixLoggerOptions = {}) {\n    const { pollInterval = DEFAULT_INTERVAL_VALUE, apiVersion = 'v2', userMeta = {} } = options;\n    this.appKey = appKey;\n    this.apiVersion = apiVersion;\n    this.userMeta = userMeta;\n    this.setPollInterval(pollInterval);\n    this.sessionId = null;\n    this.previousCameraData = null;\n    this.pollRecords = [];\n    this.lastPollTimestamp = -1;\n    this.pollInProgress = false;\n    this.nextPoll = -1;\n  }\n\n  public setPollInterval = (pollInterval: number) => {\n    this.interval = Math.min(MAX_INTERVAL_VALUE, Math.max(MIN_INTERVAL_VALUE, pollInterval));\n  };\n\n  public setCustomField = (key: string, value: any) => {\n    this.customData[key] = value;\n  };\n\n  public removeCustomField = (key: string) => {\n    delete this.customData[key];\n  };\n\n  private getRecord = (\n    eventType: XRAnalytics.EventTypes,\n    sessionId: string,\n    { userEvent, userMeta, camera, data }: XRAnalytics.RecordDataFields,\n  ) => {\n    const resultData = Object.assign({}, this.customData, data);\n\n    const base: XRAnalytics.RecordBase = {\n      object: 'xr.analytics.record',\n      appkey: this.appKey,\n      apiver: this.apiVersion,\n      sessionId,\n      timestamp: Date.now(),\n      data: resultData,\n    };\n\n    if (eventType === XRAnalytics.EventTypes.SessionStart) {\n      console.assert(userMeta !== undefined, '\"userMeta\" is required for session start!');\n      console.assert(camera !== undefined, '\"camera\" is required for session start!');\n      return Object.assign({}, base, { eventType, userMeta, camera }) as XRAnalytics.SessionStartRecord;\n    }\n\n    if (eventType === XRAnalytics.EventTypes.SessionUpdate) {\n      console.assert(userMeta !== undefined, '\"userMeta\" is required for session update!');\n      return Object.assign({}, base, { eventType, userMeta, camera }) as XRAnalytics.SessionUpdateRecord;\n    }\n\n    if (eventType === XRAnalytics.EventTypes.SessionEnd) {\n      return Object.assign({}, base, { eventType, camera }) as XRAnalytics.SessionEndRecord;\n    }\n\n    if (eventType === XRAnalytics.EventTypes.UserPosition) {\n      return Object.assign({}, base, { eventType }) as XRAnalytics.UserPositionRecord;\n    }\n\n    if (eventType === XRAnalytics.EventTypes.UserInteraction) {\n      console.assert(userEvent !== undefined, '\"userEvent\" is required for user interaction!');\n      return Object.assign({}, base, { eventType, userEvent }) as XRAnalytics.UserInteractionRecord;\n    }\n\n    throw new Error('Unknown eventType: ' + eventType);\n  };\n\n  private addRecord = (\n    eventType: XRAnalytics.EventTypes,\n    { userEvent, userMeta, camera, data }: XRAnalytics.RecordDataFields,\n  ) => {\n    if (this.sessionId === null) {\n      return;\n    }\n\n    const record = this.getRecord(eventType, this.sessionId, { userEvent, userMeta, camera, data });\n\n    this.pollRecords.push(record);\n  };\n\n  private sendPosition = async (sendAll = false) => {\n    this.pollInProgress = true;\n\n    try {\n      const items = this.pollRecords.slice(0, MAXIMUM_BATCH_RECORDS_LENGTH);\n\n      const batchRecordsData = {\n        object: 'xr.analytics.batch.records',\n        appkey: this.appKey,\n        apiver: this.apiVersion,\n        items,\n      };\n\n      await sendXRAnalyticsData(batchRecordsData);\n      this.pollRecords = this.pollRecords.slice(MAXIMUM_BATCH_RECORDS_LENGTH);\n\n      if (this.pollRecords.length > 0 && sendAll) {\n        await this.sendPosition(true);\n      }\n\n      this.lastPollTimestamp = Date.now();\n    } catch (error) {\n      console.log('Something went wrong', error);\n      this.forceStopLoop();\n    } finally {\n      this.pollInProgress = false;\n    }\n  };\n\n  protected abstract getPositionData: (object3D: T | null) => XRAnalytics.Data | undefined;\n  protected abstract getCameraData: (object3D: T | null) => XRAnalytics.UserCamera | undefined;\n\n  private getUserMeta = (): Partial<XRAnalytics.UserMetadata> => {\n    return Object.assign({}, this.userMeta, {\n      userAgent: window.navigator.userAgent,\n      pagePath: location.pathname,\n      pageQuery: location.search,\n    });\n  };\n\n  private addSessionStart = () => {\n    const data = this.getPositionData(this.object3D);\n    const camera = this.getCameraData(this.object3D);\n    const userMeta = this.getUserMeta();\n    this.previousCameraData = camera || null;\n\n    if (data === undefined) {\n      return;\n    }\n\n    this.addRecord(XRAnalytics.EventTypes.SessionStart, { data, camera, userMeta });\n  };\n  private addSessionEnd = () => {\n    const data = this.getPositionData(this.object3D);\n    let camera = this.getCameraData(this.object3D);\n\n    if (data === undefined) {\n      return;\n    }\n\n    if (deepEqual(camera, this.previousCameraData)) {\n      /** Don't send the camera object if it was not changed */\n      camera = undefined;\n    }\n\n    this.addRecord(XRAnalytics.EventTypes.SessionEnd, { data, camera });\n  };\n  private addUserPosition = () => {\n    const data = this.getPositionData(this.object3D);\n\n    if (data === undefined) {\n      return;\n    }\n\n    this.addRecord(XRAnalytics.EventTypes.UserPosition, { data });\n  };\n  private addSessionUpdate = (camera?: XRAnalytics.UserCamera) => {\n    const data = this.getPositionData(this.object3D);\n    const userMeta = this.getUserMeta();\n\n    if (data === undefined) {\n      return;\n    }\n\n    this.addRecord(XRAnalytics.EventTypes.SessionUpdate, { data, camera, userMeta });\n  };\n\n  private sddNextUserPositionAndUpdateCameraIfNeeded = () => {\n    const camera = this.getCameraData(this.object3D);\n\n    if (camera === undefined || deepEqual(camera, this.previousCameraData)) {\n      this.addUserPosition();\n    } else {\n      this.addSessionUpdate(camera);\n      this.previousCameraData = camera;\n    }\n  };\n\n  private sendPositionLoop = (start = false) => {\n    /** Don't push position twice on session start */\n    if (!start) {\n      this.sddNextUserPositionAndUpdateCameraIfNeeded();\n    }\n\n    if (\n      !this.pollInProgress &&\n      this.pollRecords.length > 0 &&\n      (this.pollRecords.length >= MAXIMUM_BATCH_RECORDS_LENGTH ||\n        Date.now() - this.lastPollTimestamp >= MAXIMUM_BATCH_SENDING_INTERVAL)\n    ) {\n      this.sendPosition();\n    }\n\n    /** Stop polling data if session was ended and there is nothing to send */\n    if (this.sessionId === null && this.pollRecords.length === 0) {\n      return;\n    }\n\n    this.nextPoll = window.setTimeout(() => this.sendPositionLoop(), this.interval);\n  };\n\n  private forceStopLoop = () => clearTimeout(this.nextPoll);\n\n  private clearSessionPollRecords = () => {\n    this.pollRecords = [];\n  };\n\n  private handleVisibilityChange = async () => {\n    /**\n     *  If user close or switch the browser tab - we need to pause the session\n     *  Then if user came back to the browser - we need to try to resume the session if it's possible or start new one\n     **/\n    return document.visibilityState === 'hidden' ? this.pauseSession() : await this.resumeSession();\n  };\n\n  public startSession = (object3D: T) => {\n    this.object3D = object3D;\n    this.sessionId = generateUUID();\n    this.addSessionStart();\n    this.sendPositionLoop(true);\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\n  };\n\n  public pauseSession = () => {\n    /** If the session was paused we need to send all our data and stop collecting new items */\n    this.forceStopLoop();\n    return this.sendPosition(true);\n  };\n\n  public resumeSession = async () => {\n    if (this.lastPollTimestamp < 0 || Date.now() - this.lastPollTimestamp <= MAXIMUM_SESSION_KEEPALIVE_TIME) {\n      /** If the session was resumed on time - we need to continue collect current session data */\n      this.forceStopLoop(); // in case if session was not paused\n      this.sendPositionLoop();\n    } else if (this.object3D !== null) {\n      /** If the session was resumed when server already has closed the session - we need to start new session */\n      const object3D = this.object3D;\n      await this.endSession();\n      this.startSession(object3D);\n    }\n  };\n\n  public endSession = async () => {\n    if (this.sessionId === null) {\n      /** The session was already ended */\n      return;\n    }\n\n    this.addSessionEnd();\n    this.object3D = null;\n    this.sessionId = null;\n    this.previousCameraData = null;\n    this.forceStopLoop();\n    await this.sendPosition(true);\n    this.clearSessionPollRecords();\n    this.lastPollTimestamp = -1;\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n  };\n\n  public updateUserMeta = (userMeta: Partial<XRAnalytics.UserMetadata>) => {\n    if (userMeta === undefined) {\n      return;\n    }\n\n    this.userMeta = userMeta;\n\n    this.addSessionUpdate();\n  };\n\n  private sendUserEvent = (\n    eventName: string,\n    eventType: XRAnalytics.UserInteractionTypes | string,\n    target?: string | XRAnalytics.EventPoint | any,\n    points?: XRAnalytics.EventPoint[],\n    params?: object,\n  ) => {\n    const data = this.getPositionData(this.object3D);\n    const userEvent: XRAnalytics.UserEvent = {\n      object: 'user.event',\n      eventName,\n      eventType,\n      target,\n      points,\n      params,\n    };\n\n    if (data === undefined) {\n      return;\n    }\n\n    this.addRecord(XRAnalytics.EventTypes.UserInteraction, { data, userEvent });\n  };\n\n  public logCustomEvent = (eventName: string, params: object) => {\n    this.sendUserEvent(eventName, 'custom', undefined, undefined, params);\n  };\n\n  public logKeyDownEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'key_down',\n      XRAnalytics.UserInteractionTypes.KeyDown,\n      {\n        state: XRAnalytics.PointStates.Pressed,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logKeyPressEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'key_press',\n      XRAnalytics.UserInteractionTypes.KeyPress,\n      {\n        state: XRAnalytics.PointStates.Stationary,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logKeyUpEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'key_up',\n      XRAnalytics.UserInteractionTypes.KeyUp,\n      {\n        state: XRAnalytics.PointStates.Released,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMouseEnterEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_enter',\n      XRAnalytics.UserInteractionTypes.MouseEnter,\n      {\n        state: XRAnalytics.PointStates.Stationary,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMouseLeaveEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_leave',\n      XRAnalytics.UserInteractionTypes.MouseLeave,\n      {\n        state: XRAnalytics.PointStates.Stationary,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMouseOverEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_over',\n      XRAnalytics.UserInteractionTypes.MouseOver,\n      {\n        state: XRAnalytics.PointStates.Stationary,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMouseOutEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_out',\n      XRAnalytics.UserInteractionTypes.MouseOut,\n      {\n        state: XRAnalytics.PointStates.Stationary,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMouseDownEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_down',\n      XRAnalytics.UserInteractionTypes.MouseDown,\n      {\n        state: XRAnalytics.PointStates.Pressed,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMouseUpEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_up',\n      XRAnalytics.UserInteractionTypes.MouseUp,\n      {\n        state: XRAnalytics.PointStates.Released,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMouseMoveEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_move',\n      XRAnalytics.UserInteractionTypes.MouseMove,\n      {\n        state: XRAnalytics.PointStates.Updated,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logMousePressEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'mouse_press',\n      XRAnalytics.UserInteractionTypes.MousePress,\n      {\n        state: XRAnalytics.PointStates.Stationary,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logTouchTapEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'touch_tap',\n      XRAnalytics.UserInteractionTypes.TouchTap,\n      {\n        state: XRAnalytics.PointStates.Stationary,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logTouchStartEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'touch_start',\n      XRAnalytics.UserInteractionTypes.TouchStart,\n      {\n        state: XRAnalytics.PointStates.Pressed,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logTouchMoveEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'touch_move',\n      XRAnalytics.UserInteractionTypes.TouchMove,\n      {\n        state: XRAnalytics.PointStates.Updated,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logTouchEndEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'touch_end',\n      XRAnalytics.UserInteractionTypes.TouchEnd,\n      {\n        state: XRAnalytics.PointStates.Released,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logZoomStartEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'zoom_start',\n      XRAnalytics.UserInteractionTypes.ZoomStart,\n      {\n        state: XRAnalytics.PointStates.Pressed,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logZoomUpdateEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'zoom_update',\n      XRAnalytics.UserInteractionTypes.ZoomUpdate,\n      {\n        state: XRAnalytics.PointStates.Updated,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n\n  public logZoomEndEvent = (x: number, y: number, params?: object) => {\n    this.sendUserEvent(\n      'zoom_end',\n      XRAnalytics.UserInteractionTypes.ZoomEnd,\n      {\n        state: XRAnalytics.PointStates.Released,\n        timestamp: Date.now(),\n        position: { x, y },\n      },\n      undefined,\n      params,\n    );\n  };\n}\n","import { API_URL } from '../constants';\nimport { XRAnalytics } from '../types';\n\nexport async function sendXRAnalyticsData(data: XRAnalytics.Record | XRAnalytics.BatchRecord) {\n  console.log('poll', data);\n\n  return fetch(`${API_URL}/xr-analytics`, {\n    method: 'POST',\n    keepalive: true,\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n}\n","export interface MetalitixLoggerOptions {\n  pollInterval?: number;\n  apiVersion?: string;\n  userMeta?: Partial<XRAnalytics.UserMetadata>;\n}\n\nexport interface Vector2D {\n  x: number;\n  y: number;\n}\n\nexport interface Vector3D {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport namespace XRAnalytics {\n  export enum PointStates {\n    Pressed = 'state.pressed',\n    Updated = 'state.updated',\n    Released = 'state.released',\n    Stationary = 'state.stationary',\n  }\n\n  export const KnownPointStates = Object.values(PointStates);\n\n  export enum UserInteractionTypes {\n    KeyDown = 'user.interaction.key_down',\n    KeyPress = 'user.interaction.key_press',\n    KeyUp = 'user.interaction.key_down',\n    MouseEnter = 'user.interaction.mouse_enter',\n    MouseLeave = 'user.interaction.mouse_leave',\n    MouseOver = 'user.interaction.mouse_over',\n    MouseOut = 'user.interaction.mouse_out',\n    MouseDown = 'user.interaction.mouse_down',\n    MouseUp = 'user.interaction.mouse_up',\n    MouseMove = 'user.interaction.mouse_move',\n    MousePress = 'user.interaction.mouse_press',\n    TouchTap = 'user.interaction.touch_tap',\n    TouchStart = 'user.interaction.touch_start',\n    TouchMove = 'user.interaction.touch_move',\n    TouchEnd = 'user.interaction.touch_end',\n    ZoomStart = 'user.interaction.zoom_start',\n    ZoomUpdate = 'user.interaction.zoom_update',\n    ZoomEnd = 'user.interaction.zoom_end',\n  }\n\n  export const KnownUserInteractionTypes = Object.values(UserInteractionTypes);\n\n  /**\n   * XR Analytic Log Record Event Point\n   * - describes event point params\n   * @typedef {object} XRAnalyticEventPoint\n   * @property {string} state - point state\n   * @property {number} timestamp - timestamp in msec or ISO string\n   * @property {oneOf|Vector2D|Vector3D} timestamp - timestamp in msec or ISO string\n   */\n  export interface EventPoint {\n    state: PointStates;\n    timestamp: number;\n    position: Vector2D | Vector3D;\n  }\n\n  /**\n   * XR Analytic Log Record User Event\n   * - describes user events params\n   * @typedef {object} XRAnalyticUserEvent\n   * @property {string} object - `user.event`\n   * @property {string} eventName - human-readable event name\n   * @property {string} eventType - event type identifier\n   * @property {string} target - optional field which describes target of this event\n   * @property {array<XRAnalyticEventPoint>} points - multiple points (for multi-touch) or single point\n   * @property {object} params - any additional params\n   */\n  export interface UserEvent {\n    object: string;\n    eventName: string;\n    eventType: UserInteractionTypes | string;\n    target?: string | EventPoint | any;\n    points?: EventPoint[];\n    params?: object;\n  }\n\n  export enum EventTypes {\n    UserPosition = 'event.user.position',\n    UserInteraction = 'event.user.interaction',\n    SessionStart = 'event.session.start',\n    SessionUpdate = 'event.session.update',\n    SessionEnd = 'event.session.end',\n  }\n\n  export const KnownEventTypes = Object.values(EventTypes);\n\n  /**\n   * XR Analytic Log Record User Camera\n   * - describes user camera params\n   * @typedef {object} XRAnalyticUserCamera\n   * @property {number} fieldOfView\n   * @property {number} aspectRatio\n   * @property {number} zNearPlane\n   * @property {number} zFarPlane\n   */\n  export interface UserCamera {\n    fieldOfView: number;\n    aspectRatio: number;\n    zNearPlane: number;\n    zFarPlane: number;\n  }\n\n  /**\n   * XR Analytic Log Record User Metadata\n   * - can contain different fields related to user client.\n   * These list of fields is approximate and all fields are optional.\n   * @typedef {object} XRAnalyticUserMetadata\n   * @property {string} ipAddress - user ip address\n   * @property {string} geolocation - user geolocation\n   * @property {string} userAgent - user client user-agent string\n   * @property {string} pagePath - current page\n   * @property {string} pageQuery - current query params\n   * @property {string} sceneName - current scene name\n   * @property {string} gameLocation - current map / in-game location\n   * @property {object} systemInfo - free dictionary of sys info (like OS ver or etc.)\n   * @property {object} params - any additional params\n   */\n  export interface UserMetadata {\n    ipAddress: string;\n    geolocation: string;\n    userAgent: string;\n    pagePath: string;\n    pageQuery: string;\n    sceneName: string;\n    gameLocation: string;\n    systemInfo: object;\n    params: object;\n  }\n\n  /**\n   * XR Analytic Log Record User Position\n   * - contain position, direction and optionally any additional custom fields\n   * @typedef {object} XRAnalyticRecordData\n   * @property {Vector3D} position - user position\n   * @property {Vector3D} direction - look at direction\n   */\n  export interface Data {\n    position: Vector3D;\n    direction: Vector3D;\n    [k: string]: any;\n  }\n\n  /**\n   * XR Analytic Log RecordBase\n   * @typedef {object} XRAnalyticRecord\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {string} sessionId - session uuid\n   * @property {number} timestamp - timestamp in msec or ISO string date\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   */\n  export interface RecordBase {\n    object: string;\n    sessionId: string;\n    timestamp: number;\n    appkey: string;\n    apiver: string;\n    data: Data;\n  }\n\n  /**\n   * XR Analytic Log RecordDataFields\n   * @typedef {object} XRAnalyticRecord\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   * @property {XRAnalyticUserMetadata} userMeta - field describing client metadata, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticUserCamera} camera - field describing user camera, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticUserEvent} userEvent - field describing event, actual for `event.user.interaction` events\n   */\n  export interface RecordDataFields {\n    data: Data;\n    userMeta?: Partial<UserMetadata>;\n    camera?: UserCamera;\n    userEvent?: UserEvent;\n  }\n\n  /**\n   * XR Analytic Log SessionStartRecord\n   * @typedef {object} XRAnalyticRecord\n   * @property {string} eventType - EventTypes.SessionStart event type\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {string} sessionId - session uuid\n   * @property {number} timestamp - timestamp in msec or ISO string date\n   * @property {XRAnalyticUserMetadata} userMeta - required field describing client metadata, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticUserCamera} camera - required field describing user camera, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   */\n  export interface SessionStartRecord extends RecordBase {\n    eventType: EventTypes.SessionStart;\n    userMeta: Partial<UserMetadata>;\n    camera: UserCamera;\n  }\n\n  /**\n   * XR Analytic Log SessionUpdateRecord\n   * @typedef {object} XRAnalyticRecord\n   * @property {string} eventType - EventTypes.SessionUpdate event type\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {string} sessionId - session uuid\n   * @property {number} timestamp - timestamp in msec or ISO string date\n   * @property {XRAnalyticUserMetadata} userMeta - required field describing client metadata, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticUserCamera} camera - optional field describing user camera, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   */\n  export interface SessionUpdateRecord extends RecordBase {\n    eventType: EventTypes.SessionUpdate;\n    userMeta: Partial<UserMetadata>;\n    camera?: UserCamera;\n  }\n\n  /**\n   * XR Analytic Log SessionEndRecord\n   * @typedef {object} XRAnalyticRecord\n   * @property {string} eventType - EventTypes.SessionEnd event type\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {string} sessionId - session uuid\n   * @property {number} timestamp - timestamp in msec or ISO string date\n   * @property {XRAnalyticUserCamera} camera - optional field describing user camera, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   */\n  export interface SessionEndRecord extends RecordBase {\n    eventType: EventTypes.SessionEnd;\n    camera?: UserCamera;\n  }\n\n  /**\n   * XR Analytic Log UserPositionRecord\n   * @typedef {object} XRAnalyticRecord\n   * @property {string} eventType - EventTypes.UserPosition event type\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {string} sessionId - session uuid\n   * @property {number} timestamp - timestamp in msec or ISO string date\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   */\n  export interface UserPositionRecord extends RecordBase {\n    eventType: EventTypes.UserPosition;\n  }\n\n  /**\n   * XR Analytic Log UserInteractionRecord\n   * @typedef {object} XRAnalyticRecord\n   * @property {string} eventType - EventTypes.UserPosition event type\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {string} sessionId - session uuid\n   * @property {number} timestamp - timestamp in msec or ISO string date\n   * @property {XRAnalyticUserEvent} userEvent - required field describing event, actual for `event.user.interaction` events\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   */\n  export interface UserInteractionRecord extends RecordBase {\n    eventType: EventTypes.UserInteraction;\n    userEvent: UserEvent;\n  }\n\n  /**\n   * XR Analytic Log Record\n   * @typedef {object} XRAnalyticRecord\n   * @property {string} eventType - supported event types\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {string} sessionId - session uuid\n   * @property {number} timestamp - timestamp in msec or ISO string date\n   * @property {XRAnalyticUserEvent} userEvent - field describing event, actual for `event.user.interaction` events\n   * @property {XRAnalyticUserMetadata} userMeta - field describing client metadata, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticUserCamera} camera - field describing user camera, actual for `event.user.session.start` and `event.user.session.update` events\n   * @property {XRAnalyticRecordData} data - user position and direction on the scene. Can contain any additional custom fields.\n   */\n  export type Record =\n    | SessionStartRecord\n    | SessionUpdateRecord\n    | SessionEndRecord\n    | UserPositionRecord\n    | UserInteractionRecord;\n\n  /**\n   * XR Analytic Log Batch Records\n   * @typedef {object} XRAnalyticBatchRecord\n   * @property {string} appkey - project API key\n   * @property {string} apiver - expected to be `'v2'`\n   * @property {array<XRAnalyticRecord>} items - array of individual events\n   */\n  export interface BatchRecord {\n    object: string;\n    appkey: string;\n    apiver: string;\n    items: Record[];\n  }\n}\n","export function deepEqual(x: any, y: any): boolean {\n  const ok = Object.keys;\n  const tx = typeof x;\n  const ty = typeof y;\n\n  return x && y && tx === 'object' && tx === ty ? ok(x).length === ok(y).length && ok(x).every(key => deepEqual(x[key], y[key])) : x === y;\n}\n\nexport function isObject(item: any): item is Object {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function mergeDeep(target: any, source: any) {\n  let output = Object.assign({}, target);\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key])) {\n        if (!(key in target)) Object.assign(output, { [key]: source[key] });\n        else output[key] = mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(output, { [key]: source[key] });\n      }\n    });\n  }\n  return output;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Scene } from 'babylonjs';\nimport { MetalitixLoggerOptions } from '../types';\nimport MetalitixLoggerBase from './mtx-poll-base';\n\nexport default class MetalitixLogger extends MetalitixLoggerBase<Scene> {\n  constructor(appKey: string, options: MetalitixLoggerOptions = {}) {\n    super(appKey, options);\n  }\n\n  protected getPositionData = (scene: Scene | null) => {\n    const camera = scene?.activeCamera ?? null;\n    if (camera === null) {\n      return undefined;\n    }\n\n    return {\n      position: { x: camera.position.x, y: camera.position.y, z: camera.position.z },\n      direction: { x: camera.absoluteRotation.x, y: camera.absoluteRotation.y, z: camera.absoluteRotation.z },\n    };\n  };\n\n  protected getCameraData = (scene: Scene | null) => {\n    const camera = scene?.activeCamera ?? null;\n    if (camera === null) {\n      return undefined;\n    }\n\n    return {\n      fieldOfView: camera.fov,\n      aspectRatio: camera.viewport.width / camera.viewport.height,\n      zNearPlane: camera.minZ,\n      zFarPlane: camera.maxZ,\n    };\n  };\n}\n"],"names":[],"sourceRoot":""}